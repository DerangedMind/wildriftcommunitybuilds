[{"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\index.tsx":"1","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\reportWebVitals.ts":"2","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\App\\App.tsx":"3","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\components\\Layout.tsx":"4","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\components\\Header\\Header.tsx":"5","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\components\\Footer\\Footer.tsx":"6","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Landing\\Landing.tsx":"7","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Builds\\Builds.tsx":"8","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\CreateBuild.tsx":"9"},{"size":505,"mtime":1611338810358,"results":"10","hashOfConfig":"11"},{"size":425,"mtime":499162500000,"results":"12","hashOfConfig":"11"},{"size":721,"mtime":1611409239594,"results":"13","hashOfConfig":"11"},{"size":619,"mtime":1611339072609,"results":"14","hashOfConfig":"11"},{"size":1127,"mtime":1611411200161,"results":"15","hashOfConfig":"11"},{"size":185,"mtime":1611338736561,"results":"16","hashOfConfig":"11"},{"size":670,"mtime":1611505371555,"results":"17","hashOfConfig":"11"},{"size":2537,"mtime":1611512180977,"results":"18","hashOfConfig":"11"},{"size":15939,"mtime":1611505706908,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"q16prs",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"22"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"22"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"22"},"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\index.tsx",[],["43","44"],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\reportWebVitals.ts",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\App\\App.tsx",["45","46","47"],"import React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport axios from 'axios';\n\n// Components\nimport Layout from '../../components/Layout';\nimport Landing from '../Landing/Landing';\nimport Builds from '../Builds/Builds';\nimport CreateBuild from '../Create/Build/CreateBuild';\n// CSS\n// Types\n\nexport default function App() {\n\treturn (\n\t\t<div className='App'>\n\t\t\t<Layout>\n\t\t\t\t<Router>\n\t\t\t\t\t<Switch>\n\t\t\t\t\t\t<Route exact path='/' render={() => <Landing />} />\n\n\t\t\t\t\t\t<Route exact path='/builds' render={() => <Builds />} />\n\n\t\t\t\t\t\t<Route exact path='/create' render={() => <CreateBuild />} />\n\t\t\t\t\t</Switch>\n\t\t\t\t</Router>\n\t\t\t</Layout>\n\t\t</div>\n\t);\n}\n","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\components\\Layout.tsx",["48"],"import React from 'react';\n\n// MaterialUi\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\n// Components\nimport Footer from './Footer/Footer';\nimport Header from './Header/Header';\n// CSS\n// Types\n\nexport default function Layout(props: { children: React.ReactNode }) {\n\tconst { children } = props;\n\n\treturn (\n\t\t<>\n\t\t\t<React.Fragment>\n\t\t\t\t<CssBaseline />\n\t\t\t\t<Container maxWidth='lg'>\n\t\t\t\t\t<Header />\n\n\t\t\t\t\t<section>{children}</section>\n\n\t\t\t\t\t<Footer />\n\t\t\t\t</Container>\n\t\t\t</React.Fragment>\n\t\t</>\n\t);\n}\n","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\components\\Header\\Header.tsx",["49"],"import React from 'react';\n\n// MaterialUI\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\n// Components\n// CSS\n//Types\n\nexport default function Header() {\n\treturn (\n\t\t<>\n\t\t\t<header>\n\t\t\t\t<Grid container style={{ padding: '16px 0' }}>\n\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t<Box>\n\t\t\t\t\t\t\t<Typography\n\t\t\t\t\t\t\t\tvariant='h4'\n\t\t\t\t\t\t\t\tcomponent='a'\n\t\t\t\t\t\t\t\thref='/'\n\t\t\t\t\t\t\t\tstyle={{ color: '#000000', textDecoration: 'none' }}\n\t\t\t\t\t\t\t\tgutterBottom\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tWild Rift Community Builds\n\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t<Box\n\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\tmarginTop: '8px',\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<Typography component='a' href='/'>\n\t\t\t\t\t\t\t\t\tHome\n\t\t\t\t\t\t\t\t</Typography>{' '}\n\t\t\t\t\t\t\t\t&nbsp;\n\t\t\t\t\t\t\t\t<Typography component='a' href='/builds'>\n\t\t\t\t\t\t\t\t\tView builds\n\t\t\t\t\t\t\t\t</Typography>{' '}\n\t\t\t\t\t\t\t\t&nbsp;\n\t\t\t\t\t\t\t\t<Typography component='a' href='/create'>\n\t\t\t\t\t\t\t\t\tCreate a build\n\t\t\t\t\t\t\t\t</Typography>{' '}\n\t\t\t\t\t\t\t\t&nbsp;\n\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t</Box>\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\t\t\t\t<hr />\n\t\t\t</header>\n\t\t</>\n\t);\n}\n","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\components\\Footer\\Footer.tsx",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Landing\\Landing.tsx",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Builds\\Builds.tsx",["50","51","52","53","54","55","56","57"],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\CreateBuild.tsx",["58","59","60","61","62","63","64","65","66","67","68"],"import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\n// Alerts (react-hot-toast)\nimport toast, { Toaster } from 'react-hot-toast';\n// MaterialUI\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport NativeSelect from '@material-ui/core/NativeSelect';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport TextField from '@material-ui/core/TextField';\nimport Box from '@material-ui/core/Box';\nimport Grow from '@material-ui/core/Grow';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Radio from '@material-ui/core/Radio';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport RadioGroup from '@material-ui/core/RadioGroup';\n// Components\nimport Layout from '../../../components/Layout';\n// CSS\nimport styles from './CreateBuild.module.css';\nconst useStyles = makeStyles((theme) => ({\n\troot: {\n\t\tflexGrow: 1,\n\t},\n\tformControl: {\n\t\tmargin: theme.spacing(1),\n\t\tminWidth: 120,\n\t},\n}));\n// Types\ninterface ChampionInterface {\n\tid: string;\n\tchampionName: string;\n\turl: string;\n}\ninterface ItemInterface {\n\tid: string;\n\titemName: string;\n\treason?: string;\n\ttype: string;\n\turl: string;\n}\ninterface BuildInterface {\n\tusername: string;\n\tchampion: ChampionInterface;\n\titems: ItemInterface[];\n}\n\nexport default function Landing() {\n\tconst [champions, setChampions] = useState<Array<ChampionInterface>>([]);\n\tconst [items, setItems] = useState<Array<ItemInterface>>([]);\n\tconst [championSelected, setChampionSelected] = useState<ChampionInterface>(\n\t\t// Defaults to Champion: 'Ahri' - which is the first option\n\t\t{\n\t\t\tid: '48ca031a-d92e-44e6-b7b6-f3eb1dbe644c',\n\t\t\tchampionName: 'Ahri',\n\t\t\turl:\n\t\t\t\t'https://lolwildriftbuild.com/wp-content/uploads/2020/10/Ahri_wild_rift.png',\n\t\t}\n\t);\n\tconst [itemSelected, setItemSelected] = useState<ItemInterface>(\n\t\t// Defaults to Item: 'Abyssal Mask' which is the first option\n\t\t{\n\t\t\tid: 'a42bcabd-290c-47f2-ae68-258d412c6d8d',\n\t\t\titemName: 'Abyssal Mask',\n\t\t\ttype: 'primary',\n\t\t\turl:\n\t\t\t\t'https://lolwildriftbuild.com/wp-content/uploads/2020/10/abyssalmask_wild_rift.png',\n\t\t}\n\t);\n\tconst [itemsConfirmed, setItemsConfirmed] = useState<Array<ItemInterface>>(\n\t\t[]\n\t);\n\tconst [build, setBuild] = useState<BuildInterface>();\n\tconst [username, setUsername] = useState('');\n\tconst [dialogItem, setDialogItem] = useState<ItemInterface>({\n\t\tid: '',\n\t\titemName: '',\n\t\ttype: 'primary',\n\t\turl: '',\n\t});\n\tconst [itemType, setItemType] = useState('primary');\n\n\tconst classes = useStyles();\n\n\t// Error Notifications\n\tconst errorNoUsername = () => toast.error('Please enter your username');\n\tconst errorNoItemsSelected = () =>\n\t\ttoast.error('Please add items to your build');\n\tconst errorItemDuplicate = () =>\n\t\ttoast.error('That item is already in your build!');\n\tconst errorBuildSaved = () => toast.error('Failed to save your build.');\n\tconst successBuildSaved = () =>\n\t\ttoast.success('Successfully saved your build!');\n\n\tuseEffect(() => {\n\t\tconst getChampions = axios.get('/api/champion/all');\n\t\tconst getItems = axios.get('/api/item/all');\n\n\t\tPromise.all([getChampions, getItems]).then((values) => {\n\t\t\tconst [{ data: championsArray }, { data: itemsArray }] = values;\n\n\t\t\t// Sort Champions\n\t\t\tchampionsArray.sort(function (\n\t\t\t\ta: ChampionInterface,\n\t\t\t\tb: ChampionInterface\n\t\t\t) {\n\t\t\t\tif (a.championName < b.championName) {\n\t\t\t\t\treturn -1;\n\t\t\t\t}\n\t\t\t\tif (a.championName > b.championName) {\n\t\t\t\t\treturn 1;\n\t\t\t\t}\n\t\t\t\treturn 0;\n\t\t\t});\n\t\t\tsetChampions(championsArray);\n\n\t\t\t// Sort Items\n\t\t\titemsArray.sort(function (a: ItemInterface, b: ItemInterface) {\n\t\t\t\tif (a.itemName < b.itemName) {\n\t\t\t\t\treturn -1;\n\t\t\t\t}\n\t\t\t\tif (a.itemName > b.itemName) {\n\t\t\t\t\treturn 1;\n\t\t\t\t}\n\t\t\t\treturn 0;\n\t\t\t});\n\t\t\tsetItems(itemsArray);\n\t\t});\n\t}, []);\n\n\t// Check for duplicate items selected\n\tuseEffect(() => {\n\t\tvar itemArray = itemsConfirmed.map((item) => {\n\t\t\treturn item.id;\n\t\t});\n\t\tvar isDuplicate = itemArray.some((item, index) => {\n\t\t\treturn itemArray.indexOf(item) != index;\n\t\t});\n\n\t\t// Remove duplicates from itemsConfirmed Array\n\t\tconst filteredItemsConfirmed = itemsConfirmed.filter(\n\t\t\t(item, index, arr) => arr.findIndex((t) => t.id === item.id) === index\n\t\t);\n\n\t\tif (isDuplicate) {\n\t\t\tsetItemsConfirmed(filteredItemsConfirmed);\n\t\t\terrorItemDuplicate();\n\t\t}\n\t}, [itemsConfirmed]);\n\n\tconst handleChampSelectChange = (e: any) => {\n\t\tconst getChampion = champions.find(\n\t\t\t(champ: ChampionInterface) => champ.id === e.target.value\n\t\t);\n\n\t\tif (!getChampion) {\n\t\t\treturn;\n\t\t} else {\n\t\t\tsetChampionSelected(getChampion);\n\t\t}\n\t};\n\tconst handleItemSelectChange = (e: any) => {\n\t\tconst getItem = items.find(\n\t\t\t(item: ItemInterface) => item.id === e.target.value\n\t\t);\n\n\t\tif (!getItem) {\n\t\t\treturn;\n\t\t} else {\n\t\t\tsetItemSelected(getItem);\n\t\t}\n\t};\n\n\tconst handleAddItemClick = () => {\n\t\t// Pushes item to itemsConfirmed Array\n\t\tsetItemsConfirmed([...itemsConfirmed, { ...itemSelected, type: itemType }]);\n\t};\n\n\tconst handleItemReasonChange = (e: any) => {\n\t\tconst dialogItemId = dialogItem ? dialogItem.id : null;\n\t\tsetItemsConfirmed((prevState) => {\n\t\t\t// Create a copy of current state\n\t\t\tconst itemsConfirmedCopy = [...prevState];\n\n\t\t\tconst getItem = itemsConfirmedCopy.filter(\n\t\t\t\t(item) => item.id === dialogItemId\n\t\t\t)[0];\n\t\t\t// Get index of item in itemsConfirmedCopy Array\n\t\t\tconst index = itemsConfirmedCopy.indexOf(getItem);\n\n\t\t\t// Set reason property to the input value\n\t\t\tgetItem.reason = e.target.value;\n\n\t\t\t// Get object at index 'index' and set to modified item object\n\t\t\titemsConfirmedCopy[index] = getItem;\n\n\t\t\treturn itemsConfirmedCopy;\n\t\t});\n\t};\n\n\tconst submitBuild = async () => {\n\t\tif (itemsConfirmed.length !== 0 && username) {\n\t\t\tconst buildObject = {\n\t\t\t\tusername: username,\n\t\t\t\tchampion: championSelected,\n\t\t\t\titems: itemsConfirmed,\n\t\t\t};\n\n\t\t\tconst saveToDatabase = await axios\n\t\t\t\t.post('/api/build/save', buildObject)\n\t\t\t\t.then((res) => {\n\t\t\t\t\tsuccessBuildSaved();\n\t\t\t\t\tsetBuild(buildObject);\n\t\t\t\t})\n\t\t\t\t.catch((err) => {\n\t\t\t\t\terrorBuildSaved();\n\t\t\t\t});\n\t\t} else {\n\t\t\tif (itemsConfirmed.length === 0) {\n\t\t\t\terrorNoItemsSelected();\n\t\t\t} else if (!username) {\n\t\t\t\terrorNoUsername();\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\t};\n\n\tconst [openItemDialog, setOpenItemDialog] = useState(false);\n\n\tconst handleClickOpen = (e: any, item: ItemInterface) => {\n\t\tsetDialogItem(item);\n\t\tsetOpenItemDialog(true);\n\t};\n\n\tconst openedDialogItem = itemsConfirmed.filter(\n\t\t(item) => item.id === dialogItem.id\n\t)[0];\n\tconst handleClose = (buttonClicked?: string) => {\n\t\tif (buttonClicked === 'confirm') {\n\t\t\t// If input value is empty, remove reason property from item object\n\t\t\t// ex: if user types something, a reason property is added,\n\t\t\t//     but once user clears the input, reason property is removed.\n\t\t\tif (\n\t\t\t\topenedDialogItem.reason === '' ||\n\t\t\t\topenedDialogItem.reason === undefined ||\n\t\t\t\topenedDialogItem.reason === null\n\t\t\t) {\n\t\t\t\tsetItemsConfirmed((prevState) => {\n\t\t\t\t\t// Create a copy of current state\n\t\t\t\t\tconst itemsConfirmedCopy = [...prevState];\n\n\t\t\t\t\tconst getItem = itemsConfirmedCopy.filter(\n\t\t\t\t\t\t(item) => item.id === dialogItem.id\n\t\t\t\t\t)[0];\n\t\t\t\t\t// Get index of item in itemsConfirmedCopy Array\n\t\t\t\t\tconst index = itemsConfirmedCopy.indexOf(getItem);\n\n\t\t\t\t\t// Delete reason property\n\t\t\t\t\tdelete getItem.reason;\n\n\t\t\t\t\t// Get object at index 'index' and set to modified item object\n\t\t\t\t\titemsConfirmedCopy[index] = getItem;\n\n\t\t\t\t\treturn itemsConfirmedCopy;\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tsetOpenItemDialog(false);\n\t};\n\tlet dialogValue = openedDialogItem\n\t\t? openedDialogItem.reason\n\t\t\t? openedDialogItem.reason\n\t\t\t: ''\n\t\t: '';\n\n\tconst handleClear = () => {\n\t\tsetItemsConfirmed((prevState) => {\n\t\t\t// Create a copy of current state\n\t\t\tconst itemsConfirmedCopy = [...prevState];\n\n\t\t\tconst getItem = itemsConfirmedCopy.filter(\n\t\t\t\t(item) => item.id === dialogItem.id\n\t\t\t)[0];\n\t\t\t// Get index of item in itemsConfirmedCopy Array\n\t\t\tconst index = itemsConfirmedCopy.indexOf(getItem);\n\n\t\t\t// Delete reason property\n\t\t\tdelete getItem.reason;\n\n\t\t\t// Get object at index 'index' and set to modified item object\n\t\t\titemsConfirmedCopy[index] = getItem;\n\n\t\t\treturn itemsConfirmedCopy;\n\t\t});\n\t};\n\n\tconst handleItemTypeChange = (e: any) => {\n\t\tsetItemType(e.target.value);\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t<Toaster />\n\t\t\t<div className={classes.root}>\n\t\t\t\t<Grid container>\n\t\t\t\t\t<Dialog\n\t\t\t\t\t\topen={openItemDialog}\n\t\t\t\t\t\tonClose={() => handleClose()}\n\t\t\t\t\t\taria-labelledby='form-dialog-title'\n\t\t\t\t\t>\n\t\t\t\t\t\t<DialogTitle id='form-dialog-title'>\n\t\t\t\t\t\t\t{dialogItem ? dialogItem.itemName : null}\n\t\t\t\t\t\t</DialogTitle>\n\t\t\t\t\t\t<DialogContent>\n\t\t\t\t\t\t\t<DialogContentText>\n\t\t\t\t\t\t\t\tLet others know why you chose this item by giving an explanation\n\t\t\t\t\t\t\t\tbelow.\n\t\t\t\t\t\t\t</DialogContentText>\n\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\tautoFocus\n\t\t\t\t\t\t\t\tmargin='dense'\n\t\t\t\t\t\t\t\tid='name'\n\t\t\t\t\t\t\t\tlabel='Explanation'\n\t\t\t\t\t\t\t\tmultiline\n\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\tvalue={dialogValue}\n\t\t\t\t\t\t\t\tonChange={(e) => handleItemReasonChange(e)}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</DialogContent>\n\t\t\t\t\t\t<DialogActions>\n\t\t\t\t\t\t\t<Button onClick={handleClear} color='primary'>\n\t\t\t\t\t\t\t\tClear\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t<Button onClick={() => handleClose('confirm')} color='primary'>\n\t\t\t\t\t\t\t\tConfirm\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</DialogActions>\n\t\t\t\t\t</Dialog>\n\t\t\t\t\t{/* Select Champion */}\n\t\t\t\t\t<Grid item xs={6}>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<p>Select Champion</p>\n\t\t\t\t\t\t\t{/* Display Champion Image */}\n\t\t\t\t\t\t\t{championSelected ? (\n\t\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\t\tsrc={`/images/wildriftchampions/${championSelected.id}.png`}\n\t\t\t\t\t\t\t\t\tstyle={{ width: '100px' }}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\t\tsrc={`/images/wildriftchampions/48ca031a-d92e-44e6-b7b6-f3eb1dbe644c.png`}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t)}\n\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t<FormControl className={classes.formControl}>\n\t\t\t\t\t\t\t\t\t<InputLabel shrink htmlFor='champion-select'>\n\t\t\t\t\t\t\t\t\t\tChampion\n\t\t\t\t\t\t\t\t\t</InputLabel>\n\t\t\t\t\t\t\t\t\t<NativeSelect\n\t\t\t\t\t\t\t\t\t\tonChange={handleChampSelectChange}\n\t\t\t\t\t\t\t\t\t\tinputProps={{\n\t\t\t\t\t\t\t\t\t\t\tname: 'champion',\n\t\t\t\t\t\t\t\t\t\t\tid: 'champion-select',\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t{champions.map(\n\t\t\t\t\t\t\t\t\t\t\t({ id, championName, url }: ChampionInterface, index) => {\n\t\t\t\t\t\t\t\t\t\t\t\treturn <option value={id}>{championName}</option>;\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t</NativeSelect>\n\t\t\t\t\t\t\t\t\t<FormHelperText>Select a champion</FormHelperText>\n\t\t\t\t\t\t\t\t</FormControl>\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</Grid>\n\n\t\t\t\t\t{/* Select Item */}\n\t\t\t\t\t<Grid item xs={6}>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<p>Select Item</p>\n\n\t\t\t\t\t\t\t{itemSelected ? (\n\t\t\t\t\t\t\t\t<img src={`/images/wildriftitems/${itemSelected.id}.png`} />\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\t\tsrc={`/images/wildriftitems/a42bcabd-290c-47f2-ae68-258d412c6d8d.png`}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t)}\n\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t<FormControl className={classes.formControl}>\n\t\t\t\t\t\t\t\t\t<InputLabel shrink htmlFor='item-select'>\n\t\t\t\t\t\t\t\t\t\tItem\n\t\t\t\t\t\t\t\t\t</InputLabel>\n\t\t\t\t\t\t\t\t\t<NativeSelect\n\t\t\t\t\t\t\t\t\t\tonChange={handleItemSelectChange}\n\t\t\t\t\t\t\t\t\t\tinputProps={{\n\t\t\t\t\t\t\t\t\t\t\tname: 'item',\n\t\t\t\t\t\t\t\t\t\t\tid: 'item-select',\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t{items.map(\n\t\t\t\t\t\t\t\t\t\t\t({ id, itemName, url }: ItemInterface, index) => {\n\t\t\t\t\t\t\t\t\t\t\t\treturn <option value={id}>{itemName}</option>;\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t</NativeSelect>\n\t\t\t\t\t\t\t\t\t<FormHelperText>Add an item to your build</FormHelperText>\n\t\t\t\t\t\t\t\t</FormControl>\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t<Box>\n\t\t\t\t\t\t\t\t<p>Item Type</p>\n\t\t\t\t\t\t\t\t<RadioGroup\n\t\t\t\t\t\t\t\t\trow\n\t\t\t\t\t\t\t\t\tname='position'\n\t\t\t\t\t\t\t\t\tdefaultValue='primary'\n\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\tdisplay: 'inline-block',\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\tonChange={(e) => handleItemTypeChange(e)}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<FormControlLabel\n\t\t\t\t\t\t\t\t\t\tvalue='primary'\n\t\t\t\t\t\t\t\t\t\tcontrol={<Radio color='primary' />}\n\t\t\t\t\t\t\t\t\t\tlabel='Primary'\n\t\t\t\t\t\t\t\t\t\tlabelPlacement='end'\n\t\t\t\t\t\t\t\t\t\tstyle={{ margin: '0' }}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<FormControlLabel\n\t\t\t\t\t\t\t\t\t\tvalue='optional'\n\t\t\t\t\t\t\t\t\t\tcontrol={<Radio color='primary' />}\n\t\t\t\t\t\t\t\t\t\tlabel='Optional'\n\t\t\t\t\t\t\t\t\t\tlabelPlacement='end'\n\t\t\t\t\t\t\t\t\t\tstyle={{ margin: '0' }}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</RadioGroup>\n\t\t\t\t\t\t\t</Box>\n\n\t\t\t\t\t\t\t<br />\n\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\tvariant='contained'\n\t\t\t\t\t\t\t\tcolor='secondary'\n\t\t\t\t\t\t\t\tonClick={handleAddItemClick}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tAdd Item\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</Grid>\n\n\t\t\t\t\t{/* Items List */}\n\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t<h3>Items List</h3>\n\n\t\t\t\t\t\t\t\t<Box\n\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\tbackgroundColor: '#e6e6e6',\n\t\t\t\t\t\t\t\t\t\tpadding: '20px',\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{itemsConfirmed.length !== 0 ? (\n\t\t\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t\t\t{/* TYPE: MAIN */}\n\t\t\t\t\t\t\t\t\t\t\t<p>Primary Items</p>\n\t\t\t\t\t\t\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t\t\t\t\t\t\t{itemsConfirmed\n\t\t\t\t\t\t\t\t\t\t\t\t\t.filter((item) => item.type !== 'optional')\n\t\t\t\t\t\t\t\t\t\t\t\t\t.map((currentItem) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Grow in={true}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Box\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdisplay: 'inline-block',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmargin: '0px 3px',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Box\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdisplay: 'flex',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tjustifyContent: 'center',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttitle={currentItem.itemName}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={styles.itemHover}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsrc={`/images/wildriftitems/${currentItem.id}.png`}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={(e) =>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleClickOpen(e, currentItem)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Grow>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t\t\t\t</Grid>\n\n\t\t\t\t\t\t\t\t\t\t\t<p>Optional Items</p>\n\t\t\t\t\t\t\t\t\t\t\t{/* TYPE: OPTIONAL */}\n\t\t\t\t\t\t\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t\t\t\t\t\t\t{itemsConfirmed\n\t\t\t\t\t\t\t\t\t\t\t\t\t.filter((item) => item.type !== 'primary')\n\t\t\t\t\t\t\t\t\t\t\t\t\t.map((currentItem: ItemInterface) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Grow in={true}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Box\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdisplay: 'inline-block',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmargin: '0px 3px',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Box\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdisplay: 'flex',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tjustifyContent: 'center',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttitle={currentItem.itemName}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={styles.itemHover}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsrc={`/images/wildriftitems/${currentItem.id}.png`}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={(e) =>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleClickOpen(e, currentItem)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Grow>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t\t<p>You haven't added any items to your build yet.</p>\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t\t<label>\n\t\t\t\t\t\t\t\t\tClick an item to explain why it's a part of your build\n\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</Grid>\n\n\t\t\t\t\t{/* Other */}\n\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t<Box\n\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\tpadding: '10px 0',\n\t\t\t\t\t\t\t\t// backgroundColor: 'green',\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<h3>Player Details</h3>\n\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\tid='username'\n\t\t\t\t\t\t\t\tlabel='Username'\n\t\t\t\t\t\t\t\tplaceholder='Username'\n\t\t\t\t\t\t\t\tvalue={username}\n\t\t\t\t\t\t\t\thelperText='Please include your ID (ex: ABC#DEFGH)'\n\t\t\t\t\t\t\t\tvariant='outlined'\n\t\t\t\t\t\t\t\tonChange={(e) => setUsername(e.target.value)}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Box>\n\n\t\t\t\t\t\t{/* Build Box */}\n\t\t\t\t\t\t<Box>\n\t\t\t\t\t\t\t<Button variant='contained' color='primary' onClick={submitBuild}>\n\t\t\t\t\t\t\t\tSubmit Build\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</Box>\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\t\t\t</div>\n\t\t</>\n\t);\n}\n",{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","severity":1,"message":"74","line":1,"column":17,"nodeType":"75","messageId":"76","endLine":1,"endColumn":25},{"ruleId":"73","severity":1,"message":"77","line":1,"column":27,"nodeType":"75","messageId":"76","endLine":1,"endColumn":36},{"ruleId":"73","severity":1,"message":"78","line":3,"column":8,"nodeType":"75","messageId":"76","endLine":3,"endColumn":13},{"ruleId":"73","severity":1,"message":"79","line":5,"column":8,"nodeType":"75","messageId":"76","endLine":5,"endColumn":18},{"ruleId":"73","severity":1,"message":"80","line":5,"column":8,"nodeType":"75","messageId":"76","endLine":5,"endColumn":14},{"ruleId":"73","severity":1,"message":"81","line":10,"column":8,"nodeType":"75","messageId":"76","endLine":10,"endColumn":24},{"ruleId":"73","severity":1,"message":"82","line":37,"column":9,"nodeType":"75","messageId":"76","endLine":37,"endColumn":16},{"ruleId":"73","severity":1,"message":"83","line":37,"column":18,"nodeType":"75","messageId":"76","endLine":37,"endColumn":28},{"ruleId":"73","severity":1,"message":"84","line":54,"column":9,"nodeType":"75","messageId":"76","endLine":54,"endColumn":18},{"ruleId":"73","severity":1,"message":"85","line":76,"column":12,"nodeType":"75","messageId":"76","endLine":76,"endColumn":19},{"ruleId":"73","severity":1,"message":"86","line":81,"column":45,"nodeType":"75","messageId":"76","endLine":81,"endColumn":48},{"ruleId":"87","severity":1,"message":"88","line":87,"column":11,"nodeType":"89","endLine":87,"endColumn":70},{"ruleId":"73","severity":1,"message":"86","line":93,"column":49,"nodeType":"75","messageId":"76","endLine":93,"endColumn":52},{"ruleId":"73","severity":1,"message":"81","line":13,"column":8,"nodeType":"75","messageId":"76","endLine":13,"endColumn":24},{"ruleId":"73","severity":1,"message":"90","line":27,"column":8,"nodeType":"75","messageId":"76","endLine":27,"endColumn":14},{"ruleId":"73","severity":1,"message":"91","line":83,"column":9,"nodeType":"75","messageId":"76","endLine":83,"endColumn":14},{"ruleId":"92","severity":1,"message":"93","line":147,"column":35,"nodeType":"94","messageId":"95","endLine":147,"endColumn":37},{"ruleId":"73","severity":1,"message":"96","line":219,"column":10,"nodeType":"75","messageId":"76","endLine":219,"endColumn":24},{"ruleId":"87","severity":1,"message":"88","line":356,"column":9,"nodeType":"89","endLine":359,"endColumn":11},{"ruleId":"87","severity":1,"message":"88","line":361,"column":9,"nodeType":"89","endLine":363,"endColumn":11},{"ruleId":"87","severity":1,"message":"88","line":396,"column":9,"nodeType":"89","endLine":396,"endColumn":69},{"ruleId":"87","severity":1,"message":"88","line":398,"column":9,"nodeType":"89","endLine":400,"endColumn":11},{"ruleId":"87","severity":1,"message":"88","line":499,"column":19,"nodeType":"89","endLine":506,"endColumn":21},{"ruleId":"87","severity":1,"message":"88","line":535,"column":20,"nodeType":"89","endLine":542,"endColumn":22},"no-native-reassign",["97"],"no-negated-in-lhs",["98"],"@typescript-eslint/no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'axios' is defined but never used.","'Typography' is defined but never used.","'Button' is defined but never used.","'CircularProgress' is defined but never used.","'loading' is assigned a value but never used.","'setLoading' is assigned a value but never used.","'getBuilds' is assigned a value but never used.","'buildId' is assigned a value but never used.","'url' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Layout' is defined but never used.","'build' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'saveToDatabase' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]