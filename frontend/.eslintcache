[{"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\index.tsx":"1","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\reportWebVitals.ts":"2","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\App\\App.tsx":"3","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\shared\\constants\\requiredLength.ts":"4","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\shared\\config\\config.ts":"5","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\shared\\constants\\constants.ts":"6","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\shared\\constants\\defaultSelectedState.ts":"7","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\shared\\constants\\validationMessages.ts":"8","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\shared\\interfaces\\interfaces.ts":"9","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\shared\\components\\Popover\\ItemPopover.tsx":"10","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\shared\\components\\Popover\\RunePopover.tsx":"11","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\shared\\components\\Popover\\SpellPopover.tsx":"12","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\shared\\components\\Loading\\Backdrop.tsx":"13","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\shared\\components\\Loading\\ComponentLoading.tsx":"14","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\shared\\components\\Footer\\Footer.tsx":"15","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\shared\\components\\Header\\Header.tsx":"16","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\shared\\components\\PageError\\PageNotFound\\PageNotFound.tsx":"17","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\shared\\utils\\buildValidation.ts":"18","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\shared\\utils\\buildValidationHelpers.ts":"19","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\shared\\components\\PageLayout\\Layout.tsx":"20","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\shared\\components\\AlertPopup\\AlertPopup.tsx":"21","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\FAQPage\\index.tsx":"22","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\AboutPage\\index.tsx":"23","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\ChampionBuildsPage\\index.tsx":"24","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\LandingPage\\index.tsx":"25","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\PlayerBuildPage\\index.tsx":"26","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\PrivacyPolicyPage\\index.tsx":"27","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\index.tsx":"28","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\ChampionBuildsPage\\Header\\index.tsx":"29","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\FAQPage\\Accordion\\index.tsx":"30","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\LandingPage\\ChampionsList\\index.tsx":"31","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\ChampionBuildsPage\\BuildsList\\index.tsx":"32","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\LandingPage\\FilterChampions\\index.tsx":"33","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\PlayerBuildPage\\PlayerBuildFooter\\index.tsx":"34","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\Header\\index.tsx":"35","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\PlayerInformation\\index.tsx":"36","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\BuildInformation\\index.tsx":"37","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\Stepper\\index.tsx":"38","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\PlayerBuildPage\\PlayerBuildHeader\\index.tsx":"39","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\PlayerBuildPage\\Spellitem\\index.tsx":"40","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\PlayerBuildPage\\SectionDivider\\index.tsx":"41","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\PlayerBuildPage\\RuneItem\\index.tsx":"42","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\PlayerBuildPage\\BuildDescription\\index.tsx":"43","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\PlayerBuildPage\\BuildItem\\index.tsx":"44","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\ChampionBuildsPage\\Header\\Counters\\index.tsx":"45","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\ChampionBuildsPage\\Header\\Lanes\\index.tsx":"46","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\PlayerBuildPage\\PlayerBuildFooter\\CopyBuildLink\\index.tsx":"47","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\PlayerBuildPage\\PlayerBuildFooter\\ViewMoreBuilds\\index.tsx":"48","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\PlayerInformation\\PlayerRegion\\index.tsx":"49","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\Stepper\\StepperButtons\\index.tsx":"50","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\ReCaptcha\\index.tsx":"51","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\PlayerBuildPage\\PlayerBuildHeader\\BuildChip\\index.tsx":"52","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\PlayerInformation\\PlayerRank\\index.tsx":"53","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\PlayerInformation\\PlayerUsername\\index.tsx":"54","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\ChampionBuildsPage\\BuildsList\\NoBuilds\\index.tsx":"55","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\ChampionBuildsPage\\BuildsList\\BuildBox\\index.tsx":"56","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\ChampionBuildsPage\\BuildsList\\BuildBox\\BuildItem\\index.tsx":"57","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\ChampionBuildsPage\\BuildsList\\BuildBox\\BuildRankUser\\index.tsx":"58","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\ChampionBuildsPage\\BuildsList\\BuildBox\\BuildDate\\index.tsx":"59","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\ChampionBuildsPage\\BuildsList\\BuildBox\\BuildRune\\index.tsx":"60","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\ChampionBuildsPage\\BuildsList\\BuildBox\\BuildSpell\\index.tsx":"61","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\BuildInformation\\SpellsSelect\\index.tsx":"62","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\BuildInformation\\ChampionSelect\\index.tsx":"63","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\BuildInformation\\ItemsSelect\\index.tsx":"64","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\BuildInformation\\RunesSelect\\index.tsx":"65","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\BuildInformation\\SpellsSelect\\Spell\\index.tsx":"66","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\BuildInformation\\RunesSelect\\components\\Inspiration.tsx":"67","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\BuildInformation\\RunesSelect\\components\\Keystone.tsx":"68","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\BuildInformation\\RunesSelect\\components\\Resolve.tsx":"69","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\BuildInformation\\RunesSelect\\components\\Domination.tsx":"70","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\BuildInformation\\ItemsSelected\\index.tsx":"71","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\BuildInformation\\ItemsSelected\\BuildItem\\index.tsx":"72","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\App\\Routes.tsx":"73","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\GeneralInformation\\index.tsx":"74","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\GeneralInformation\\BuildRole\\index.tsx":"75","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\GeneralInformation\\BuildTitle\\index.tsx":"76","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\GeneralInformation\\BuildGameMode\\index.tsx":"77","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\GeneralInformation\\BuildDescription\\index.tsx":"78","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\shared\\store\\reducers\\build.ts":"79","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\shared\\store\\reducers\\gameData.ts":"80","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\shared\\store\\reducers\\reCaptcha.ts":"81","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\shared\\store\\reducers\\snackbarControls.ts":"82","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\shared\\store\\actions.ts":"83","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\shared\\store\\index.ts":"84","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\shared\\components\\Header\\AppBar\\AppBar.tsx":"85","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\shared\\utils\\imagePath.ts":"86","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\shared\\utils\\championNameToUrlString.ts":"87","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\shared\\utils\\sessionStorage.ts":"88","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\shared\\services\\gameDataRequests.ts":"89","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\shared\\services\\buildsRequests.ts":"90","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\shared\\services\\useQueriesTyped.ts":"91","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\shared\\services\\firebaseApp.ts":"92","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\shared\\store\\reducers\\user.ts":"93","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\shared\\interfaces\\GlobalStore.ts":"94","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\shared\\utils\\isValidUser.ts":"95","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\shared\\components\\GoogleAd\\GoogleAd.tsx":"96"},{"size":1181,"mtime":1620001169867,"results":"97","hashOfConfig":"98"},{"size":425,"mtime":499162500000,"results":"99","hashOfConfig":"98"},{"size":5087,"mtime":1619779987574,"results":"100","hashOfConfig":"98"},{"size":337,"mtime":1619089926304,"results":"101","hashOfConfig":"98"},{"size":854,"mtime":1619750980383,"results":"102","hashOfConfig":"98"},{"size":1259,"mtime":1619400761791,"results":"103","hashOfConfig":"98"},{"size":3895,"mtime":1619570887179,"results":"104","hashOfConfig":"98"},{"size":2388,"mtime":1617875669211,"results":"105","hashOfConfig":"98"},{"size":2430,"mtime":1617802086265,"results":"106","hashOfConfig":"98"},{"size":2548,"mtime":1619235168527,"results":"107","hashOfConfig":"98"},{"size":2240,"mtime":1619232954947,"results":"108","hashOfConfig":"98"},{"size":2850,"mtime":1619232958146,"results":"109","hashOfConfig":"98"},{"size":614,"mtime":1618569757965,"results":"110","hashOfConfig":"98"},{"size":545,"mtime":1619086704533,"results":"111","hashOfConfig":"98"},{"size":2144,"mtime":1619781739089,"results":"112","hashOfConfig":"98"},{"size":274,"mtime":1619234568277,"results":"113","hashOfConfig":"98"},{"size":1817,"mtime":1619485089496,"results":"114","hashOfConfig":"98"},{"size":10547,"mtime":1619233454171,"results":"115","hashOfConfig":"98"},{"size":7688,"mtime":1619233492151,"results":"116","hashOfConfig":"98"},{"size":893,"mtime":1620001896537,"results":"117","hashOfConfig":"98"},{"size":2155,"mtime":1619233599747,"results":"118","hashOfConfig":"98"},{"size":1321,"mtime":1619779231214,"results":"119","hashOfConfig":"98"},{"size":2387,"mtime":1619781566791,"results":"120","hashOfConfig":"98"},{"size":6141,"mtime":1620002056844,"results":"121","hashOfConfig":"98"},{"size":3376,"mtime":1620002030005,"results":"122","hashOfConfig":"98"},{"size":4745,"mtime":1620002336227,"results":"123","hashOfConfig":"98"},{"size":4515,"mtime":1619779341478,"results":"124","hashOfConfig":"98"},{"size":7640,"mtime":1620001966163,"results":"125","hashOfConfig":"98"},{"size":2009,"mtime":1619490709082,"results":"126","hashOfConfig":"98"},{"size":5972,"mtime":1619491387466,"results":"127","hashOfConfig":"98"},{"size":1452,"mtime":1619780655982,"results":"128","hashOfConfig":"98"},{"size":858,"mtime":1619490749388,"results":"129","hashOfConfig":"98"},{"size":2886,"mtime":1619491434593,"results":"130","hashOfConfig":"98"},{"size":739,"mtime":1619491847138,"results":"131","hashOfConfig":"98"},{"size":743,"mtime":1619491039822,"results":"132","hashOfConfig":"98"},{"size":589,"mtime":1619490975799,"results":"133","hashOfConfig":"98"},{"size":929,"mtime":1619509344427,"results":"134","hashOfConfig":"98"},{"size":1953,"mtime":1619509274170,"results":"135","hashOfConfig":"98"},{"size":3197,"mtime":1619491817448,"results":"136","hashOfConfig":"98"},{"size":1773,"mtime":1619491760215,"results":"137","hashOfConfig":"98"},{"size":539,"mtime":1619491785220,"results":"138","hashOfConfig":"98"},{"size":2009,"mtime":1619491801460,"results":"139","hashOfConfig":"98"},{"size":1753,"mtime":1619491902265,"results":"140","hashOfConfig":"98"},{"size":2186,"mtime":1619491891797,"results":"141","hashOfConfig":"98"},{"size":3321,"mtime":1619490734096,"results":"142","hashOfConfig":"98"},{"size":1801,"mtime":1619490720702,"results":"143","hashOfConfig":"98"},{"size":1481,"mtime":1619595496367,"results":"144","hashOfConfig":"98"},{"size":1039,"mtime":1619491862063,"results":"145","hashOfConfig":"98"},{"size":2039,"mtime":1619509301541,"results":"146","hashOfConfig":"98"},{"size":1290,"mtime":1619490958356,"results":"147","hashOfConfig":"98"},{"size":1495,"mtime":1619233599747,"results":"148","hashOfConfig":"98"},{"size":572,"mtime":1619491838834,"results":"149","hashOfConfig":"98"},{"size":2335,"mtime":1619491031277,"results":"150","hashOfConfig":"98"},{"size":1813,"mtime":1619490994145,"results":"151","hashOfConfig":"98"},{"size":1573,"mtime":1619607948848,"results":"152","hashOfConfig":"98"},{"size":4196,"mtime":1619490789324,"results":"153","hashOfConfig":"98"},{"size":1180,"mtime":1619490847071,"results":"154","hashOfConfig":"98"},{"size":971,"mtime":1619490834925,"results":"155","hashOfConfig":"98"},{"size":733,"mtime":1619226506670,"results":"156","hashOfConfig":"98"},{"size":1851,"mtime":1619490825256,"results":"157","hashOfConfig":"98"},{"size":1192,"mtime":1619490806509,"results":"158","hashOfConfig":"98"},{"size":3212,"mtime":1619509358828,"results":"159","hashOfConfig":"98"},{"size":2533,"mtime":1619491347420,"results":"160","hashOfConfig":"98"},{"size":5855,"mtime":1619491331608,"results":"161","hashOfConfig":"98"},{"size":4382,"mtime":1619509115859,"results":"162","hashOfConfig":"98"},{"size":2255,"mtime":1619491176499,"results":"163","hashOfConfig":"98"},{"size":3383,"mtime":1619491289064,"results":"164","hashOfConfig":"98"},{"size":3277,"mtime":1619491277863,"results":"165","hashOfConfig":"98"},{"size":3278,"mtime":1619491270997,"results":"166","hashOfConfig":"98"},{"size":3326,"mtime":1619491296593,"results":"167","hashOfConfig":"98"},{"size":6017,"mtime":1619491248387,"results":"168","hashOfConfig":"98"},{"size":1709,"mtime":1619491310652,"results":"169","hashOfConfig":"98"},{"size":1205,"mtime":1619777894454,"results":"170","hashOfConfig":"98"},{"size":863,"mtime":1619509316674,"results":"171","hashOfConfig":"98"},{"size":3408,"mtime":1619491084906,"results":"172","hashOfConfig":"98"},{"size":2080,"mtime":1619491069705,"results":"173","hashOfConfig":"98"},{"size":2852,"mtime":1619491123832,"results":"174","hashOfConfig":"98"},{"size":1943,"mtime":1619491117995,"results":"175","hashOfConfig":"98"},{"size":2118,"mtime":1619233813338,"results":"176","hashOfConfig":"98"},{"size":1018,"mtime":1619233599746,"results":"177","hashOfConfig":"98"},{"size":566,"mtime":1619233599745,"results":"178","hashOfConfig":"98"},{"size":398,"mtime":1619233599747,"results":"179","hashOfConfig":"98"},{"size":1988,"mtime":1619762536505,"results":"180","hashOfConfig":"98"},{"size":855,"mtime":1619762997848,"results":"181","hashOfConfig":"98"},{"size":3373,"mtime":1619866329840,"results":"182","hashOfConfig":"98"},{"size":487,"mtime":1619402479197,"results":"183","hashOfConfig":"98"},{"size":435,"mtime":1619416273917,"results":"184","hashOfConfig":"98"},{"size":716,"mtime":1619409950491,"results":"185","hashOfConfig":"98"},{"size":1968,"mtime":1619510219431,"results":"186","hashOfConfig":"98"},{"size":783,"mtime":1619575614555,"results":"187","hashOfConfig":"98"},{"size":1045,"mtime":1619596573057,"results":"188","hashOfConfig":"98"},{"size":993,"mtime":1619863657510,"results":"189","hashOfConfig":"98"},{"size":309,"mtime":1619866006766,"results":"190","hashOfConfig":"98"},{"size":953,"mtime":1619764053995,"results":"191","hashOfConfig":"98"},{"size":181,"mtime":1619866158798,"results":"192","hashOfConfig":"98"},{"size":596,"mtime":1620002390850,"results":"193","hashOfConfig":"98"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"q16prs",{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"201","usedDeprecatedRules":"198"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"232","usedDeprecatedRules":"198"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"235","usedDeprecatedRules":"198"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"246","messages":"247","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"248","messages":"249","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"254","messages":"255","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"270","messages":"271","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"276","usedDeprecatedRules":"198"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"279","messages":"280","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"281","messages":"282","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"283","messages":"284","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"285","messages":"286","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"287","messages":"288","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"289","messages":"290","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"291","messages":"292","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"293","messages":"294","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"295","messages":"296","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"297","messages":"298","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"299","messages":"300","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"301","usedDeprecatedRules":"198"},{"filePath":"302","messages":"303","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"304","messages":"305","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"306","messages":"307","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"308","messages":"309","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"310","messages":"311","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"312","messages":"313","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"314","messages":"315","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"316","messages":"317","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"318","messages":"319","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"320","messages":"321","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"322","messages":"323","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"324","usedDeprecatedRules":"198"},{"filePath":"325","messages":"326","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"327","messages":"328","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"329","usedDeprecatedRules":"198"},{"filePath":"330","messages":"331","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"332","messages":"333","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"334","messages":"335","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"336","messages":"337","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"338","messages":"339","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"340","messages":"341","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"342","messages":"343","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"344","usedDeprecatedRules":"198"},{"filePath":"345","messages":"346","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"347","messages":"348","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"349","messages":"350","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"351","messages":"352","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"353","messages":"354","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"355","messages":"356","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"357","messages":"358","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"359","messages":"360","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"361","messages":"362","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"363","messages":"364","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"365","messages":"366","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"367","messages":"368","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"369","messages":"370","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"371","usedDeprecatedRules":"198"},{"filePath":"372","messages":"373","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"374","messages":"375","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"376","messages":"377","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"378","messages":"379","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"380","messages":"381","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"382","messages":"383","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"384","messages":"385","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"386","messages":"387","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"388","messages":"389","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"390","messages":"391","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"392","messages":"393","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"394","usedDeprecatedRules":"198"},{"filePath":"395","messages":"396","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\index.tsx",["397","398"],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\reportWebVitals.ts",[],["399","400"],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\App\\App.tsx",["401","402"],"import React, { useEffect } from 'react';\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\n// Redux\r\nimport { connect, ConnectedProps } from 'react-redux';\r\nimport actionTypes from '../shared/store/actions';\r\n\r\n// Shared\r\nimport {\r\n\tgetChampions,\r\n\tgetItems,\r\n\tgetRunes,\r\n\tgetSpells,\r\n\tgetRanks,\r\n\tgetRoles,\r\n\tsortChampionsAlphabetically,\r\n\tsortItemsAlphabetically,\r\n\tsortRunesAlphabetically,\r\n\tsortSpellsAlphabetically,\r\n} from '../shared/services/gameDataRequests';\r\nimport { useQueriesTyped } from '../shared/services/useQueriesTyped';\r\n\r\n// MaterialUI\r\nimport { createMuiTheme } from '@material-ui/core/styles';\r\nimport { ThemeProvider } from '@material-ui/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\n\r\n// Components\r\nimport Layout from '../shared/components/PageLayout/Layout';\r\nimport Routes from './Routes';\r\n\r\n// Types\r\nimport {\r\n\tChampionInterface,\r\n\tItemInterface,\r\n\tRankInterface,\r\n\tRoleInterface,\r\n\tRuneInterface,\r\n\tSpellInterface,\r\n} from '../shared/interfaces/GameData';\r\nimport { RootState } from '../shared/interfaces/GlobalStore';\r\n\r\n// CSS\r\nimport styles from './app.module.css';\r\n\r\nconst theme = createMuiTheme({\r\n\ttypography: {\r\n\t\tfontFamily: ['Helvetica Neue', 'Helvetica', 'Arial', 'Tahoma'].join(','),\r\n\t},\r\n\tpalette: {\r\n\t\tprimary: {\r\n\t\t\tlight: '#FAFAFA',\r\n\t\t\tmain: '#13AAFF',\r\n\t\t\tdark: '#5893D4',\r\n\t\t},\r\n\t\tsecondary: {\r\n\t\t\tlight: '#292E38',\r\n\t\t\tmain: '#5893D4',\r\n\t\t\tdark: '#171717',\r\n\t\t},\r\n\t},\r\n});\r\n\r\nconst App = (props: AppProps) => {\r\n\tconst {\r\n\t\tuser,\r\n\t\tsetChampions,\r\n\t\tsetItems,\r\n\t\tsetRanks,\r\n\t\tsetRunes,\r\n\t\tsetRoles,\r\n\t\tsetSpells,\r\n\t} = props;\r\n\r\n\t// console.log(user);\r\n\r\n\tconst gameDataQueries = useQueriesTyped([\r\n\t\t{ queryKey: 'champions', queryFn: () => getChampions },\r\n\t\t{ queryKey: 'items', queryFn: () => getItems },\r\n\t\t{ queryKey: 'runes', queryFn: () => getRunes },\r\n\t\t{ queryKey: 'spells', queryFn: () => getSpells },\r\n\t\t{ queryKey: 'ranks', queryFn: () => getRanks },\r\n\t\t{ queryKey: 'roles', queryFn: () => getRoles },\r\n\t]);\r\n\r\n\tconst eachQueryHasLoaded = gameDataQueries.every(\r\n\t\t(query) => query.isFetched && query.isSuccess\r\n\t);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (\r\n\t\t\tgameDataQueries[0].data && // Champions\r\n\t\t\tgameDataQueries[1].data && // Items\r\n\t\t\tgameDataQueries[2].data && // Runes\r\n\t\t\tgameDataQueries[3].data && // Spells\r\n\t\t\tgameDataQueries[4].data && // Ranks\r\n\t\t\tgameDataQueries[5].data && // Roles\r\n\t\t\teachQueryHasLoaded\r\n\t\t) {\r\n\t\t\tconst [\r\n\t\t\t\t{ data: champions },\r\n\t\t\t\t{ data: items },\r\n\t\t\t\t{ data: runes },\r\n\t\t\t\t{ data: spells },\r\n\t\t\t\t{ data: ranks },\r\n\t\t\t\t{ data: roles },\r\n\t\t\t] = gameDataQueries;\r\n\r\n\t\t\t// Sort Champions\r\n\t\t\tconst championsArray: Array<ChampionInterface> = sortChampionsAlphabetically(\r\n\t\t\t\tchampions.data\r\n\t\t\t);\r\n\r\n\t\t\t// Sort Items\r\n\t\t\tconst itemsArray: Array<ItemInterface> = sortItemsAlphabetically(\r\n\t\t\t\titems.data\r\n\t\t\t);\r\n\r\n\t\t\t// Sort Runes\r\n\t\t\tconst runesArray: Array<RuneInterface> = sortRunesAlphabetically(\r\n\t\t\t\trunes.data\r\n\t\t\t);\r\n\r\n\t\t\t// Sort Spells\r\n\t\t\tconst spellsArray: Array<SpellInterface> = sortSpellsAlphabetically(\r\n\t\t\t\tspells.data\r\n\t\t\t);\r\n\r\n\t\t\tconst ranksArray: Array<RankInterface> = ranks.data;\r\n\r\n\t\t\tconst rolesArray: Array<RoleInterface> = roles.data;\r\n\r\n\t\t\tsetChampions(championsArray);\r\n\t\t\tsetItems(itemsArray);\r\n\t\t\tsetRanks(ranksArray);\r\n\t\t\tsetRunes(runesArray);\r\n\t\t\tsetSpells(spellsArray);\r\n\t\t\tsetRoles(rolesArray);\r\n\t\t}\r\n\t}, [eachQueryHasLoaded]);\r\n\r\n\treturn (\r\n\t\t<ThemeProvider theme={theme}>\r\n\t\t\t<div className={`App ${styles.appContainer}`}>\r\n\t\t\t\t<CssBaseline />\r\n\t\t\t\t<BrowserRouter>\r\n\t\t\t\t\t<Layout>\r\n\t\t\t\t\t\t<Routes />\r\n\t\t\t\t\t</Layout>\r\n\t\t\t\t</BrowserRouter>\r\n\t\t\t</div>\r\n\t\t</ThemeProvider>\r\n\t);\r\n};\r\n\r\nconst mapStateToProps = (state: RootState) => {\r\n\treturn {\r\n\t\tuser: state.user,\r\n\t};\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: any) => {\r\n\treturn {\r\n\t\tsetChampions: (champions: Array<ChampionInterface>) =>\r\n\t\t\tdispatch({ type: actionTypes.GAMEDATA_SET_CHAMPIONS, data: champions }),\r\n\t\tsetItems: (items: Array<ItemInterface>) =>\r\n\t\t\tdispatch({ type: actionTypes.GAMEDATA_SET_ITEMS, data: items }),\r\n\t\tsetRanks: (ranks: Array<RankInterface>) =>\r\n\t\t\tdispatch({ type: actionTypes.GAMEDATA_SET_RANKS, data: ranks }),\r\n\t\tsetRoles: (roles: Array<RoleInterface>) =>\r\n\t\t\tdispatch({ type: actionTypes.GAMEDATA_SET_ROLES, data: roles }),\r\n\t\tsetRunes: (runes: Array<RuneInterface>) =>\r\n\t\t\tdispatch({ type: actionTypes.GAMEDATA_SET_RUNES, data: runes }),\r\n\t\tsetSpells: (spells: Array<SpellInterface>) =>\r\n\t\t\tdispatch({ type: actionTypes.GAMEDATA_SET_SPELLS, data: spells }),\r\n\t};\r\n};\r\n\r\nconst connector = connect(mapStateToProps, mapDispatchToProps);\r\n\r\ntype PropsFromRedux = ConnectedProps<typeof connector>;\r\n\r\ntype AppProps = PropsFromRedux & {\r\n\tsetChampions: (newChampions: Array<ChampionInterface>) => void;\r\n\tsetItems: (newItems: Array<ItemInterface>) => void;\r\n\tsetRanks: (newRanks: Array<RankInterface>) => void;\r\n\tsetRoles: (newRoles: Array<RoleInterface>) => void;\r\n\tsetRunes: (newRunes: Array<RuneInterface>) => void;\r\n\tsetSpells: (newSpells: Array<SpellInterface>) => void;\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\shared\\constants\\requiredLength.ts",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\shared\\config\\config.ts",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\shared\\constants\\constants.ts",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\shared\\constants\\defaultSelectedState.ts",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\shared\\constants\\validationMessages.ts",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\shared\\interfaces\\interfaces.ts",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\shared\\components\\Popover\\ItemPopover.tsx",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\shared\\components\\Popover\\RunePopover.tsx",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\shared\\components\\Popover\\SpellPopover.tsx",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\shared\\components\\Loading\\Backdrop.tsx",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\shared\\components\\Loading\\ComponentLoading.tsx",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\shared\\components\\Footer\\Footer.tsx",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\shared\\components\\Header\\Header.tsx",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\shared\\components\\PageError\\PageNotFound\\PageNotFound.tsx",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\shared\\utils\\buildValidation.ts",["403"],"import {\n\tChampionInterface,\n\tItemInterface,\n\tRankInterface,\n\tRoleInterface,\n\tRuneInterface,\n\tSpellInterface,\n} from '../interfaces/GameData';\nimport { BuildInterface } from '../interfaces/Build';\nimport { BuildValidationHelper } from './buildValidationHelpers';\nimport { ItemType, GameMode, GameRegion } from '../constants/constants';\nimport { RequiredLength } from '../constants/requiredLength';\nimport { Message } from '../constants/validationMessages';\n\nconst HAS_BUILD_TITLE = (build: BuildInterface) => {\n\tif (build.buildTitle) {\n\t\treturn BuildValidationHelper.resultHandler(null, true);\n\t}\n\n\treturn BuildValidationHelper.resultHandler(\n\t\tMessage.ERROR.NO_BUILD_TITLE,\n\t\tfalse\n\t);\n};\n\nconst HAS_ITEMS_SELECTED = (build: BuildInterface) => {\n\tif (build.itemsConfirmed.length !== 0) {\n\t\treturn BuildValidationHelper.resultHandler(null, true);\n\t}\n\n\treturn BuildValidationHelper.resultHandler(\n\t\tMessage.ERROR.NO_ITEMS_SELECTED,\n\t\tfalse\n\t);\n};\n\nconst HAS_THREE_TO_SIX_PRIMARY_ITEMS = (build: BuildInterface) => {\n\tconst lengthOfPrimaryItems = build.itemsConfirmed.filter(\n\t\t(item: ItemInterface) => item.type === 'primary'\n\t).length;\n\n\tconst hasThreeToSixPrimaryItems =\n\t\tlengthOfPrimaryItems >= RequiredLength.ITEMS.PRIMARY.MIN_LENGTH &&\n\t\tlengthOfPrimaryItems <= RequiredLength.ITEMS.PRIMARY.MAX_LENGTH;\n\n\tif (hasThreeToSixPrimaryItems) {\n\t\treturn BuildValidationHelper.resultHandler(null, true);\n\t}\n\n\treturn BuildValidationHelper.resultHandler(\n\t\tMessage.ERROR.DOES_NOT_HAVE_THREE_TO_SIX_PRIMARY_ITEMS,\n\t\tfalse\n\t);\n};\n\nconst HAS_USERNAME = (build: BuildInterface) => {\n\tif (build.username) {\n\t\treturn BuildValidationHelper.resultHandler(null, true);\n\t}\n\n\treturn BuildValidationHelper.resultHandler(Message.ERROR.NO_USERNAME, false);\n};\n\nconst IS_VALID_BUILD_TITLE = (build: BuildInterface) => {\n\tconst { buildTitle } = build;\n\n\tconst isTypeString = BuildValidationHelper.isValidString(buildTitle);\n\tconst isValidLength =\n\t\tbuildTitle.length >= RequiredLength.BUILD_TITLE.MIN_LENGTH &&\n\t\tbuildTitle.length <= RequiredLength.BUILD_TITLE.MAX_LENGTH;\n\n\tif (isTypeString && isValidLength) {\n\t\treturn BuildValidationHelper.resultHandler(null, true);\n\t}\n\n\treturn BuildValidationHelper.resultHandler(\n\t\tMessage.ERROR.NOT_VALID_BUILD_TITLE,\n\t\tfalse\n\t);\n};\n\nconst IS_VALID_USERNAME = (build: BuildInterface) => {\n\tconst { username } = build;\n\n\tconst isTypeString = BuildValidationHelper.isValidString(username);\n\tconst isValidLength =\n\t\tusername.length >= RequiredLength.USERNAME.MIN_LENGTH &&\n\t\tusername.length <= RequiredLength.USERNAME.MAX_LENGTH;\n\n\tif (isTypeString && isValidLength) {\n\t\treturn BuildValidationHelper.resultHandler(null, true);\n\t}\n\n\treturn BuildValidationHelper.resultHandler(\n\t\tMessage.ERROR.NOT_VALID_USERNAME,\n\t\tfalse\n\t);\n};\n\nconst IS_VALID_ROLE = (build: BuildInterface, roles: Array<RoleInterface>) => {\n\tconst { buildRole } = build;\n\n\t// Checks if buildRole.id and buildRole.roleName has a corresponding object to roles\n\tconst isValidRole =\n\t\troles.filter((role) => {\n\t\t\treturn JSON.stringify(buildRole) === JSON.stringify(role);\n\t\t}).length === 1;\n\n\tif (isValidRole) {\n\t\treturn BuildValidationHelper.resultHandler(null, true);\n\t}\n\n\treturn BuildValidationHelper.resultHandler(\n\t\tMessage.ERROR.NOT_VALID_ROLE,\n\t\tfalse\n\t);\n};\n\nconst IS_VALID_GAME_MODE = (build: BuildInterface) => {\n\tconst { gameMode } = build;\n\n\tconst isValidGameMode =\n\t\tgameMode === GameMode.NORMAL || gameMode === GameMode.ARAM;\n\tconst isTypeString = BuildValidationHelper.isValidString(gameMode);\n\n\tif (isValidGameMode && isTypeString) {\n\t\treturn BuildValidationHelper.resultHandler(null, true);\n\t}\n\n\treturn BuildValidationHelper.resultHandler(\n\t\tMessage.ERROR.NOT_VALID_GAME_MODE,\n\t\tfalse\n\t);\n};\n\nconst IS_VALID_BUILD_DESCRIPTION = (build: BuildInterface) => {\n\tconst { description } = build;\n\n\tconst isTypeString = BuildValidationHelper.isValidString(description);\n\tconst isValidLength = BuildValidationHelper.isValidReasonLength(description);\n\n\tif (isTypeString && isValidLength) {\n\t\treturn BuildValidationHelper.resultHandler(null, true);\n\t}\n\n\treturn BuildValidationHelper.resultHandler(\n\t\tMessage.ERROR.NOT_VALID_BUILD_DESCRIPTION,\n\t\tfalse\n\t);\n};\n\nconst IS_VALID_CHAMPION = (\n\tbuild: BuildInterface,\n\tchampions: Array<ChampionInterface>\n) => {\n\tconst { champion: buildChampion } = build;\n\n\tconst isValidChampion =\n\t\tchampions.filter((champion) => {\n\t\t\t// Checks if both objects have same properties and corresponding values\n\t\t\t// THE ORDER OF PROPERTIES IS IMPORTANT\n\t\t\t// Source: https://stackoverflow.com/questions/1068834/object-comparison-in-javascript\n\n\t\t\treturn JSON.stringify(buildChampion) === JSON.stringify(champion);\n\t\t}).length === 1;\n\n\tif (isValidChampion) {\n\t\treturn BuildValidationHelper.resultHandler(null, true);\n\t}\n\n\treturn BuildValidationHelper.resultHandler(\n\t\tMessage.ERROR.NOT_VALID_CHAMPION,\n\t\tfalse\n\t);\n};\n\nconst IS_VALID_ITEMS_SELECTED = (\n\tbuild: BuildInterface,\n\titems: Array<ItemInterface>\n) => {\n\tconst { itemsConfirmed } = build;\n\n\t// Checks if every reason property of an item is type string and has valid length\n\tconst validReasonTypeAndLength = itemsConfirmed\n\t\t.map((item: ItemInterface) =>\n\t\t\tBuildValidationHelper.isValidReasonTypeAndLength(item)\n\t\t)\n\t\t.every((boolIsTrue) => boolIsTrue);\n\n\t// Removes \"reason\" and \"type\" property which is defined by user\n\tconst modifiedItemsConfirmed = itemsConfirmed.map((item: ItemInterface) => {\n\t\tconst { reason, type, ...modifiedObject } = item;\n\n\t\treturn modifiedObject;\n\t});\n\n\t// Return items from ITEMSCONFIRMED that are in ITEMS\n\tconst validatedItems = items.filter((item) => {\n\t\t// Check if \"some\" items from MODIFIEDITEMSCONFIRMED are found in ITEMS\n\t\tif (\n\t\t\tmodifiedItemsConfirmed.some(\n\t\t\t\t(buildItem) => JSON.stringify(buildItem) === JSON.stringify(item)\n\t\t\t)\n\t\t) {\n\t\t\treturn item;\n\t\t}\n\t});\n\n\t// Check if valid items' (items that are in ITEMS array) length is\n\t// equal to length of ITEMSCONFIRMED\n\tif (\n\t\tvalidatedItems.length === itemsConfirmed.length &&\n\t\tvalidReasonTypeAndLength\n\t) {\n\t\treturn BuildValidationHelper.resultHandler(null, true);\n\t}\n\n\treturn BuildValidationHelper.resultHandler(\n\t\tMessage.ERROR.NOT_VALID_ITEMS_SELECTED,\n\t\tfalse\n\t);\n};\n\nconst IS_VALID_NUMBER_OF_ITEMS_SELECTED = (build: BuildInterface) => {\n\tconst { itemsConfirmed } = build;\n\n\tconst primaryItems = itemsConfirmed.filter(\n\t\t(item) => item.type === ItemType.PRIMARY\n\t).length;\n\tconst optionalItems = itemsConfirmed.filter(\n\t\t(item) => item.type === ItemType.OPTIONAL\n\t).length;\n\n\tconst isValidPrimaryItemsLength =\n\t\tprimaryItems >= RequiredLength.ITEMS.PRIMARY.MIN_LENGTH &&\n\t\tprimaryItems <= RequiredLength.ITEMS.PRIMARY.MAX_LENGTH;\n\tconst isValidOptionalItemsLength =\n\t\toptionalItems >= RequiredLength.ITEMS.OPTIONAL.MIN_LENGTH &&\n\t\toptionalItems <= RequiredLength.ITEMS.OPTIONAL.MAX_LENGTH;\n\n\tif (isValidPrimaryItemsLength && isValidOptionalItemsLength) {\n\t\treturn BuildValidationHelper.resultHandler(null, true);\n\t}\n\n\treturn BuildValidationHelper.resultHandler(\n\t\tMessage.ERROR.NOT_VALID_NUMBER_OF_ITEMS_SELECTED,\n\t\tfalse\n\t);\n};\n\nconst IS_VALID_RUNES = (build: BuildInterface, runes: Array<RuneInterface>) => {\n\tconst { runes: buildRunes } = build;\n\tconst { keystone, domination, resolve, inspiration } = buildRunes;\n\n\tconst VALID_KEYSTONE =\n\t\trunes.filter((rune) => {\n\t\t\t// Remove reason property from build rune;\n\t\t\tconst { reason, ...keystoneCopy } = keystone;\n\n\t\t\treturn JSON.stringify(rune) === JSON.stringify(keystoneCopy);\n\t\t}).length === 1 &&\n\t\tBuildValidationHelper.isValidReasonTypeAndLength(keystone);\n\n\tconst VALID_DOMINATION =\n\t\trunes.filter((rune) => {\n\t\t\t// Remove reason property from build rune;\n\t\t\tconst { reason, ...dominationCopy } = domination;\n\n\t\t\treturn JSON.stringify(rune) === JSON.stringify(dominationCopy);\n\t\t}).length === 1 &&\n\t\tBuildValidationHelper.isValidReasonTypeAndLength(domination);\n\n\tconst VALID_RESOLVE =\n\t\trunes.filter((rune) => {\n\t\t\t// Remove reason property from build rune;\n\t\t\tconst { reason, ...resolveCopy } = resolve;\n\n\t\t\treturn JSON.stringify(rune) === JSON.stringify(resolveCopy);\n\t\t}).length === 1 &&\n\t\tBuildValidationHelper.isValidReasonTypeAndLength(resolve);\n\n\tconst VALID_INSPIRATION =\n\t\trunes.filter((rune) => {\n\t\t\t// Remove reason property from build rune;\n\t\t\tconst { reason, ...inspirationCopy } = inspiration;\n\n\t\t\treturn JSON.stringify(rune) === JSON.stringify(inspirationCopy);\n\t\t}).length === 1 &&\n\t\tBuildValidationHelper.isValidReasonTypeAndLength(inspiration);\n\n\tif (\n\t\tVALID_KEYSTONE &&\n\t\tVALID_DOMINATION &&\n\t\tVALID_RESOLVE &&\n\t\tVALID_INSPIRATION\n\t) {\n\t\treturn BuildValidationHelper.resultHandler(null, true);\n\t}\n\n\treturn BuildValidationHelper.resultHandler(\n\t\tMessage.ERROR.NOT_VALID_RUNES,\n\t\tfalse\n\t);\n};\n\nconst IS_VALID_SPELLS = (\n\tbuild: BuildInterface,\n\tspells: Array<SpellInterface>\n) => {\n\tconst { spells: buildSpells } = build;\n\tconst { spellOne, spellTwo } = buildSpells;\n\n\tconst VALID_SPELL_ONE =\n\t\tspells.filter((spell) => {\n\t\t\treturn JSON.stringify(spell) === JSON.stringify(spellOne);\n\t\t}).length === 1;\n\n\tconst VALID_SPELL_TWO =\n\t\tspells.filter((spell) => {\n\t\t\treturn JSON.stringify(spell) === JSON.stringify(spellTwo);\n\t\t}).length === 1;\n\n\tif (VALID_SPELL_ONE && VALID_SPELL_TWO) {\n\t\treturn BuildValidationHelper.resultHandler(null, true);\n\t}\n\n\treturn BuildValidationHelper.resultHandler(\n\t\tMessage.ERROR.NOT_VALID_SPELLS,\n\t\tfalse\n\t);\n};\n\nconst IS_VALID_RANK = (build: BuildInterface, ranks: Array<RankInterface>) => {\n\tconst { rank: buildRank } = build;\n\n\tconst isValidRank =\n\t\tranks.filter((rank) => {\n\t\t\treturn JSON.stringify(rank) === JSON.stringify(buildRank);\n\t\t}).length === 1;\n\n\tif (isValidRank) {\n\t\treturn BuildValidationHelper.resultHandler(null, true);\n\t}\n\n\treturn BuildValidationHelper.resultHandler(\n\t\tMessage.ERROR.NOT_VALID_RANK,\n\t\tfalse\n\t);\n};\n\nconst IS_VALID_REGION = (build: BuildInterface) => {\n\tconst { region } = build;\n\n\tconst isValidRegion =\n\t\tregion === GameRegion.SEA ||\n\t\tregion === GameRegion.NA ||\n\t\tregion === GameRegion.EUW;\n\tconst isTypeString = BuildValidationHelper.isValidString(region);\n\n\tif (isValidRegion && isTypeString) {\n\t\treturn BuildValidationHelper.resultHandler(null, true);\n\t}\n\n\treturn BuildValidationHelper.resultHandler(\n\t\tMessage.ERROR.NOT_VALID_REGION,\n\t\tfalse\n\t);\n};\n\nexport const BuildValidation = {\n\tHAS_BUILD_TITLE,\n\tHAS_ITEMS_SELECTED,\n\tHAS_THREE_TO_SIX_PRIMARY_ITEMS,\n\tHAS_USERNAME,\n\tIS_VALID_BUILD_TITLE,\n\tIS_VALID_USERNAME,\n\tIS_VALID_ROLE,\n\tIS_VALID_GAME_MODE,\n\tIS_VALID_BUILD_DESCRIPTION,\n\tIS_VALID_CHAMPION,\n\tIS_VALID_ITEMS_SELECTED,\n\tIS_VALID_NUMBER_OF_ITEMS_SELECTED,\n\tIS_VALID_RUNES,\n\tIS_VALID_SPELLS,\n\tIS_VALID_RANK,\n\tIS_VALID_REGION,\n};\n","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\shared\\utils\\buildValidationHelpers.ts",["404"],"import {\n\tChampionInterface,\n\tItemInterface,\n\tRankInterface,\n\tRoleInterface,\n\tRuneInterface,\n\tSpellInterface,\n} from '../interfaces/GameData';\nimport { BuildInterface } from '../interfaces/Build';\nimport { ValidationResult } from '../interfaces/interfaces';\nimport { BuildValidation } from './buildValidation';\nimport { RequiredLength } from '../constants/requiredLength';\n\n// resultHandler is the object that gets returned for each validation\n// and the value of CreateBuild.tsx's isValidBuild variable\nconst resultHandler = (message: string | null, result: boolean) => {\n\treturn {\n\t\tmessage,\n\t\tresult,\n\t};\n};\n\nconst trimString = (text: string) => {\n\treturn text.trim();\n};\n\nconst turnToString = (text: string) => {\n\treturn String(text);\n};\n\nconst isValidString = (text: string) => {\n\treturn typeof text === 'string';\n};\n\nconst isValidReasonLength = (text: string) => {\n\treturn (\n\t\ttext.length >= RequiredLength.REASON.MIN_LENGTH &&\n\t\ttext.length <= RequiredLength.REASON.MAX_LENGTH\n\t);\n};\n\nconst isValidReasonTypeAndLength = (\n\tobjectToCheck: RuneInterface | ItemInterface\n) => {\n\tconst { reason } = objectToCheck;\n\n\t// If there's a reason property, check if it's the right type\n\t// and right length\n\t// This will always return true if it doesn't fail any of the\n\t// two conditions\n\tif (reason) {\n\t\tconst isValidType = isValidString(reason);\n\t\tconst isValidLength = isValidReasonLength(reason);\n\n\t\tif (!(isValidType && isValidLength)) return false;\n\t}\n\n\treturn true;\n};\n\n// Find all validations that returned false\n// Return first validation that failed, hence [0]\nconst findFailedValidation = (\n\tvalidationsCollection: Array<ValidationResult>\n) => {\n\treturn validationsCollection.filter((validation) => {\n\t\tconst { result } = validation;\n\n\t\tif (result === false) {\n\t\t\treturn validation;\n\t\t}\n\t})[0];\n};\n\nconst checkAllValidationsAreValid = (\n\tvalidationsCollection: Array<ValidationResult>\n) => {\n\treturn validationsCollection.every((validation: ValidationResult) => {\n\t\tconst { result } = validation;\n\n\t\treturn result === true;\n\t});\n};\n\n// Applies toString() and trim() to each text input\nconst sanitizeBuildTextInputs = (build: BuildInterface) => {\n\tconst { buildTitle, description, username, itemsConfirmed } = build;\n\n\t// run turnToString() on each item reason property, if it's defined\n\tconst sanitizeItemReasons = itemsConfirmed.map((item: ItemInterface) => {\n\t\tconst { reason } = item;\n\n\t\tif (reason) {\n\t\t\treturn {\n\t\t\t\t...item,\n\t\t\t\treason: turnToString(trimString(reason)),\n\t\t\t};\n\t\t}\n\n\t\t// return item if there's no reason property\n\t\treturn item;\n\t});\n\n\treturn {\n\t\t...build,\n\t\tbuildTitle: turnToString(trimString(buildTitle)),\n\t\tdescription: turnToString(trimString(description)),\n\t\tusername: turnToString(trimString(username)),\n\t\titemsConfirmed: sanitizeItemReasons,\n\t};\n};\n\n// Validations for each step\nconst validateStep = (\n\tactiveStep: number,\n\tcompleteBuild: BuildInterface,\n\tchampions: Array<ChampionInterface>,\n\titems: Array<ItemInterface>,\n\trunes: Array<RuneInterface>,\n\tspells: Array<SpellInterface>,\n\troles: Array<RoleInterface>\n) => {\n\tlet allValidationsAreValid = false;\n\tlet validationsCollection: Array<ValidationResult> = [];\n\n\tif (activeStep === 0) {\n\t\tconst HAS_BUILD_TITLE = BuildValidation.HAS_BUILD_TITLE(completeBuild);\n\t\tconst IS_VALID_BUILD_TITLE = BuildValidation.IS_VALID_BUILD_TITLE(\n\t\t\tcompleteBuild\n\t\t);\n\t\tconst IS_VALID_ROLE = BuildValidation.IS_VALID_ROLE(completeBuild, roles);\n\t\tconst IS_VALID_GAME_MODE = BuildValidation.IS_VALID_GAME_MODE(\n\t\t\tcompleteBuild\n\t\t);\n\t\tconst IS_VALID_BUILD_DESCRIPTION = BuildValidation.IS_VALID_BUILD_DESCRIPTION(\n\t\t\tcompleteBuild\n\t\t);\n\n\t\tvalidationsCollection = [\n\t\t\tHAS_BUILD_TITLE,\n\t\t\tIS_VALID_BUILD_TITLE,\n\t\t\tIS_VALID_ROLE,\n\t\t\tIS_VALID_GAME_MODE,\n\t\t\tIS_VALID_BUILD_DESCRIPTION,\n\t\t];\n\n\t\tallValidationsAreValid = checkAllValidationsAreValid(validationsCollection);\n\t} else if (activeStep === 1) {\n\t\tconst IS_VALID_CHAMPION = BuildValidation.IS_VALID_CHAMPION(\n\t\t\tcompleteBuild,\n\t\t\tchampions\n\t\t);\n\t\tconst HAS_ITEMS_SELECTED = BuildValidation.HAS_ITEMS_SELECTED(\n\t\t\tcompleteBuild\n\t\t);\n\t\tconst HAS_THREE_TO_SIX_PRIMARY_ITEMS = BuildValidation.HAS_THREE_TO_SIX_PRIMARY_ITEMS(\n\t\t\tcompleteBuild\n\t\t);\n\t\tconst IS_VALID_ITEMS_SELECTED = BuildValidation.IS_VALID_ITEMS_SELECTED(\n\t\t\tcompleteBuild,\n\t\t\titems\n\t\t);\n\t\tconst IS_VALID_NUMBER_OF_ITEMS_SELECTED = BuildValidation.IS_VALID_NUMBER_OF_ITEMS_SELECTED(\n\t\t\tcompleteBuild\n\t\t);\n\t\tconst IS_VALID_RUNES = BuildValidation.IS_VALID_RUNES(completeBuild, runes);\n\t\tconst IS_VALID_SPELLS = BuildValidation.IS_VALID_SPELLS(\n\t\t\tcompleteBuild,\n\t\t\tspells\n\t\t);\n\n\t\tvalidationsCollection = [\n\t\t\tIS_VALID_CHAMPION,\n\t\t\tHAS_ITEMS_SELECTED,\n\t\t\tHAS_THREE_TO_SIX_PRIMARY_ITEMS,\n\t\t\tIS_VALID_ITEMS_SELECTED,\n\t\t\tIS_VALID_NUMBER_OF_ITEMS_SELECTED,\n\t\t\tIS_VALID_RUNES,\n\t\t\tIS_VALID_SPELLS,\n\t\t];\n\n\t\tallValidationsAreValid = checkAllValidationsAreValid(validationsCollection);\n\t}\n\n\tif (allValidationsAreValid) {\n\t\treturn resultHandler(null, true);\n\t}\n\n\t// Find all validations that returned false\n\t// Return first validation that failed, hence [0]\n\tconst invalidValidation = findFailedValidation(validationsCollection);\n\n\treturn resultHandler(invalidValidation.message, false);\n};\n\n// For FINAL validation\nconst validateBuild = (\n\tcompleteBuild: BuildInterface,\n\tchampions: Array<ChampionInterface>,\n\titems: Array<ItemInterface>,\n\trunes: Array<RuneInterface>,\n\tspells: Array<SpellInterface>,\n\tranks: Array<RankInterface>,\n\troles: Array<RoleInterface>\n) => {\n\tconst HAS_BUILD_TITLE = BuildValidation.HAS_BUILD_TITLE(completeBuild);\n\tconst IS_VALID_BUILD_TITLE = BuildValidation.IS_VALID_BUILD_TITLE(\n\t\tcompleteBuild\n\t);\n\tconst HAS_ITEMS_SELECTED = BuildValidation.HAS_ITEMS_SELECTED(completeBuild);\n\tconst HAS_THREE_TO_SIX_PRIMARY_ITEMS = BuildValidation.HAS_THREE_TO_SIX_PRIMARY_ITEMS(\n\t\tcompleteBuild\n\t);\n\tconst HAS_USERNAME = BuildValidation.HAS_USERNAME(completeBuild);\n\tconst IS_VALID_USERNAME = BuildValidation.IS_VALID_USERNAME(completeBuild);\n\tconst IS_VALID_ROLE = BuildValidation.IS_VALID_ROLE(completeBuild, roles);\n\tconst IS_VALID_GAME_MODE = BuildValidation.IS_VALID_GAME_MODE(completeBuild);\n\tconst IS_VALID_BUILD_DESCRIPTION = BuildValidation.IS_VALID_BUILD_DESCRIPTION(\n\t\tcompleteBuild\n\t);\n\tconst IS_VALID_CHAMPION = BuildValidation.IS_VALID_CHAMPION(\n\t\tcompleteBuild,\n\t\tchampions\n\t);\n\tconst IS_VALID_ITEMS_SELECTED = BuildValidation.IS_VALID_ITEMS_SELECTED(\n\t\tcompleteBuild,\n\t\titems\n\t);\n\tconst IS_VALID_RUNES = BuildValidation.IS_VALID_RUNES(completeBuild, runes);\n\tconst IS_VALID_SPELLS = BuildValidation.IS_VALID_SPELLS(\n\t\tcompleteBuild,\n\t\tspells\n\t);\n\tconst IS_VALID_RANK = BuildValidation.IS_VALID_RANK(completeBuild, ranks);\n\tconst IS_VALID_NUMBER_OF_ITEMS_SELECTED = BuildValidation.IS_VALID_NUMBER_OF_ITEMS_SELECTED(\n\t\tcompleteBuild\n\t);\n\tconst IS_VALID_REGION = BuildValidation.IS_VALID_REGION(completeBuild);\n\n\tconst validationsCollection = [\n\t\tHAS_BUILD_TITLE,\n\t\tIS_VALID_BUILD_TITLE,\n\t\tHAS_ITEMS_SELECTED,\n\t\tHAS_THREE_TO_SIX_PRIMARY_ITEMS,\n\t\tHAS_USERNAME,\n\t\tIS_VALID_USERNAME,\n\t\tIS_VALID_ROLE,\n\t\tIS_VALID_GAME_MODE,\n\t\tIS_VALID_BUILD_DESCRIPTION,\n\t\tIS_VALID_CHAMPION,\n\t\tIS_VALID_ITEMS_SELECTED,\n\t\tIS_VALID_RUNES,\n\t\tIS_VALID_SPELLS,\n\t\tIS_VALID_RANK,\n\t\tIS_VALID_NUMBER_OF_ITEMS_SELECTED,\n\t\tIS_VALID_REGION,\n\t];\n\n\tconst allValidationsAreValid = checkAllValidationsAreValid(\n\t\tvalidationsCollection\n\t);\n\n\tif (allValidationsAreValid) {\n\t\treturn {\n\t\t\tmessage: null,\n\t\t\tresult: true,\n\t\t};\n\t}\n\n\treturn findFailedValidation(validationsCollection);\n};\n\nexport const BuildValidationHelper = {\n\tresultHandler,\n\tvalidateBuild,\n\tvalidateStep,\n\tfindFailedValidation,\n\tcheckAllValidationsAreValid,\n\tsanitizeBuildTextInputs,\n\tisValidReasonTypeAndLength,\n\tisValidString,\n\tisValidReasonLength,\n};\n","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\shared\\components\\PageLayout\\Layout.tsx",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\shared\\components\\AlertPopup\\AlertPopup.tsx",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\FAQPage\\index.tsx",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\AboutPage\\index.tsx",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\ChampionBuildsPage\\index.tsx",["405","406","407"],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\LandingPage\\index.tsx",["408","409","410"],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\PlayerBuildPage\\index.tsx",["411","412","413"],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\PrivacyPolicyPage\\index.tsx",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\index.tsx",["414","415"],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\ChampionBuildsPage\\Header\\index.tsx",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\FAQPage\\Accordion\\index.tsx",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\LandingPage\\ChampionsList\\index.tsx",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\ChampionBuildsPage\\BuildsList\\index.tsx",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\LandingPage\\FilterChampions\\index.tsx",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\PlayerBuildPage\\PlayerBuildFooter\\index.tsx",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\Header\\index.tsx",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\PlayerInformation\\index.tsx",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\BuildInformation\\index.tsx",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\Stepper\\index.tsx",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\PlayerBuildPage\\PlayerBuildHeader\\index.tsx",["416","417"],"import React from 'react';\nimport moment from 'moment';\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\n\n// Shared\nimport { ImagePath } from '../../../shared/utils/imagePath';\nimport { GameMode } from '../../../shared/constants/constants';\n\n// MaterialUI\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\n\n// Components\nimport BuildChip from './BuildChip';\n\n// CSS\nimport styles from './Styles.module.css';\n\n// Types\nimport { BuildInterface } from '../../../shared/interfaces/Build';\n\ntype PlayerBuildHeaderProps = {\n\tbuild: BuildInterface;\n};\n\nconst PlayerBuildHeader = (props: PlayerBuildHeaderProps) => {\n\tconst { build } = props;\n\tconst {\n\t\tbuildTitle,\n\t\tbuildRole,\n\t\tchampion,\n\t\tdateSubmitted,\n\t\tgameMode,\n\t\tpatchVersion,\n\t\trank,\n\t\tregion,\n\t\tusername,\n\t} = build;\n\tconst { id: roleId, roleName } = buildRole;\n\n\tlet gameModeToDisplay;\n\tswitch (gameMode) {\n\t\tcase GameMode.NORMAL:\n\t\t\tgameModeToDisplay = 'Normal';\n\t\t\tbreak;\n\t\tcase GameMode.ARAM:\n\t\t\tgameModeToDisplay = 'ARAM';\n\t\t\tbreak;\n\t}\n\n\treturn (\n\t\t<Grid container spacing={2} className={styles.playerBuildHeaderContainer}>\n\t\t\t{/* Champion Image */}\n\t\t\t<Grid item>\n\t\t\t\t<Box className={styles.championImageContainer}>\n\t\t\t\t\t<LazyLoadImage\n\t\t\t\t\t\tsrc={ImagePath.Champion(champion.id)}\n\t\t\t\t\t\tclassName={styles.championImage}\n\t\t\t\t\t\ttitle={champion.championName}\n\t\t\t\t\t/>\n\t\t\t\t\t{/* <Box\n\t\t\t\t\t\tclassName={styles.buildChampionContainer}\n\t\t\t\t\t\tdisplay='flex'\n\t\t\t\t\t\tjustifyContent='center'\n\t\t\t\t\t>\n\t\t\t\t\t\t<LazyLoadImage\n\t\t\t\t\t\t\tsrc={`/images/wildriftroles/${roleId}.png`}\n\t\t\t\t\t\t\tclassName={styles.buildRoleImage}\n\t\t\t\t\t\t\ttitle={roleName}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<span className={`${styles.buildChampionText} text-white-primary`}>\n\t\t\t\t\t\t\t{champion.championName}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</Box> */}\n\t\t\t\t</Box>\n\t\t\t</Grid>\n\n\t\t\t{/* Champion Name, Build Title, and Username */}\n\t\t\t<Grid item xs={12} sm>\n\t\t\t\t<Box\n\t\t\t\t\tclassName={`${styles.buildInformationContainer} text-white-primary playerBuildBuildInformationContainer`}\n\t\t\t\t>\n\t\t\t\t\t<p\n\t\t\t\t\t\tclassName={`${styles.buildTitleText} text-white-secondary text-bold`}\n\t\t\t\t\t>\n\t\t\t\t\t\t{buildTitle.toString()}&nbsp;\n\t\t\t\t\t</p>\n\t\t\t\t\t<Box>\n\t\t\t\t\t\t<Box>\n\t\t\t\t\t\t\t<p className={`${styles.usernameText} text-white-primary`}>\n\t\t\t\t\t\t\t\tBuild by {username}\n\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t<Box className={styles.buildChipsContainer}>\n\t\t\t\t\t\t\t{/* Capitalize first letter of Game Mode */}\n\t\t\t\t\t\t\t<BuildChip property='Mode' value={gameModeToDisplay} />\n\t\t\t\t\t\t\t<BuildChip property='Lane' value={buildRole.roleName} />\n\t\t\t\t\t\t\t<BuildChip property='Rank' value={rank.rankName} />\n\t\t\t\t\t\t\t<BuildChip property='Region' value={region.toUpperCase()} />\n\t\t\t\t\t\t</Box>\n\t\t\t\t\t</Box>\n\t\t\t\t</Box>\n\t\t\t</Grid>\n\n\t\t\t<Grid item xs={12} sm className='playerBuildHeaderMiscDataGrid'>\n\t\t\t\t<Box\n\t\t\t\t\tclassName={`${styles.miscellaneousDataContainer} playerBuildHeaderMiscDataContainer`}\n\t\t\t\t>\n\t\t\t\t\t<p className={`${styles.patchText} buildPatchText`}>\n\t\t\t\t\t\tPatch {patchVersion}\n\t\t\t\t\t</p>\n\t\t\t\t\t<p\n\t\t\t\t\t\tclassName={`${styles.buildDateSubmitted} text-white-secondary buildDateSubmittedText`}\n\t\t\t\t\t>\n\t\t\t\t\t\t{moment(dateSubmitted).format('MM/DD/YYYY')}\n\t\t\t\t\t</p>\n\t\t\t\t</Box>\n\t\t\t</Grid>\n\t\t</Grid>\n\t);\n};\n\nexport default PlayerBuildHeader;\n","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\PlayerBuildPage\\Spellitem\\index.tsx",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\PlayerBuildPage\\SectionDivider\\index.tsx",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\PlayerBuildPage\\RuneItem\\index.tsx",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\PlayerBuildPage\\BuildDescription\\index.tsx",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\PlayerBuildPage\\BuildItem\\index.tsx",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\ChampionBuildsPage\\Header\\Counters\\index.tsx",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\ChampionBuildsPage\\Header\\Lanes\\index.tsx",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\PlayerBuildPage\\PlayerBuildFooter\\CopyBuildLink\\index.tsx",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\PlayerBuildPage\\PlayerBuildFooter\\ViewMoreBuilds\\index.tsx",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\PlayerInformation\\PlayerRegion\\index.tsx",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\Stepper\\StepperButtons\\index.tsx",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\ReCaptcha\\index.tsx",["418"],"import React, { useEffect, useRef, RefObject } from 'react';\nimport { ReCaptcha } from '../../../../shared/config/config';\nimport ReCAPTCHA from 'react-google-recaptcha';\n\n// Redux\nimport { connect, ConnectedProps } from 'react-redux';\nimport actionTypes from '../../../../store/actions';\n\nconst ReCaptchaComponent = (props: ReCaptchaComponentProps) => {\n\tconst { resetCaptcha } = props;\n\t// RECAPTCHA Props\n\tconst { setRecaptchRef, setRecaptchaToken } = props;\n\n\t// ===== ReCaptcha ===== //\n\tlet ref = useRef<ReCAPTCHA | null>(null);\n\n\tconst recaptchaHandleChange = (value: string | null) => {\n\t\tsetRecaptchaToken(value);\n\t};\n\n\tuseEffect(() => {\n\t\tsetRecaptchRef(ref);\n\t}, []);\n\n\treturn (\n\t\t<ReCAPTCHA\n\t\t\tref={(r) => (ref.current = r)}\n\t\t\tsitekey={ReCaptcha.PUBLIC_KEY!} // Always has a value hence !\n\t\t\tonChange={recaptchaHandleChange}\n\t\t\tonExpired={() => resetCaptcha()}\n\t\t/>\n\t);\n};\n\nconst mapDispatchToProps = (dispatch: any) => {\n\treturn {\n\t\tsetRecaptchRef: (recaptchaRef: RefObject<ReCAPTCHA | null>) =>\n\t\t\tdispatch({\n\t\t\t\ttype: actionTypes.RECAPTCHA_SET_REF,\n\t\t\t\tdata: recaptchaRef,\n\t\t\t}),\n\t\tsetRecaptchaToken: (recaptchaToken: string | null) =>\n\t\t\tdispatch({\n\t\t\t\ttype: actionTypes.RECAPTCHA_SET_TOKEN,\n\t\t\t\tdata: recaptchaToken,\n\t\t\t}),\n\t};\n};\n\nconst connector = connect(null, mapDispatchToProps);\n\ntype PropsFromRedux = ConnectedProps<typeof connector> & {\n\tresetCaptcha: () => void;\n};\n\ntype ReCaptchaComponentProps = PropsFromRedux;\n\nexport default connector(ReCaptchaComponent);\n","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\PlayerBuildPage\\PlayerBuildHeader\\BuildChip\\index.tsx",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\PlayerInformation\\PlayerRank\\index.tsx",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\PlayerInformation\\PlayerUsername\\index.tsx",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\ChampionBuildsPage\\BuildsList\\NoBuilds\\index.tsx",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\ChampionBuildsPage\\BuildsList\\BuildBox\\index.tsx",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\ChampionBuildsPage\\BuildsList\\BuildBox\\BuildItem\\index.tsx",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\ChampionBuildsPage\\BuildsList\\BuildBox\\BuildRankUser\\index.tsx",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\ChampionBuildsPage\\BuildsList\\BuildBox\\BuildDate\\index.tsx",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\ChampionBuildsPage\\BuildsList\\BuildBox\\BuildRune\\index.tsx",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\ChampionBuildsPage\\BuildsList\\BuildBox\\BuildSpell\\index.tsx",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\BuildInformation\\SpellsSelect\\index.tsx",["419"],"import React from 'react';\n\n// Redux\nimport { connect, ConnectedProps } from 'react-redux';\nimport actionTypes from '../../../../../shared/store/actions';\n\n// Shared\nimport {\n\tGameMode,\n\tMaps,\n\tSpellNumber,\n} from '../../../../../shared/constants/constants';\n\n// MaterialUI\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\n\n// Components\nimport Spell from './Spell/index';\n\n// CSS\nimport globalstyles from '../../Styles.module.css';\n\n// Types\nimport { SpellInterface } from '../../../../../shared/interfaces/GameData';\nimport { RootState } from '../../../../../shared/interfaces/GlobalStore';\n\nconst SpellsSelect = (props: SpellsSelectProps) => {\n\t// Game Data PROPS\n\tconst { spells } = props;\n\t// Build PROPS\n\tconst { gameMode, spellsSelected, setSpellsSelected } = props;\n\n\tconst handleSpellSelectChange = (\n\t\te: React.ChangeEvent<HTMLSelectElement>,\n\t\tspellNumber: number\n\t) => {\n\t\tconst { value: spellId } = e.target;\n\n\t\tconst getSpell = spells.find(\n\t\t\t(spell: SpellInterface) => spell.id === spellId\n\t\t);\n\n\t\tif (getSpell) {\n\t\t\tswitch (spellNumber) {\n\t\t\t\tcase 1:\n\t\t\t\t\tsetSpellsSelected(SpellNumber.SPELL_ONE, getSpell);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 2:\n\t\t\t\t\tsetSpellsSelected(SpellNumber.SPELL_TWO, getSpell);\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t};\n\n\t// Filter spells to display based on game mode selected\n\t// Gamemode = NORMAL ? w/o Mark n Dash, Clarity\n\t// Gamemode = ARAM ? w/o Smite\n\t// GameMode = NORMAL ? Display spells that has wild_rift applicable map\n\t// GameMode = ARAM ? Display spells that has howling_abyss applicable map\n\tconst buildSpellsToDisplay = spells.filter((spell: SpellInterface) => {\n\t\tconst { applicableMaps } = spell;\n\n\t\tconst hasHowlingAbyss = applicableMaps.some(\n\t\t\t(map: string) => map === Maps.HOWLING_ABYSS\n\t\t);\n\t\tconst hasWildRift = applicableMaps.some(\n\t\t\t(map: string) => map === Maps.WILD_RIFT\n\t\t);\n\n\t\tif (gameMode === GameMode.NORMAL && hasWildRift) {\n\t\t\treturn spell;\n\t\t} else if (gameMode === GameMode.ARAM && hasHowlingAbyss) {\n\t\t\treturn spell;\n\t\t}\n\t});\n\n\treturn (\n\t\t<Box>\n\t\t\t<p className={globalstyles.inputLabel}>8. Summoner Spells</p>\n\t\t\t<p className={globalstyles.inputDescription}>\n\t\t\t\tSelect the spells for your build\n\t\t\t</p>\n\n\t\t\t<Grid container item xs={12}>\n\t\t\t\t{/* Spell One */}\n\t\t\t\t<Spell\n\t\t\t\t\tspells={buildSpellsToDisplay}\n\t\t\t\t\tspellNumber={1}\n\t\t\t\t\tspellsSelected={spellsSelected}\n\t\t\t\t\thandleSpellSelectChange={handleSpellSelectChange}\n\t\t\t\t/>\n\n\t\t\t\t{/* Spell Two */}\n\t\t\t\t<Spell\n\t\t\t\t\tspells={buildSpellsToDisplay}\n\t\t\t\t\tspellNumber={2}\n\t\t\t\t\tspellsSelected={spellsSelected}\n\t\t\t\t\thandleSpellSelectChange={handleSpellSelectChange}\n\t\t\t\t/>\n\t\t\t</Grid>\n\t\t</Box>\n\t);\n};\n\nconst mapStateToProps = (state: RootState) => {\n\treturn {\n\t\tgameMode: state.build.gameMode,\n\t\tspellsSelected: state.build.spells,\n\t\tspells: state.gameData.spells,\n\t};\n};\n\nconst mapDispatchToprops = (dispatch: any) => {\n\treturn {\n\t\tsetSpellsSelected: (spellKey: string, data: SpellInterface) =>\n\t\t\tdispatch({ type: actionTypes.BUILD_SET_SPELLSSELECTED, spellKey, data }),\n\t};\n};\n\nconst connector = connect(mapStateToProps, mapDispatchToprops);\n\ntype PropsFromRedux = ConnectedProps<typeof connector>;\n\ntype SpellsSelectProps = PropsFromRedux;\n\nexport default connector(SpellsSelect);\n","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\BuildInformation\\ChampionSelect\\index.tsx",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\BuildInformation\\ItemsSelect\\index.tsx",["420"],"import React, { useState } from 'react';\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\n\n// Redux\nimport { connect, ConnectedProps } from 'react-redux';\nimport actionTypes from '../../../../../shared/store/actions';\n\n// Shared\nimport { ImagePath } from '../../../../../shared/utils/imagePath';\nimport {\n\tItemType,\n\tItemStatus,\n} from '../../../../../shared/constants/constants';\nimport { DefaultSelectedState } from '../../../../../shared/constants/defaultSelectedState';\nimport { RequiredLength } from '../../../../../shared/constants/requiredLength';\n\n// MaterialUI\nimport Box from '@material-ui/core/Box';\nimport Button from '@material-ui/core/Button';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Grid from '@material-ui/core/Grid';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\n\n// Components\nimport ItemsSelected from '../ItemsSelected';\n\n// CSS\nimport globalstyles from '../../Styles.module.css';\nimport styles from './Styles.module.css';\n\n// Types\nimport { ItemInterface } from '../../../../../shared/interfaces/GameData';\nimport { RootState } from '../../../../../shared/interfaces/GlobalStore';\n\nconst ItemsSelect = (props: ItemsSelectProps) => {\n\t// Game Data PROPS\n\tconst { items } = props;\n\t// Build PROPS\n\tconst { itemsConfirmed, setItemsConfirmed } = props;\n\n\tconst [itemSelected, setItemSelected] = useState<ItemInterface>(\n\t\t// Defaults to Item: 'Abyssal Mask' which is the first option\n\t\tDefaultSelectedState.ITEM\n\t);\n\tconst [itemType, setItemType] = useState(ItemType.PRIMARY);\n\tconst [itemReason, setItemReason] = useState('');\n\n\tconst handleItemSelectChange = (e: React.ChangeEvent<HTMLSelectElement>) => {\n\t\tconst { value: itemId } = e.target;\n\n\t\tconst getItem = items.find((item: ItemInterface) => item.id === itemId);\n\n\t\tif (getItem) {\n\t\t\tsetItemSelected(getItem);\n\t\t}\n\t};\n\n\tconst handleItemTypeChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n\t\tsetItemType(e.target.value);\n\t};\n\n\tconst handleItemExplanationChange = (\n\t\te: React.ChangeEvent<HTMLTextAreaElement>\n\t) => {\n\t\tsetItemReason(e.target.value);\n\t};\n\n\tconst handleDeleteItemClick = (itemId: string) => {\n\t\tconst filteredItems = itemsConfirmed.filter(\n\t\t\t(item: ItemInterface) => item.id !== itemId\n\t\t);\n\n\t\tif (filteredItems) {\n\t\t\tsetItemsConfirmed(filteredItems);\n\t\t}\n\t};\n\n\tconst handleAddItemClick = () => {\n\t\t// Pushes item to itemsConfirmed Array\n\t\tsetItemsConfirmed([\n\t\t\t...itemsConfirmed,\n\t\t\t{ ...itemSelected, type: itemType, reason: itemReason },\n\t\t]);\n\t\tsetItemReason('');\n\t};\n\n\treturn (\n\t\t<Box>\n\t\t\t<p className={globalstyles.inputLabel}>\n\t\t\t\t6. Items <span className={globalstyles.requiredInput}>*</span>\n\t\t\t</p>\n\t\t\t<p className={globalstyles.inputDescription}>\n\t\t\t\tSelect the items for your build&nbsp;\n\t\t\t</p>\n\n\t\t\t<Box>\n\t\t\t\t<Grid container spacing={3}>\n\t\t\t\t\t<Grid item xs={12} sm={6}>\n\t\t\t\t\t\t<Box>\n\t\t\t\t\t\t\t{/* ITEM IMAGE */}\n\t\t\t\t\t\t\t<LazyLoadImage\n\t\t\t\t\t\t\t\tsrc={ImagePath.Item(itemSelected.id)}\n\t\t\t\t\t\t\t\tclassName={styles.itemImage}\n\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t{/* <SELECT> */}\n\t\t\t\t\t\t\t<select\n\t\t\t\t\t\t\t\tonChange={handleItemSelectChange}\n\t\t\t\t\t\t\t\tclassName={globalstyles.buildSelectInput}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{items.map((item: ItemInterface, index: number) => {\n\t\t\t\t\t\t\t\t\tconst { id: itemId, itemName, status } = item;\n\n\t\t\t\t\t\t\t\t\tif (status !== ItemStatus.REMOVED) {\n\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t<option\n\t\t\t\t\t\t\t\t\t\t\t\tkey={index}\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={itemId}\n\t\t\t\t\t\t\t\t\t\t\t\tclassName={globalstyles.buildSelectOption}\n\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t{itemName}\n\t\t\t\t\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t</select>\n\n\t\t\t\t\t\t\t{/* ITEM TYPE */}\n\t\t\t\t\t\t\t<Box>\n\t\t\t\t\t\t\t\t<RadioGroup\n\t\t\t\t\t\t\t\t\trow\n\t\t\t\t\t\t\t\t\tname='position'\n\t\t\t\t\t\t\t\t\tdefaultValue={ItemType.PRIMARY}\n\t\t\t\t\t\t\t\t\tclassName={styles.radioGroup}\n\t\t\t\t\t\t\t\t\tonChange={handleItemTypeChange}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<FormControlLabel\n\t\t\t\t\t\t\t\t\t\tvalue={ItemType.PRIMARY}\n\t\t\t\t\t\t\t\t\t\tcontrol={<Radio color='primary' />}\n\t\t\t\t\t\t\t\t\t\tlabel='Primary'\n\t\t\t\t\t\t\t\t\t\tlabelPlacement='end'\n\t\t\t\t\t\t\t\t\t\tclassName={styles.radioButtonContainer}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<FormControlLabel\n\t\t\t\t\t\t\t\t\t\tvalue={ItemType.OPTIONAL}\n\t\t\t\t\t\t\t\t\t\tcontrol={<Radio color='primary' />}\n\t\t\t\t\t\t\t\t\t\tlabel='Optional'\n\t\t\t\t\t\t\t\t\t\tlabelPlacement='end'\n\t\t\t\t\t\t\t\t\t\tclassName={styles.radioButtonContainer}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</RadioGroup>\n\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t</Box>\n\t\t\t\t\t</Grid>\n\n\t\t\t\t\t{/* Item Explanation */}\n\t\t\t\t\t<Grid item xs={12} sm={6}>\n\t\t\t\t\t\t<Box>\n\t\t\t\t\t\t\t<textarea\n\t\t\t\t\t\t\t\tid='itemReason'\n\t\t\t\t\t\t\t\tname='itemReason'\n\t\t\t\t\t\t\t\trows={5}\n\t\t\t\t\t\t\t\tvalue={itemReason}\n\t\t\t\t\t\t\t\tplaceholder='Explanation'\n\t\t\t\t\t\t\t\tclassName={`${styles.explanationTextArea} text-white-disabled`}\n\t\t\t\t\t\t\t\tmaxLength={RequiredLength.REASON.MAX_LENGTH}\n\t\t\t\t\t\t\t\tonChange={(e) => handleItemExplanationChange(e)}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<Box\n\t\t\t\t\t\t\t\tdisplay='flex'\n\t\t\t\t\t\t\t\tflexDirection='row-reverse'\n\t\t\t\t\t\t\t\tclassName={styles.addItemButtonContainer}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\tvariant='contained'\n\t\t\t\t\t\t\t\t\tstyle={{ backgroundColor: '#326cac' }}\n\t\t\t\t\t\t\t\t\tonClick={handleAddItemClick}\n\t\t\t\t\t\t\t\t\tclassName={styles.addItemButton}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tAdd Item\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t</Box>\n\t\t\t\t\t</Grid>\n\n\t\t\t\t\t{/* Items List */}\n\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t<ItemsSelected handleDeleteItemClick={handleDeleteItemClick} />\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\t\t\t</Box>\n\t\t</Box>\n\t);\n};\n\nconst mapStateToProps = (state: RootState) => {\n\treturn {\n\t\titemsConfirmed: state.build.itemsConfirmed,\n\t\titems: state.gameData.items,\n\t};\n};\n\nconst mapDispatchToProps = (dispatch: any) => {\n\treturn {\n\t\tsetItemsConfirmed: (items: Array<ItemInterface>) =>\n\t\t\tdispatch({ type: actionTypes.BUILD_SET_ITEMSCONFIRMED, data: items }),\n\t};\n};\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\n\ntype PropsFromRedux = ConnectedProps<typeof connector>;\n\ntype ItemsSelectProps = PropsFromRedux;\n\nexport default connector(ItemsSelect);\n","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\BuildInformation\\RunesSelect\\index.tsx",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\BuildInformation\\SpellsSelect\\Spell\\index.tsx",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\BuildInformation\\RunesSelect\\components\\Inspiration.tsx",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\BuildInformation\\RunesSelect\\components\\Keystone.tsx",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\BuildInformation\\RunesSelect\\components\\Resolve.tsx",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\BuildInformation\\RunesSelect\\components\\Domination.tsx",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\BuildInformation\\ItemsSelected\\index.tsx",["421"],"import React, { useEffect } from 'react';\n\n// Redux\nimport { connect, ConnectedProps } from 'react-redux';\nimport actionTypes from '../../../../../shared/store/actions';\n\n// Shared\nimport { ItemType } from '../../../../../shared/constants/constants';\nimport { RequiredLength } from '../../../../../shared/constants/requiredLength';\nimport { Message } from '../../../../../shared/constants/validationMessages';\n\n// MaterialUI\nimport { Theme, makeStyles } from '@material-ui/core/styles';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\n\nimport InfoIcon from '@material-ui/icons/Info';\nimport Tooltip from '@material-ui/core/Tooltip';\n\n// Components\nimport BuildItem from './BuildItem';\n\n// Types\nimport { ItemInterface } from '../../../../../shared/interfaces/GameData';\nimport { snackbarControlsInterface } from '../../../../../shared/interfaces/interfaces';\nimport { RootState } from '../../../../../shared/interfaces/GlobalStore';\n\n// CSS\nimport styles from './Styles.module.css';\n\nconst useStylesBootstrap = makeStyles((theme: Theme) => ({\n\ttooltip: {\n\t\tletterSpacing: '0.1px',\n\t\tbackgroundColor: '#171717',\n\t\tfontSize: '12px',\n\t\tpadding: '12px',\n\t},\n}));\n\nconst ItemsSelected = (props: ItemsSelectedProps) => {\n\tconst { handleDeleteItemClick } = props;\n\t// Build PROPS\n\tconst { itemsConfirmed, setItemsConfirmed } = props;\n\t// Snackbar Control PROPS\n\tconst { setSnackbarControls } = props;\n\n\tconst classes = useStylesBootstrap();\n\n\t// Check for duplicate items selected\n\t// Check for primary items limit\n\tuseEffect(() => {\n\t\tconst primaryItems = itemsConfirmed.filter(\n\t\t\t(item) => item.type === ItemType.PRIMARY\n\t\t);\n\n\t\tvar itemArray = itemsConfirmed.map((item) => {\n\t\t\treturn item.id;\n\t\t});\n\t\tvar isDuplicate = itemArray.some((item, index) => {\n\t\t\treturn itemArray.indexOf(item) !== index;\n\t\t});\n\n\t\t// Remove duplicates from itemsConfirmed Array\n\t\tconst filteredItemsConfirmed = itemsConfirmed.filter(\n\t\t\t(item, index, arr) => arr.findIndex((t) => t.id === item.id) === index\n\t\t);\n\n\t\tif (isDuplicate) {\n\t\t\tsetItemsConfirmed(filteredItemsConfirmed);\n\n\t\t\tsetSnackbarControls({\n\t\t\t\tsnackbarControls: {\n\t\t\t\t\tmessage: Message.ERROR.ITEM_IS_ALREADY_IN_BUILD,\n\t\t\t\t\tshouldOpen: true,\n\t\t\t\t\tsnackbarType: 'error',\n\t\t\t\t},\n\t\t\t});\n\t\t} else if (primaryItems.length > RequiredLength.ITEMS.PRIMARY.MAX_LENGTH) {\n\t\t\tsetSnackbarControls({\n\t\t\t\tsnackbarControls: {\n\t\t\t\t\tmessage: Message.ERROR.CAN_ONLY_HAVE_SIX_PRIMARY_ITEMS,\n\t\t\t\t\tshouldOpen: true,\n\t\t\t\t\tsnackbarType: 'error',\n\t\t\t\t},\n\t\t\t});\n\n\t\t\tconst itemsConfirmedCopy = [...itemsConfirmed];\n\n\t\t\t// Remove last item added to array\n\t\t\titemsConfirmedCopy.pop();\n\n\t\t\tsetItemsConfirmed(itemsConfirmedCopy);\n\t\t}\n\t}, [itemsConfirmed]);\n\n\treturn (\n\t\t<Box>\n\t\t\t<Box className={styles.itemsSelectedContainer}>\n\t\t\t\t{itemsConfirmed.length !== 0 ? (\n\t\t\t\t\t<>\n\t\t\t\t\t\t{/* TYPE: MAIN */}\n\t\t\t\t\t\t<Box display='flex'>\n\t\t\t\t\t\t\t<Box flexGrow={1}>\n\t\t\t\t\t\t\t\t<p className={styles.itemsSelectedHeader}>Primary Items</p>\n\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t<Box>\n\t\t\t\t\t\t\t\t<Tooltip\n\t\t\t\t\t\t\t\t\ttitle={\n\t\t\t\t\t\t\t\t\t\t<div className={styles.tooltipContainer}>\n\t\t\t\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t\t\t\t\t\tPrimary:&nbsp;\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span className={styles.tooltipHighlight}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{RequiredLength.ITEMS.PRIMARY.MIN_LENGTH}\n\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t&nbsp;-&nbsp;\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span className={styles.tooltipHighlight}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{RequiredLength.ITEMS.PRIMARY.MAX_LENGTH}\n\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t&nbsp;items\n\t\t\t\t\t\t\t\t\t\t\t\t</p>\n\n\t\t\t\t\t\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t\t\t\t\t\tOptional:&nbsp;\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span className={styles.tooltipHighlight}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{RequiredLength.ITEMS.OPTIONAL.MIN_LENGTH}\n\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t&nbsp;-&nbsp;\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span className={styles.tooltipHighlight}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{RequiredLength.ITEMS.OPTIONAL.MAX_LENGTH}\n\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t&nbsp;items\n\t\t\t\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t\t\t\t<p className={styles.tooltipWarning}>\n\t\t\t\t\t\t\t\t\t\t\t\t\tClick on an item to <i>delete</i> it from your list\n\t\t\t\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tplacement='top'\n\t\t\t\t\t\t\t\t\tclasses={classes}\n\t\t\t\t\t\t\t\t\tarrow\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<InfoIcon className={styles.infoIcon} />\n\t\t\t\t\t\t\t\t</Tooltip>\n\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t</Box>\n\n\t\t\t\t\t\t{/* TYPE: PRIMARY */}\n\t\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t\t{itemsConfirmed\n\t\t\t\t\t\t\t\t.filter((item: ItemInterface) => item.type === ItemType.PRIMARY)\n\t\t\t\t\t\t\t\t.map((item: ItemInterface, index: number) => {\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t<BuildItem\n\t\t\t\t\t\t\t\t\t\t\tkey={index}\n\t\t\t\t\t\t\t\t\t\t\titem={item}\n\t\t\t\t\t\t\t\t\t\t\thandleDeleteItemClick={handleDeleteItemClick}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t</Grid>\n\n\t\t\t\t\t\t{/* TYPE: OPTIONAL */}\n\t\t\t\t\t\t<p className={styles.itemsSelectedHeader}>Optional Items</p>\n\t\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t\t{itemsConfirmed\n\t\t\t\t\t\t\t\t.filter(\n\t\t\t\t\t\t\t\t\t(item: ItemInterface) => item.type === ItemType.OPTIONAL\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t.map((item: ItemInterface, index: number) => {\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t<BuildItem\n\t\t\t\t\t\t\t\t\t\t\tkey={index}\n\t\t\t\t\t\t\t\t\t\t\titem={item}\n\t\t\t\t\t\t\t\t\t\t\thandleDeleteItemClick={handleDeleteItemClick}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</>\n\t\t\t\t) : (\n\t\t\t\t\t<p>You haven't added any items to your build yet.</p>\n\t\t\t\t)}\n\t\t\t</Box>\n\t\t</Box>\n\t);\n};\n\nconst mapStateToProps = (state: RootState) => {\n\treturn {\n\t\titemsConfirmed: state.build.itemsConfirmed,\n\t};\n};\n\nconst mapDispatchToProps = (dispatch: any) => {\n\treturn {\n\t\tsetItemsConfirmed: (newItemsConfirmed: Array<ItemInterface>) =>\n\t\t\tdispatch({\n\t\t\t\ttype: actionTypes.BUILD_SET_ITEMSCONFIRMED,\n\t\t\t\tdata: newItemsConfirmed,\n\t\t\t}),\n\t\tsetSnackbarControls: (newControls: snackbarControlsInterface) =>\n\t\t\tdispatch({\n\t\t\t\ttype: actionTypes.SNACKBAR_SET_CONTROLS,\n\t\t\t\tdata: newControls.snackbarControls,\n\t\t\t}),\n\t};\n};\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\n\ntype PropsFromRedux = ConnectedProps<typeof connector>;\n\ntype ItemsSelectedProps = PropsFromRedux & {\n\thandleDeleteItemClick: (itemId: string) => void;\n};\n\nexport default connector(ItemsSelected);\n","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\BuildInformation\\ItemsSelected\\BuildItem\\index.tsx",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\App\\Routes.tsx",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\GeneralInformation\\index.tsx",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\GeneralInformation\\BuildRole\\index.tsx",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\GeneralInformation\\BuildTitle\\index.tsx",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\GeneralInformation\\BuildGameMode\\index.tsx",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\GeneralInformation\\BuildDescription\\index.tsx",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\shared\\store\\reducers\\build.ts",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\shared\\store\\reducers\\gameData.ts",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\shared\\store\\reducers\\reCaptcha.ts",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\shared\\store\\reducers\\snackbarControls.ts",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\shared\\store\\actions.ts",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\shared\\store\\index.ts",["422"],"// Redux\nimport { createStore, combineReducers } from 'redux';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\n\nimport buildReducer from './reducers/build';\nimport gameDataReducer from './reducers/gameData';\nimport recaptchaReducer from './reducers/reCaptcha';\nimport snackbarControlsReducer from './reducers/snackbarControls';\nimport userReducer from './reducers/user';\n\nconst persistConfig = {\n\tkey: 'root',\n\tstorage: storage,\n};\n\nconst rootReducer = combineReducers({\n\tbuild: buildReducer,\n\tgameData: gameDataReducer,\n\trecaptcha: recaptchaReducer,\n\tsnackbarControls: snackbarControlsReducer,\n\tuser: userReducer,\n});\n\nconst pReducer = persistReducer(persistConfig, rootReducer);\n\nconst store = createStore(rootReducer);\n\nconst persistor = persistStore(store);\n\nexport { store, persistor };\n","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\shared\\components\\Header\\AppBar\\AppBar.tsx",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\shared\\utils\\imagePath.ts",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\shared\\utils\\championNameToUrlString.ts",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\shared\\utils\\sessionStorage.ts",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\shared\\services\\gameDataRequests.ts",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\shared\\services\\buildsRequests.ts",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\shared\\services\\useQueriesTyped.ts",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\shared\\services\\firebaseApp.ts",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\shared\\store\\reducers\\user.ts",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\shared\\interfaces\\GlobalStore.ts",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\shared\\utils\\isValidUser.ts",["423"],"import { UserInterface } from '../interfaces/GlobalStore';\n\nexport const isValidUser = (user: any) => {\n\tif (user && Object.keys(user).length) {\n\t\treturn true;\n\t}\n\treturn false;\n};\n","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\shared\\components\\GoogleAd\\GoogleAd.tsx",[],{"ruleId":"424","severity":1,"message":"425","line":7,"column":10,"nodeType":"426","messageId":"427","endLine":7,"endColumn":21},{"ruleId":"424","severity":1,"message":"428","line":9,"column":17,"nodeType":"426","messageId":"427","endLine":9,"endColumn":26},{"ruleId":"429","replacedBy":"430"},{"ruleId":"431","replacedBy":"432"},{"ruleId":"424","severity":1,"message":"433","line":66,"column":3,"nodeType":"426","messageId":"427","endLine":66,"endColumn":7},{"ruleId":"434","severity":1,"message":"435","line":140,"column":5,"nodeType":"436","endLine":140,"endColumn":25,"suggestions":"437"},{"ruleId":"438","severity":1,"message":"439","line":198,"column":45,"nodeType":"440","messageId":"441","endLine":198,"endColumn":47},{"ruleId":"438","severity":1,"message":"439","line":66,"column":51,"nodeType":"440","messageId":"441","endLine":66,"endColumn":53},{"ruleId":"424","severity":1,"message":"442","line":93,"column":44,"nodeType":"426","messageId":"427","endLine":93,"endColumn":49},{"ruleId":"424","severity":1,"message":"443","line":93,"column":51,"nodeType":"426","messageId":"427","endLine":93,"endColumn":58},{"ruleId":"434","severity":1,"message":"444","line":119,"column":5,"nodeType":"436","endLine":119,"endColumn":25,"suggestions":"445"},{"ruleId":"438","severity":1,"message":"439","line":54,"column":70,"nodeType":"440","messageId":"441","endLine":54,"endColumn":72},{"ruleId":"434","severity":1,"message":"446","line":73,"column":5,"nodeType":"436","endLine":73,"endColumn":17,"suggestions":"447"},{"ruleId":"434","severity":1,"message":"446","line":84,"column":5,"nodeType":"436","endLine":84,"endColumn":21,"suggestions":"448"},{"ruleId":"424","severity":1,"message":"449","line":22,"column":8,"nodeType":"426","messageId":"427","endLine":22,"endColumn":20},{"ruleId":"424","severity":1,"message":"450","line":54,"column":40,"nodeType":"426","messageId":"427","endLine":54,"endColumn":49},{"ruleId":"434","severity":1,"message":"451","line":70,"column":5,"nodeType":"436","endLine":70,"endColumn":13,"suggestions":"452"},{"ruleId":"424","severity":1,"message":"453","line":137,"column":10,"nodeType":"426","messageId":"427","endLine":137,"endColumn":24},{"ruleId":"434","severity":1,"message":"454","line":211,"column":5,"nodeType":"436","endLine":211,"endColumn":7,"suggestions":"455"},{"ruleId":"424","severity":1,"message":"456","line":39,"column":14,"nodeType":"426","messageId":"427","endLine":39,"endColumn":20},{"ruleId":"424","severity":1,"message":"457","line":39,"column":22,"nodeType":"426","messageId":"427","endLine":39,"endColumn":30},{"ruleId":"434","severity":1,"message":"458","line":23,"column":5,"nodeType":"436","endLine":23,"endColumn":7,"suggestions":"459"},{"ruleId":"438","severity":1,"message":"439","line":61,"column":69,"nodeType":"440","messageId":"441","endLine":61,"endColumn":71},{"ruleId":"438","severity":1,"message":"460","line":112,"column":57,"nodeType":"440","messageId":"441","endLine":112,"endColumn":59},{"ruleId":"434","severity":1,"message":"461","line":94,"column":5,"nodeType":"436","endLine":94,"endColumn":21,"suggestions":"462"},{"ruleId":"424","severity":1,"message":"463","line":25,"column":7,"nodeType":"426","messageId":"427","endLine":25,"endColumn":15},{"ruleId":"424","severity":1,"message":"464","line":1,"column":10,"nodeType":"426","messageId":"427","endLine":1,"endColumn":23},"@typescript-eslint/no-unused-vars","'PersistGate' is defined but never used.","Identifier","unusedVar","'persistor' is defined but never used.","no-native-reassign",["465"],"no-negated-in-lhs",["466"],"'user' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'gameDataQueries', 'setChampions', 'setItems', 'setRanks', 'setRoles', 'setRunes', and 'setSpells'. Either include them or remove the dependency array.","ArrayExpression",["467"],"array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'error' is assigned a value but never used.","'isError' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'championBuildsQueries'. Either include it or remove the dependency array.",["468"],"React Hook useEffect has a missing dependency: 'champions'. Either include it or remove the dependency array.",["469"],["470"],"'PageNotFound' is defined but never used.","'isLoading' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'data', 'error', and 'isError'. Either include them or remove the dependency array.",["471"],"'saveToDatabase' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'setChampionSelected'. Either include it or remove the dependency array.",["472"],"'roleId' is assigned a value but never used.","'roleName' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'setRecaptchRef'. Either include it or remove the dependency array.",["473"],"Array.prototype.map() expects a value to be returned at the end of arrow function.","React Hook useEffect has missing dependencies: 'setItemsConfirmed' and 'setSnackbarControls'. Either include them or remove the dependency array.",["474"],"'pReducer' is assigned a value but never used.","'UserInterface' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"475","fix":"476"},{"desc":"477","fix":"478"},{"desc":"479","fix":"480"},{"desc":"481","fix":"482"},{"desc":"483","fix":"484"},{"desc":"485","fix":"486"},{"desc":"487","fix":"488"},{"desc":"489","fix":"490"},"Update the dependencies array to be: [eachQueryHasLoaded, gameDataQueries, setChampions, setItems, setRanks, setRoles, setRunes, setSpells]",{"range":"491","text":"492"},"Update the dependencies array to be: [championBuildsQueries, eachQueryHasLoaded]",{"range":"493","text":"494"},"Update the dependencies array to be: [champions, roleFilter]",{"range":"495","text":"496"},"Update the dependencies array to be: [championSearch, champions]",{"range":"497","text":"498"},"Update the dependencies array to be: [data, error, isError, status]",{"range":"499","text":"500"},"Update the dependencies array to be: [setChampionSelected]",{"range":"501","text":"502"},"Update the dependencies array to be: [setRecaptchRef]",{"range":"503","text":"504"},"Update the dependencies array to be: [itemsConfirmed, setItemsConfirmed, setSnackbarControls]",{"range":"505","text":"506"},[3359,3379],"[eachQueryHasLoaded, gameDataQueries, setChampions, setItems, setRanks, setRoles, setRunes, setSpells]",[3284,3304],"[championBuildsQueries, eachQueryHasLoaded]",[2061,2073],"[champions, roleFilter]",[2373,2389],"[championSearch, champions]",[2188,2196],"[data, error, isError, status]",[5948,5950],"[setChampionSelected]",[674,676],"[setRecaptchRef]",[2684,2700],"[itemsConfirmed, setItemsConfirmed, setSnackbarControls]"]