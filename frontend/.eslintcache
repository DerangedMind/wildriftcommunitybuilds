[{"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\index.tsx":"1","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\reportWebVitals.ts":"2","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\components\\Layout.tsx":"3","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\components\\Header\\Header.tsx":"4","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\components\\Footer\\Footer.tsx":"5","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Landing\\Landing.tsx":"6","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\App\\App.tsx":"7","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Landing\\components\\FilterBy\\FilterBy.tsx":"8","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Landing\\components\\Champions\\Champions.tsx":"9","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\components\\Error\\404\\PageNotFound.tsx":"10","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\components\\Header\\components\\AppBar.tsx":"11","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\CreateBuild.tsx":"12","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\components\\Stepper\\Stepper.tsx":"13","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\components\\BuildInformation\\BuildInformation.tsx":"14","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\components\\BuildSelection\\BuildSelection.tsx":"15","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\components\\PlayerInformation\\PlayerInformation.tsx":"16","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\components\\CreateBuildHeader\\CreateBuildHeader.tsx":"17","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\components\\BuildSelection\\components\\ChampionSelect\\ChampionSelect.tsx":"18","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\components\\BuildSelection\\components\\ItemsSelect\\ItemsSelect.tsx":"19","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\components\\BuildSelection\\components\\ItemsSelected\\ItemsSelected.tsx":"20","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\components\\BuildSelection\\components\\RunesSelect\\RunesSelect.tsx":"21","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\components\\BuildSelection\\components\\RunesSelect\\components\\Keystone.tsx":"22","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\components\\BuildSelection\\components\\RunesSelect\\components\\Domination.tsx":"23","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\components\\BuildSelection\\components\\RunesSelect\\components\\Resolve.tsx":"24","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\components\\BuildSelection\\components\\RunesSelect\\components\\Inspiration.tsx":"25","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\components\\BuildSelection\\components\\SpellsSelect\\SpellsSelect.tsx":"26","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\components\\BuildSelection\\components\\SpellsSelect\\components\\Spell.tsx":"27","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\components\\Loading\\Backdrop.tsx":"28","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\store\\actions.js":"29","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\store\\reducers\\gameData.js":"30","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\store\\reducers\\build.js":"31","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\utils\\interfaces.ts":"32","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\utils\\alertpopups.js":"33","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Builds\\Champion\\ChampionBuilds.tsx":"34","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Builds\\Player\\PlayerBuild.tsx":"35","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Builds\\Player\\components\\PlayerBuildHeader\\PlayerBuildHeader.tsx":"36","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Builds\\Player\\components\\SectionDivider\\SectionDivider.tsx":"37","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Builds\\Player\\components\\BuildItem\\BuildItem.tsx":"38","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Builds\\Player\\components\\RuneItem\\RuneItem.tsx":"39","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Builds\\Player\\components\\Spellitem\\SpellItem.tsx":"40","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Builds\\Player\\components\\PlayerBuildFooter\\PlayerBuildFooter.tsx":"41","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\components\\Popover\\ItemPopover.tsx":"42"},{"size":1313,"mtime":1614060803734,"results":"43","hashOfConfig":"44"},{"size":425,"mtime":499162500000,"results":"45","hashOfConfig":"44"},{"size":775,"mtime":1614068516186,"results":"46","hashOfConfig":"44"},{"size":278,"mtime":1613392509686,"results":"47","hashOfConfig":"44"},{"size":1864,"mtime":1614068383617,"results":"48","hashOfConfig":"44"},{"size":2565,"mtime":1614060977319,"results":"49","hashOfConfig":"44"},{"size":5916,"mtime":1614224115623,"results":"50","hashOfConfig":"44"},{"size":1687,"mtime":1614072742558,"results":"51","hashOfConfig":"44"},{"size":1225,"mtime":1614074646266,"results":"52","hashOfConfig":"44"},{"size":121,"mtime":1613391402398,"results":"53","hashOfConfig":"44"},{"size":1923,"mtime":1614156215810,"results":"54","hashOfConfig":"44"},{"size":3908,"mtime":1614075046877,"results":"55","hashOfConfig":"44"},{"size":1818,"mtime":1614073934430,"results":"56","hashOfConfig":"44"},{"size":2386,"mtime":1614074780047,"results":"57","hashOfConfig":"44"},{"size":1021,"mtime":1614074028631,"results":"58","hashOfConfig":"44"},{"size":3385,"mtime":1614074975480,"results":"59","hashOfConfig":"44"},{"size":795,"mtime":1614073704465,"results":"60","hashOfConfig":"44"},{"size":2773,"mtime":1614074802972,"results":"61","hashOfConfig":"44"},{"size":6155,"mtime":1614231347452,"results":"62","hashOfConfig":"44"},{"size":4687,"mtime":1614238830475,"results":"63","hashOfConfig":"44"},{"size":4163,"mtime":1614074939071,"results":"64","hashOfConfig":"44"},{"size":2788,"mtime":1614220494624,"results":"65","hashOfConfig":"44"},{"size":2857,"mtime":1614220498058,"results":"66","hashOfConfig":"44"},{"size":2773,"mtime":1614220486604,"results":"67","hashOfConfig":"44"},{"size":2851,"mtime":1614220500369,"results":"68","hashOfConfig":"44"},{"size":2193,"mtime":1614074956316,"results":"69","hashOfConfig":"44"},{"size":2000,"mtime":1614220509035,"results":"70","hashOfConfig":"44"},{"size":614,"mtime":1613638537382,"results":"71","hashOfConfig":"44"},{"size":1300,"mtime":1614222908092,"results":"72","hashOfConfig":"44"},{"size":970,"mtime":1614222942111,"results":"73","hashOfConfig":"44"},{"size":5305,"mtime":1614059755570,"results":"74","hashOfConfig":"44"},{"size":1781,"mtime":1614059430891,"results":"75","hashOfConfig":"44"},{"size":758,"mtime":1614043562167,"results":"76","hashOfConfig":"44"},{"size":472,"mtime":1614087725740,"results":"77","hashOfConfig":"44"},{"size":4414,"mtime":1614250894704,"results":"78","hashOfConfig":"44"},{"size":2599,"mtime":1614239938708,"results":"79","hashOfConfig":"44"},{"size":506,"mtime":1614230525357,"results":"80","hashOfConfig":"44"},{"size":2090,"mtime":1614330370609,"results":"81","hashOfConfig":"44"},{"size":1236,"mtime":1614250048602,"results":"82","hashOfConfig":"44"},{"size":1100,"mtime":1614234431690,"results":"83","hashOfConfig":"44"},{"size":871,"mtime":1614235227081,"results":"84","hashOfConfig":"44"},{"size":2603,"mtime":1614332261711,"results":"85","hashOfConfig":"44"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"89"},"q16prs",{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"89"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"89"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"89"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"89"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"89"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"89"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"89"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"89"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"89"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"89"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"89"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"157"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"157"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"157"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"157"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"89"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"89"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"89"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\index.tsx",["187","188","189"],"import React from 'react';\nimport ReactDOM from 'react-dom';\n\n// Redux\nimport { createStore, combineReducers } from 'redux';\nimport { Provider } from 'react-redux';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport storage from 'redux-persist/lib/storage';\nimport buildReducer from './store/reducers/build';\nimport gameDataReducer from './store/reducers/gameData';\n\nimport './index.css';\nimport App from './App/App';\nimport reportWebVitals from './reportWebVitals';\n\nconst persistConfig = {\n\tkey: 'root',\n\tstorage: storage,\n};\n\nconst rootReducer = combineReducers({\n\tbuild: buildReducer,\n\tgameData: gameDataReducer,\n});\n\nconst pReducer = persistReducer(persistConfig, rootReducer);\n\nconst store = createStore(rootReducer);\n\nconst persistor = persistStore(store);\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<Provider store={store}>\n\t\t\t{/* <PersistGate loading={null} persistor={persistor}> */}\n\t\t\t<App />\n\t\t\t{/* </PersistGate> */}\n\t\t</Provider>\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["190","191"],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\reportWebVitals.ts",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\components\\Layout.tsx",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\components\\Header\\Header.tsx",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\components\\Footer\\Footer.tsx",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Landing\\Landing.tsx",["192","193","194"],"import React, { useState, useEffect } from 'react';\n\n// Redux\nimport { connect, ConnectedProps } from 'react-redux';\n\n// MaterialUI\nimport Box from '@material-ui/core/Box';\n// Components\nimport FilterBy from './components/FilterBy/FilterBy';\nimport Champions from './components/Champions/Champions';\n// CSS\nimport styles from './landing.module.css';\n// Types\nimport { ChampionInterface, RootState } from '../../utils/interfaces';\n\nconst Landing = (props: LandingProps) => {\n\t// Game Data PROPS\n\tconst { champions } = props;\n\n\tconst [championSearch, setChampionSearch] = useState('');\n\tconst [filteredChampions, setFilteredChampions] = useState<\n\t\tArray<ChampionInterface>\n\t>([]);\n\tconst [roleFilter, setRoleFilter] = useState('all');\n\n\t// HANDLER for \"Search for a champion\" input\n\tconst handleChampionSearchChange = (\n\t\te: React.ChangeEvent<HTMLInputElement> // ChangeEvent more suitable for typing form events.\n\t) => {\n\t\tconst { value } = e.target;\n\t\tsetChampionSearch(value);\n\t};\n\n\tuseEffect(() => {\n\t\tsetFilteredChampions(champions);\n\t}, [champions]);\n\n\t// Change state based on \"All, Top, Jungle, Middle, Bottom, Support\"\n\tuseEffect(() => {\n\t\tconst filterRoles = champions.filter((champion: ChampionInterface) => {\n\t\t\tconst { lane } = champion;\n\n\t\t\t// Check if champion has \"lane\" property\n\t\t\tif (lane) {\n\t\t\t\tif (roleFilter === 'all') {\n\t\t\t\t\treturn champion;\n\t\t\t\t} else {\n\t\t\t\t\tfor (let i = 0; i < lane.length; i++) {\n\t\t\t\t\t\tif (lane[i].toLocaleLowerCase() === roleFilter) {\n\t\t\t\t\t\t\treturn champion;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tsetFilteredChampions(filterRoles);\n\t}, [roleFilter]);\n\n\t// Change state based on \"Search for a champion\"\n\tuseEffect(() => {\n\t\tconst filterChampions = champions.filter((champion: ChampionInterface) =>\n\t\t\tchampion.championName\n\t\t\t\t.toLocaleLowerCase()\n\t\t\t\t.includes(championSearch.toLocaleLowerCase())\n\t\t);\n\n\t\tsetFilteredChampions(filterChampions);\n\t}, [championSearch]);\n\n\treturn (\n\t\t<>\n\t\t\t<Box className={styles.landingContainer}>\n\t\t\t\t<FilterBy\n\t\t\t\t\tchampionSearch={championSearch}\n\t\t\t\t\thandleChampionSearchChange={handleChampionSearchChange}\n\t\t\t\t\tsetRoleFilter={setRoleFilter}\n\t\t\t\t/>\n\n\t\t\t\t{champions.length !== 0 ? (\n\t\t\t\t\t<Champions filteredChampions={filteredChampions} />\n\t\t\t\t) : (\n\t\t\t\t\t<p>Loading champions...</p>\n\t\t\t\t)}\n\t\t\t</Box>\n\t\t</>\n\t);\n};\n\nconst mapStateToProps = (state: RootState) => {\n\treturn {\n\t\tchampions: state.gameData.champions,\n\t};\n};\n\nconst connector = connect(mapStateToProps);\n\ntype PropsFromRedux = ConnectedProps<typeof connector>;\n\ntype LandingProps = PropsFromRedux;\n\nexport default connector(Landing);\n","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\App\\App.tsx",["195"],"import React, { useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\nimport { createMuiTheme } from '@material-ui/core/styles';\r\nimport { ThemeProvider } from '@material-ui/styles';\r\n\r\n// Redux\r\nimport { connect } from 'react-redux';\r\nimport actionTypes from '../store/actions';\r\n\r\n// MaterialUI\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\n// Components\r\nimport CreateBuild from '../pages/Create/Build/CreateBuild';\r\nimport Layout from '../components/Layout';\r\nimport Landing from '../pages/Landing/Landing';\r\nimport PageNotFound from '../components/Error/404/PageNotFound';\r\nimport HeroBuilds from '../pages/Builds/Champion/ChampionBuilds';\r\nimport PlayerBuild from '../pages/Builds/Player/PlayerBuild';\r\n// Types\r\nimport {\r\n\tChampionInterface,\r\n\tItemInterface,\r\n\tRankInterface,\r\n\tRoleInterface,\r\n\tRuneInterface,\r\n\tSpellInterface,\r\n} from '../utils/interfaces';\r\n// CSS\r\nimport styles from './app.module.css';\r\nconst theme = createMuiTheme({\r\n\ttypography: {\r\n\t\tfontFamily: ['Helvetica Neue', 'Helvetica', 'Arial', 'Tahoma'].join(','),\r\n\t},\r\n\tpalette: {\r\n\t\tprimary: {\r\n\t\t\tlight: '#FAFAFA',\r\n\t\t\tmain: '#00A3FE',\r\n\t\t\tdark: '#326CAC',\r\n\t\t},\r\n\t\tsecondary: {\r\n\t\t\tlight: '#292E38',\r\n\t\t\tmain: '#242424',\r\n\t\t\tdark: '#171717',\r\n\t\t},\r\n\t},\r\n});\r\ninterface AppProps {\r\n\tsetChampions: (newChampions: Array<ChampionInterface>) => void;\r\n\tsetItems: (newItems: Array<ItemInterface>) => void;\r\n\tsetRanks: (newRanks: Array<RankInterface>) => void;\r\n\tsetRoles: (newRoles: Array<RoleInterface>) => void;\r\n\tsetRunes: (newRunes: Array<RuneInterface>) => void;\r\n\tsetSpells: (newSpells: Array<SpellInterface>) => void;\r\n}\r\n\r\nconst App = (props: AppProps) => {\r\n\tconst {\r\n\t\tsetChampions,\r\n\t\tsetItems,\r\n\t\tsetRanks,\r\n\t\tsetRoles,\r\n\t\tsetRunes,\r\n\t\tsetSpells,\r\n\t} = props;\r\n\r\n\t// Get DATA\r\n\tuseEffect(() => {\r\n\t\tconst getChampions = axios.get(\r\n\t\t\t// 'https://wildriftbuilds.herokuapp.com/api/champion/all'\r\n\t\t\t'/api/champion/all'\r\n\t\t);\r\n\t\tconst getItems = axios.get(\r\n\t\t\t// 'https://wildriftbuilds.herokuapp.com/api/item/all'\r\n\t\t\t'/api/item/all'\r\n\t\t);\r\n\t\tconst getRunes = axios.get(\r\n\t\t\t// 'https://wildriftbuilds.herokuapp.com/api/rune/all'\r\n\t\t\t'/api/rune/all'\r\n\t\t);\r\n\t\tconst getSpells = axios.get(\r\n\t\t\t// 'https://wildriftbuilds.herokuapp.com/api/spell/all'\r\n\t\t\t'/api/spell/all'\r\n\t\t);\r\n\t\tconst getRanks = axios.get(\r\n\t\t\t// 'https://wildriftbuilds.herokuapp.com/api/rank/all'\r\n\t\t\t'/api/rank/all'\r\n\t\t);\r\n\t\tconst getRoles = axios.get('/api/role/all');\r\n\r\n\t\tPromise.all([\r\n\t\t\tgetChampions,\r\n\t\t\tgetItems,\r\n\t\t\tgetRunes,\r\n\t\t\tgetSpells,\r\n\t\t\tgetRanks,\r\n\t\t\tgetRoles,\r\n\t\t])\r\n\t\t\t.then((values) => {\r\n\t\t\t\tconst [\r\n\t\t\t\t\t{ data: championsArray },\r\n\t\t\t\t\t{ data: itemsArray },\r\n\t\t\t\t\t{ data: runesArray },\r\n\t\t\t\t\t{ data: spellsArray },\r\n\t\t\t\t\t{ data: ranksArray },\r\n\t\t\t\t\t{ data: rolesArray },\r\n\t\t\t\t] = values;\r\n\r\n\t\t\t\t// const sortArray = (arrName, interface) => {\r\n\r\n\t\t\t\t// \tswitch(arrName){\r\n\t\t\t\t// \t\tcase 'championsArray':\r\n\t\t\t\t// \t\t\treturn\r\n\t\t\t\t// \t}\r\n\r\n\t\t\t\t// \treturn\r\n\t\t\t\t// }\r\n\r\n\t\t\t\t// Sort Champions Alphabetically\r\n\t\t\t\tchampionsArray.sort(function (\r\n\t\t\t\t\ta: ChampionInterface,\r\n\t\t\t\t\tb: ChampionInterface\r\n\t\t\t\t) {\r\n\t\t\t\t\tif (a.championName < b.championName) {\r\n\t\t\t\t\t\treturn -1;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (a.championName > b.championName) {\r\n\t\t\t\t\t\treturn 1;\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn 0;\r\n\t\t\t\t});\r\n\r\n\t\t\t\t// Sort Items Alphabetically\r\n\t\t\t\titemsArray.sort(function (a: ItemInterface, b: ItemInterface) {\r\n\t\t\t\t\tif (a.itemName < b.itemName) {\r\n\t\t\t\t\t\treturn -1;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (a.itemName > b.itemName) {\r\n\t\t\t\t\t\treturn 1;\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn 0;\r\n\t\t\t\t});\r\n\r\n\t\t\t\t// Sort Runes\r\n\t\t\t\trunesArray.sort(function (a: RuneInterface, b: RuneInterface) {\r\n\t\t\t\t\tif (a.runeName < b.runeName) {\r\n\t\t\t\t\t\treturn -1;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (a.runeName > b.runeName) {\r\n\t\t\t\t\t\treturn 1;\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn 0;\r\n\t\t\t\t});\r\n\r\n\t\t\t\t// Sort Spells\r\n\t\t\t\tspellsArray.sort(function (a: SpellInterface, b: SpellInterface) {\r\n\t\t\t\t\tif (a.spellName < b.spellName) {\r\n\t\t\t\t\t\treturn -1;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (a.spellName > b.spellName) {\r\n\t\t\t\t\t\treturn 1;\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn 0;\r\n\t\t\t\t});\r\n\r\n\t\t\t\tsetItems(itemsArray);\r\n\t\t\t\tsetChampions(championsArray);\r\n\t\t\t\tsetRanks(ranksArray);\r\n\t\t\t\tsetRunes(runesArray);\r\n\t\t\t\tsetSpells(spellsArray);\r\n\t\t\t\tsetRoles(rolesArray);\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tconsole.error('Something went wrong');\r\n\t\t\t\tconsole.error(err);\r\n\t\t\t});\r\n\t}, []);\r\n\r\n\treturn (\r\n\t\t<ThemeProvider theme={theme}>\r\n\t\t\t<div className={`App ${styles.appContainer}`}>\r\n\t\t\t\t<CssBaseline />\r\n\t\t\t\t<Layout>\r\n\t\t\t\t\t<Router>\r\n\t\t\t\t\t\t<Switch>\r\n\t\t\t\t\t\t\t<Route exact path='/'>\r\n\t\t\t\t\t\t\t\t<Landing />\r\n\t\t\t\t\t\t\t</Route>\r\n\t\t\t\t\t\t\t<Route exact path='/build/create'>\r\n\t\t\t\t\t\t\t\t<CreateBuild />\r\n\t\t\t\t\t\t\t</Route>\r\n\t\t\t\t\t\t\t<Route exact path='/builds/champion/:heroName'>\r\n\t\t\t\t\t\t\t\t<HeroBuilds />\r\n\t\t\t\t\t\t\t</Route>\r\n\t\t\t\t\t\t\t<Route exact path='/build/:buildId'>\r\n\t\t\t\t\t\t\t\t<PlayerBuild />\r\n\t\t\t\t\t\t\t</Route>\r\n\r\n\t\t\t\t\t\t\t{/* 404 - Page not found */}\r\n\t\t\t\t\t\t\t<Route component={PageNotFound} />\r\n\t\t\t\t\t\t</Switch>\r\n\t\t\t\t\t</Router>\r\n\t\t\t\t</Layout>\r\n\t\t\t</div>\r\n\t\t</ThemeProvider>\r\n\t);\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: any) => {\r\n\treturn {\r\n\t\t// === SETTER Champions === //\r\n\t\tsetChampions: (champions: Array<ChampionInterface>) =>\r\n\t\t\tdispatch({ type: actionTypes.GAMEDATA_SET_CHAMPIONS, data: champions }),\r\n\t\tsetItems: (items: Array<ItemInterface>) =>\r\n\t\t\tdispatch({ type: actionTypes.GAMEDATA_SET_ITEMS, data: items }),\r\n\t\tsetRanks: (ranks: Array<RankInterface>) =>\r\n\t\t\tdispatch({ type: actionTypes.GAMEDATA_SET_RANKS, data: ranks }),\r\n\t\tsetRoles: (roles: Array<RoleInterface>) =>\r\n\t\t\tdispatch({ type: actionTypes.GAMEDATA_SET_ROLES, data: roles }),\r\n\t\tsetRunes: (runes: Array<RuneInterface>) =>\r\n\t\t\tdispatch({ type: actionTypes.GAMEDATA_SET_RUNES, data: runes }),\r\n\t\tsetSpells: (spells: Array<SpellInterface>) =>\r\n\t\t\tdispatch({ type: actionTypes.GAMEDATA_SET_SPELLS, data: spells }),\r\n\t};\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(App);\r\n","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Landing\\components\\FilterBy\\FilterBy.tsx",["196"],"import React from 'react';\n\n// MaterialUI\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\n// Components\n// CSS\nimport styles from './filterby.module.css';\n// Types\ntype FilterByProps = {\n\tchampionSearch: string;\n\thandleChampionSearchChange(e: React.ChangeEvent<HTMLInputElement>): void;\n\tsetRoleFilter(role: string): void;\n};\n\nconst FilterBy = (props: FilterByProps) => {\n\tconst { championSearch, handleChampionSearchChange, setRoleFilter } = props;\n\n\treturn (\n\t\t<Box className={styles.filterContainer}>\n\t\t\t<Grid container>\n\t\t\t\t<Grid item xs={12} sm={10}>\n\t\t\t\t\t<Box className={styles.rolesListContainer}>\n\t\t\t\t\t\t<ul className={styles.rolesList}>\n\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t<span onClick={() => setRoleFilter('all')}>All</span>\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t<span onClick={() => setRoleFilter('top')}>Top</span>\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t<span onClick={() => setRoleFilter('jungle')}>Jungle</span>\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t<span onClick={() => setRoleFilter('middle')}>Middle</span>\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t<span onClick={() => setRoleFilter('bottom')}>Bottom</span>\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t<span onClick={() => setRoleFilter('support')}>Support</span>\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t</Box>\n\t\t\t\t</Grid>\n\t\t\t\t<Grid item xs={12} sm={2}>\n\t\t\t\t\t<Box className={styles.searchForChampionContainer}>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\tvalue={championSearch}\n\t\t\t\t\t\t\tonChange={handleChampionSearchChange}\n\t\t\t\t\t\t\tplaceholder='Search a Champion'\n\t\t\t\t\t\t\tclassName={styles.searchForChampionInput}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Box>\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t</Box>\n\t);\n};\n\nexport default FilterBy;\n","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Landing\\components\\Champions\\Champions.tsx",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\components\\Error\\404\\PageNotFound.tsx",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\components\\Header\\components\\AppBar.tsx",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\CreateBuild.tsx",["197","198","199"],"import React, { useState } from 'react';\nimport axios from 'axios';\nimport { Redirect } from 'react-router-dom';\nimport { Toaster } from 'react-hot-toast';\nimport {\n\terrorNoUsername,\n\terrorNoItemSelected,\n\terrorBuildSaved,\n\tsuccessBuildSaved,\n\terrorNoBuildTitle,\n} from '../../../utils/alertpopups';\n\n// Redux\nimport { connect, ConnectedProps } from 'react-redux';\nimport actionTypes from '../../../store/actions';\n\n// MaterialUI\nimport { makeStyles } from '@material-ui/core/styles';\nimport Box from '@material-ui/core/Box';\n// Components\nimport Stepper from './components/Stepper/Stepper';\nimport BackdropLoading from '../../../components/Loading/Backdrop';\nimport BuildInformation from './components/BuildInformation/BuildInformation';\nimport BuildSelection from './components/BuildSelection/BuildSelection';\nimport CreateBuildHeader from './components/CreateBuildHeader/CreateBuildHeader';\nimport PlayerInformation from './components/PlayerInformation/PlayerInformation';\n// CSS\nimport styles from './createbuild.module.css';\n// Types\nimport { RootState } from '../../../utils/interfaces';\n\nconst useStyles = makeStyles((theme) => ({\n\tformControl: {\n\t\tmargin: theme.spacing(1),\n\t\tminWidth: 120,\n\t},\n}));\n\nconst CreateBuild = (props: CreateBuildProps) => {\n\tconst classes = useStyles();\n\t// Build PROPS\n\tconst { completeBuild, refreshState } = props;\n\n\tconst [savedBuild, setSavedBuild] = useState({\n\t\tid: '',\n\t});\n\tconst [activeStep, setActiveStep] = useState(0);\n\tconst [openBackdrop, setOpenBackdrop] = useState<boolean>(false);\n\tconst [hasSubmittedBuild, setHasSubmittedBuild] = useState(false);\n\n\tlet componentToDisplay;\n\tif (activeStep === 0) {\n\t\tcomponentToDisplay = <BuildInformation />;\n\t} else if (activeStep === 1) {\n\t\tcomponentToDisplay = <BuildSelection formControl={classes.formControl} />;\n\t} else if (activeStep === 2) {\n\t\tcomponentToDisplay = (\n\t\t\t<PlayerInformation formControl={classes.formControl} />\n\t\t);\n\t}\n\n\tconst submitBuild = async () => {\n\t\tif (\n\t\t\tcompleteBuild.itemsConfirmed.length !== 0 &&\n\t\t\tcompleteBuild.username &&\n\t\t\tcompleteBuild.buildTitle\n\t\t) {\n\t\t\tsetOpenBackdrop(true);\n\t\t\tconst saveToDatabase = await axios\n\t\t\t\t.post(\n\t\t\t\t\t// 'https://wildriftbuilds.herokuapp.com/api/build/save',\n\t\t\t\t\t'/api/build/save',\n\t\t\t\t\t{\n\t\t\t\t\t\t...completeBuild,\n\t\t\t\t\t\tdateSubmitted: new Date(),\n\t\t\t\t\t}\n\t\t\t\t)\n\t\t\t\t.then((res) => {\n\t\t\t\t\t// successBuildSaved();\n\t\t\t\t\tsetSavedBuild(res.data);\n\t\t\t\t\tsetHasSubmittedBuild(true);\n\t\t\t\t\trefreshState();\n\t\t\t\t\tconsole.log('Successfully saved build');\n\t\t\t\t})\n\t\t\t\t.catch((err) => {\n\t\t\t\t\tif (\n\t\t\t\t\t\terr.response.status === 429 &&\n\t\t\t\t\t\terr.response.data ===\n\t\t\t\t\t\t\t\"You're creating too many builds. Please try again after 30 minutes.\"\n\t\t\t\t\t) {\n\t\t\t\t\t\terrorBuildSaved(err.response.data);\n\t\t\t\t\t} else {\n\t\t\t\t\t\terrorBuildSaved('Something went wrong. Failed to save build.');\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t} else {\n\t\t\tif (!completeBuild.buildTitle) {\n\t\t\t\terrorNoBuildTitle();\n\t\t\t} else if (completeBuild.itemsConfirmed.length === 0) {\n\t\t\t\terrorNoItemSelected();\n\t\t\t} else if (!completeBuild.username) {\n\t\t\t\terrorNoUsername();\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\t};\n\n\tif (hasSubmittedBuild) {\n\t\tconsole.log(savedBuild);\n\t\treturn <Redirect to={`/build/${savedBuild.id}`} />;\n\t}\n\n\treturn (\n\t\t<Box>\n\t\t\t<BackdropLoading openBackdrop={openBackdrop} />\n\t\t\t<Toaster />\n\t\t\t<CreateBuildHeader />\n\n\t\t\t<Stepper\n\t\t\t\tactiveStep={activeStep}\n\t\t\t\tcomponentToDisplay={componentToDisplay}\n\t\t\t\tsetActiveStep={setActiveStep}\n\t\t\t\tsubmitBuild={submitBuild}\n\t\t\t/>\n\t\t</Box>\n\t);\n};\n\nconst mapStateToProps = (state: RootState) => {\n\treturn {\n\t\tcompleteBuild: state.build,\n\t};\n};\n\nconst mapDispatchToProps = (dispatch: any) => {\n\treturn {\n\t\trefreshState: () => dispatch({ type: actionTypes.BUILD_REFRESH }),\n\t};\n};\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\n\ntype PropsFromRedux = ConnectedProps<typeof connector>;\n\ntype CreateBuildProps = PropsFromRedux;\n\nexport default connector(CreateBuild);\n","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\components\\Stepper\\Stepper.tsx",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\components\\BuildInformation\\BuildInformation.tsx",["200"],"import React from 'react';\n\n// Redux\nimport { connect, ConnectedProps } from 'react-redux';\nimport actionTypes from '../../../../../store/actions';\n\n// MaterialUI\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\n// Components\n// CSS\nimport styles from './createbuild.module.css';\n// Types\nimport { RootState } from '../../../../../utils/interfaces';\n\nconst BuildInformation = (props: BuildInformationProps) => {\n\t// Build PROPS\n\tconst { buildTitle, buildRole, setBuildTitle, setBuildRole } = props;\n\n\tconst roles = ['Top', 'Jungle', 'Middle', 'Bottom', 'Support'];\n\n\t// =============== Build Title =============== //\n\tconst handleBuildTitleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n\t\tconst { value } = e.target;\n\n\t\tsetBuildTitle(value);\n\t};\n\n\t// =============== Build Role =============== //\n\tconst handleBuildRoleChange = (e: React.ChangeEvent<HTMLSelectElement>) => {\n\t\tconst { value } = e.target;\n\n\t\tsetBuildRole(value as string);\n\t};\n\n\treturn (\n\t\t<Grid container spacing={3} style={{ color: '#EBEBEB' }}>\n\t\t\t<Grid item xs={12} sm={6}>\n\t\t\t\t<Box>\n\t\t\t\t\t<p>1. Build Title</p>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\tvalue={buildTitle}\n\t\t\t\t\t\tplaceholder='Build title'\n\t\t\t\t\t\tstyle={{ width: '100%' }}\n\t\t\t\t\t\tonChange={(e) => handleBuildTitleChange(e)}\n\t\t\t\t\t/>\n\t\t\t\t</Box>\n\t\t\t</Grid>\n\t\t\t<Grid item xs={12} sm={6}>\n\t\t\t\t<Box>\n\t\t\t\t\t<p>2. Role</p>\n\t\t\t\t\t{\n\t\t\t\t\t\t<select value={buildRole} onChange={handleBuildRoleChange}>\n\t\t\t\t\t\t\t{roles.map((role, index) => {\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<option key={index} value={role}>\n\t\t\t\t\t\t\t\t\t\t{role}\n\t\t\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t</select>\n\t\t\t\t\t}\n\t\t\t\t</Box>\n\t\t\t</Grid>\n\t\t</Grid>\n\t);\n};\n\n// https://redux.js.org/recipes/usage-with-typescript\nconst mapStateToProps = (state: RootState) => {\n\treturn {\n\t\tbuildTitle: state.build.buildTitle,\n\t\tbuildRole: state.build.buildRole,\n\t};\n};\n\nconst mapDispatchToProps = (dispatch: any) => {\n\treturn {\n\t\tsetBuildTitle: (newBuildTitle: string) =>\n\t\t\tdispatch({ type: actionTypes.BUILD_SET_BUILDTITLE, data: newBuildTitle }),\n\t\tsetBuildRole: (newBuildRole: string) =>\n\t\t\tdispatch({ type: actionTypes.BUILD_SET_BUILDROLE, data: newBuildRole }),\n\t};\n};\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\n\ntype PropsFromRedux = ConnectedProps<typeof connector>;\n\ntype BuildInformationProps = PropsFromRedux;\n\nexport default connector(BuildInformation);\n","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\components\\BuildSelection\\BuildSelection.tsx",["201"],"import React from 'react';\n\n// MaterialUI\nimport Grid from '@material-ui/core/Grid';\n// Components\nimport ChampionSelect from './components/ChampionSelect/ChampionSelect';\nimport ItemsSelect from './components/ItemsSelect/ItemsSelect';\nimport RunesSelect from './components/RunesSelect/RunesSelect';\nimport SpellsSelect from './components/SpellsSelect/SpellsSelect';\n// CSS\nimport styles from './buildselection.module.css';\n// Types\ntype BuildSelectionProps = {\n\tformControl: string;\n};\n\nconst BuildSelection = (props: BuildSelectionProps) => {\n\tconst { formControl } = props;\n\n\treturn (\n\t\t<Grid container spacing={3} style={{ color: '#EBEBEB' }}>\n\t\t\t<Grid item xs={12}>\n\t\t\t\t<ChampionSelect formControl={formControl} />\n\t\t\t</Grid>\n\t\t\t<Grid item xs={12}>\n\t\t\t\t<ItemsSelect formControl={formControl} />\n\t\t\t</Grid>\n\t\t\t<Grid item xs={12}>\n\t\t\t\t<RunesSelect formControl={formControl} />\n\t\t\t</Grid>\n\t\t\t<Grid item xs={12}>\n\t\t\t\t<SpellsSelect formControl={formControl} />\n\t\t\t</Grid>\n\t\t</Grid>\n\t);\n};\n\nexport default BuildSelection;\n","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\components\\PlayerInformation\\PlayerInformation.tsx",["202"],"import React from 'react';\n// @ts-ignore - No types for this module\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\n\n// Redux\nimport { connect, ConnectedProps } from 'react-redux';\nimport actionTypes from '../../../../../store/actions';\n\n// MaterialUI\nimport Box from '@material-ui/core/Box';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport Grid from '@material-ui/core/Grid';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport NativeSelect from '@material-ui/core/NativeSelect';\n// Components\n// Types\nimport { RankInterface, RootState } from '../../../../../utils/interfaces';\n// CSS\nimport styles from './playerinformation.module.css';\n\nconst PlayerInformation = (props: PlayerInformationProps) => {\n\tconst { formControl } = props;\n\t// Game Data PROPS\n\tconst { ranks } = props;\n\t// Build PROPS\n\tconst { rankSelected, setRankSelected, username, setUsername } = props;\n\n\t// =============== Username =============== //\n\tconst handleUsernameChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n\t\tconst { value } = e.target;\n\n\t\tsetUsername(value);\n\t};\n\n\t// =============== Rank =============== //\n\tconst handleRankSelectChange = (e: React.ChangeEvent<HTMLSelectElement>) => {\n\t\tconst getRank = ranks.find(\n\t\t\t(rank: RankInterface) => rank.id === e.target.value\n\t\t);\n\n\t\tif (!getRank) {\n\t\t\treturn;\n\t\t} else {\n\t\t\tsetRankSelected(getRank);\n\t\t}\n\t};\n\n\treturn (\n\t\t<Grid container spacing={3} style={{ color: '#EBEBEB' }}>\n\t\t\t<Grid item xs={12} sm={6}>\n\t\t\t\t<Box>\n\t\t\t\t\t<p>7. Username</p>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\tvalue={username}\n\t\t\t\t\t\tplaceholder='Username'\n\t\t\t\t\t\tonChange={(e) => handleUsernameChange(e)}\n\t\t\t\t\t\tstyle={{ width: '100%' }}\n\t\t\t\t\t/>\n\t\t\t\t</Box>\n\t\t\t</Grid>\n\t\t\t<Grid item xs={12} sm={6}>\n\t\t\t\t<Box>\n\t\t\t\t\t<p>8. Rank</p>\n\n\t\t\t\t\t<Box>\n\t\t\t\t\t\t<LazyLoadImage\n\t\t\t\t\t\t\tsrc={`/images/wildriftranks/${rankSelected.id}.png`}\n\t\t\t\t\t\t\tstyle={{ width: '100px' }}\n\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t<FormControl className={formControl}>\n\t\t\t\t\t\t\t\t<InputLabel shrink htmlFor='rank-select'>\n\t\t\t\t\t\t\t\t\tRank\n\t\t\t\t\t\t\t\t</InputLabel>\n\t\t\t\t\t\t\t\t<NativeSelect\n\t\t\t\t\t\t\t\t\tvalue={rankSelected.id}\n\t\t\t\t\t\t\t\t\tonChange={handleRankSelectChange}\n\t\t\t\t\t\t\t\t\tinputProps={{\n\t\t\t\t\t\t\t\t\t\tname: 'rank',\n\t\t\t\t\t\t\t\t\t\tid: 'rank-select',\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{ranks.map(({ id, rankName, url }: RankInterface, index) => {\n\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t<option key={index} value={id}>\n\t\t\t\t\t\t\t\t\t\t\t\t{rankName}\n\t\t\t\t\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t</NativeSelect>\n\t\t\t\t\t\t\t\t<FormHelperText>Select your rank</FormHelperText>\n\t\t\t\t\t\t\t</FormControl>\n\t\t\t\t\t\t}\n\t\t\t\t\t</Box>\n\t\t\t\t</Box>\n\t\t\t</Grid>\n\t\t</Grid>\n\t);\n};\n\nconst mapStateToProps = (state: RootState) => {\n\treturn {\n\t\trankSelected: state.build.rank,\n\t\tranks: state.gameData.ranks,\n\t\tusername: state.build.username,\n\t};\n};\n\nconst mapDispatchToProps = (dispatch: any) => {\n\treturn {\n\t\tsetRankSelected: (newRank: RankInterface) =>\n\t\t\tdispatch({ type: actionTypes.BUILD_SET_RANKSELECTED, data: newRank }),\n\t\tsetUsername: (newUsername: string) =>\n\t\t\tdispatch({ type: actionTypes.BUILD_SET_USERNAME, data: newUsername }),\n\t};\n};\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\n\ntype PropsFromRedux = ConnectedProps<typeof connector>;\n\ntype PlayerInformationProps = PropsFromRedux & {\n\tformControl: string;\n};\n\nexport default connector(PlayerInformation);\n","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\components\\CreateBuildHeader\\CreateBuildHeader.tsx",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\components\\BuildSelection\\components\\ChampionSelect\\ChampionSelect.tsx",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\components\\BuildSelection\\components\\ItemsSelect\\ItemsSelect.tsx",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\components\\BuildSelection\\components\\ItemsSelected\\ItemsSelected.tsx",["203"],"import React, { useEffect } from 'react';\n// @ts-ignore - No types for this module\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\n\nimport {\n\terrorItemDuplicate,\n\terrorPrimaryItemsLimit,\n} from '../../../../../../../utils/alertpopups';\n\n// Redux\nimport { connect, ConnectedProps } from 'react-redux';\nimport actionTypes from '../../../../../../../store/actions';\n\n// MaterialUI\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport Grow from '@material-ui/core/Grow';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\n// Components\n// CSS\nimport styles from './itemsselected.module.css';\n// Types\nimport {\n\tItemInterface,\n\tRootState,\n} from '../../../../../../../utils/interfaces';\n\nconst ItemsSelected = (props: ItemsSelectedProps) => {\n\tconst { handleDeleteItemClick } = props;\n\t// Build PROPS\n\tconst { itemsConfirmed, setItemsConfirmed } = props;\n\n\t// Check for duplicate items selected\n\t// Check for primary items limit\n\tuseEffect(() => {\n\t\tconst primaryItems = itemsConfirmed.filter(\n\t\t\t(item) => item.type === 'primary'\n\t\t);\n\n\t\tvar itemArray = itemsConfirmed.map((item) => {\n\t\t\treturn item.id;\n\t\t});\n\t\tvar isDuplicate = itemArray.some((item, index) => {\n\t\t\treturn itemArray.indexOf(item) !== index;\n\t\t});\n\n\t\t// Remove duplicates from itemsConfirmed Array\n\t\tconst filteredItemsConfirmed = itemsConfirmed.filter(\n\t\t\t(item, index, arr) => arr.findIndex((t) => t.id === item.id) === index\n\t\t);\n\n\t\tif (isDuplicate) {\n\t\t\tsetItemsConfirmed(filteredItemsConfirmed);\n\t\t\terrorItemDuplicate();\n\t\t} else if (primaryItems.length > 6) {\n\t\t\terrorPrimaryItemsLimit();\n\n\t\t\tconst itemsConfirmedCopy = [...itemsConfirmed];\n\n\t\t\titemsConfirmedCopy.pop();\n\n\t\t\tsetItemsConfirmed(itemsConfirmedCopy);\n\t\t}\n\t}, [itemsConfirmed]);\n\n\treturn (\n\t\t<Box>\n\t\t\t<Typography gutterBottom>Items List</Typography>\n\t\t\t<i>Click on an item to delete it from your list</i>\n\n\t\t\t<Box className={styles.itemsSelectedContainer}>\n\t\t\t\t{itemsConfirmed.length !== 0 ? (\n\t\t\t\t\t<>\n\t\t\t\t\t\t{/* TYPE: MAIN */}\n\t\t\t\t\t\t<p>Primary Items</p>\n\t\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t\t{itemsConfirmed\n\t\t\t\t\t\t\t\t.filter((item: ItemInterface) => item.type !== 'optional')\n\t\t\t\t\t\t\t\t.map((currentItem, index) => {\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t<Grow\n\t\t\t\t\t\t\t\t\t\t\tkey={index}\n\t\t\t\t\t\t\t\t\t\t\tin={true}\n\t\t\t\t\t\t\t\t\t\t\tstyle={{ transformOrigin: '0 0 0' }}\n\t\t\t\t\t\t\t\t\t\t\t{...(true ? { timeout: 200 } : {})}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t<Tooltip title='Delete'>\n\t\t\t\t\t\t\t\t\t\t\t\t<Box className={styles.itemContainer}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Box className={styles.itemImageContainer}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<LazyLoadImage\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttitle={currentItem.itemName}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={styles.itemHover}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsrc={`/images/wildriftitems/${currentItem.id}.png`}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() =>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleDeleteItemClick(currentItem.id)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t\t\t\t\t</Tooltip>\n\t\t\t\t\t\t\t\t\t\t</Grow>\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t</Grid>\n\n\t\t\t\t\t\t{/* TYPE: OPTIONAL */}\n\t\t\t\t\t\t<p>Optional Items</p>\n\t\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t\t{itemsConfirmed\n\t\t\t\t\t\t\t\t.filter((item: ItemInterface) => item.type !== 'primary')\n\t\t\t\t\t\t\t\t.map((currentItem: ItemInterface, index) => {\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t<Grow\n\t\t\t\t\t\t\t\t\t\t\tkey={index}\n\t\t\t\t\t\t\t\t\t\t\tin={true}\n\t\t\t\t\t\t\t\t\t\t\tstyle={{ transformOrigin: '0 0 0' }}\n\t\t\t\t\t\t\t\t\t\t\t{...(true ? { timeout: 200 } : {})}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t<Tooltip title='Delete'>\n\t\t\t\t\t\t\t\t\t\t\t\t<Box className={styles.itemContainer}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Box className={styles.itemImageContainer}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<LazyLoadImage\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttitle={currentItem.itemName}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={styles.itemHover}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsrc={`/images/wildriftitems/${currentItem.id}.png`}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() =>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleDeleteItemClick(currentItem.id)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t\t\t\t\t</Tooltip>\n\t\t\t\t\t\t\t\t\t\t</Grow>\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</>\n\t\t\t\t) : (\n\t\t\t\t\t<p>You haven't added any items to your build yet.</p>\n\t\t\t\t)}\n\t\t\t</Box>\n\t\t</Box>\n\t);\n};\n\nconst mapStateToProps = (state: RootState) => {\n\treturn {\n\t\titemsConfirmed: state.build.itemsConfirmed,\n\t};\n};\n\nconst mapDispatchToProps = (dispatch: any) => {\n\treturn {\n\t\tsetItemsConfirmed: (newItemsConfirmed: Array<ItemInterface>) =>\n\t\t\tdispatch({\n\t\t\t\ttype: actionTypes.BUILD_SET_ITEMSCONFIRMED,\n\t\t\t\tdata: newItemsConfirmed,\n\t\t\t}),\n\t};\n};\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\n\ntype PropsFromRedux = ConnectedProps<typeof connector>;\n\ntype ItemsSelectedProps = PropsFromRedux & {\n\thandleDeleteItemClick: (itemId: string) => void;\n};\n\nexport default connector(ItemsSelected);\n","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\components\\BuildSelection\\components\\RunesSelect\\RunesSelect.tsx",["204"],"import React from 'react';\n\n// Redux\nimport { connect, ConnectedProps } from 'react-redux';\nimport actionTypes from '../../../../../../../store/actions';\n\n// MaterialUI\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\n// Components\nimport Domination from './components/Domination';\nimport Inspiration from './components/Inspiration';\nimport Keystone from './components/Keystone';\nimport Resolve from './components/Resolve';\n// CSS\nimport styles from './runesselect.module.css';\n// Types\nimport {\n\tRuneInterface,\n\tRootState,\n} from '../../../../../../../utils/interfaces';\n\nconst RunesSelect = (props: RunesSelectProps) => {\n\tconst { formControl } = props;\n\t// Game Data PROPS\n\tconst { runes } = props;\n\t// Build PROPS\n\tconst { runesSelected, setRunesSelected } = props;\n\n\t// Everytime user changes a rune, this function gets executed\n\t// - sets new rune\n\t// - sets reason property\n\tconst handleRuneSelectChange = (\n\t\te: React.ChangeEvent<HTMLSelectElement>,\n\t\truneType: string,\n\t\trunePath?: string\n\t) => {\n\t\tconst getRune = runes.find(\n\t\t\t(rune: RuneInterface) => rune.id === e.target.value\n\t\t);\n\n\t\tif (getRune) {\n\t\t\t/*\n\n\t\t\t\t\t- \"{...getRune}\" spreads the previous state\n\t\t\t\t\t- \"reason: prev.keystone.reason\" gets the 'reason' property of the previous rune and sets it to the new rune\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\t...prev,\n\t\t\t\t\t\tkeystone: { ...getRune, reason: prev.keystone.reason || '' },\n\t\t\t\t\t};\n\n\t\t\t*/\n\n\t\t\tconst runesSelectStateHandler = (runeName: string) => {\n\t\t\t\tconst prevRunesSelected: { [key: string]: RuneInterface } = {\n\t\t\t\t\t...runesSelected,\n\t\t\t\t};\n\n\t\t\t\tconst modifiedRunesSelected = {\n\t\t\t\t\t...prevRunesSelected,\n\t\t\t\t\t[runeName]: {\n\t\t\t\t\t\t...getRune,\n\t\t\t\t\t\treason: prevRunesSelected[runeName].reason || '',\n\t\t\t\t\t},\n\t\t\t\t};\n\n\t\t\t\tsetRunesSelected(runeName, modifiedRunesSelected);\n\t\t\t};\n\n\t\t\tif (runeType === 'keystone') {\n\t\t\t\trunesSelectStateHandler('keystone');\n\t\t\t}\n\t\t\tif (runeType === 'secondary') {\n\t\t\t\tswitch (runePath) {\n\t\t\t\t\tcase 'domination':\n\t\t\t\t\t\trunesSelectStateHandler('domination');\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'resolve':\n\t\t\t\t\t\trunesSelectStateHandler('resolve');\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'inspiration':\n\t\t\t\t\t\trunesSelectStateHandler('inspiration');\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\tconst handleRuneExplanationChange = (\n\t\te: React.ChangeEvent<HTMLTextAreaElement>,\n\t\truneName: string\n\t) => {\n\t\tconst prevRunesSelected: { [key: string]: RuneInterface } = {\n\t\t\t...runesSelected,\n\t\t};\n\n\t\tlet getRune = prevRunesSelected[runeName];\n\n\t\tconst modifiedRunesSelected = {\n\t\t\t...prevRunesSelected,\n\t\t\t[runeName]: {\n\t\t\t\t...getRune,\n\t\t\t\treason: e.target.value,\n\t\t\t},\n\t\t};\n\n\t\tsetRunesSelected(runeName, modifiedRunesSelected);\n\t};\n\n\treturn (\n\t\t<Box>\n\t\t\t<p>5. Runes</p>\n\n\t\t\t<Grid container item xs={12}>\n\t\t\t\t{/* KEYSTONE Rune */}\n\t\t\t\t<Keystone\n\t\t\t\t\tformControl={formControl}\n\t\t\t\t\thandleRuneSelectChange={handleRuneSelectChange}\n\t\t\t\t\thandleRuneExplanationChange={handleRuneExplanationChange}\n\t\t\t\t/>\n\n\t\t\t\t{/* Secondary: Domination */}\n\t\t\t\t<Domination\n\t\t\t\t\tformControl={formControl}\n\t\t\t\t\thandleRuneSelectChange={handleRuneSelectChange}\n\t\t\t\t\thandleRuneExplanationChange={handleRuneExplanationChange}\n\t\t\t\t/>\n\n\t\t\t\t{/* Secondary: Resolve */}\n\t\t\t\t<Resolve\n\t\t\t\t\tformControl={formControl}\n\t\t\t\t\thandleRuneSelectChange={handleRuneSelectChange}\n\t\t\t\t\thandleRuneExplanationChange={handleRuneExplanationChange}\n\t\t\t\t/>\n\n\t\t\t\t{/* Secondary: Inspiration */}\n\t\t\t\t<Inspiration\n\t\t\t\t\tformControl={formControl}\n\t\t\t\t\thandleRuneSelectChange={handleRuneSelectChange}\n\t\t\t\t\thandleRuneExplanationChange={handleRuneExplanationChange}\n\t\t\t\t/>\n\t\t\t</Grid>\n\t\t</Box>\n\t);\n};\n\nconst mapStateToProps = (state: RootState) => {\n\treturn {\n\t\trunesSelected: state.build.runes,\n\t\trunes: state.gameData.runes,\n\t};\n};\n\nconst mapDispatchToprops = (dispatch: any) => {\n\treturn {\n\t\tsetRunesSelected: (\n\t\t\truneName: string,\n\t\t\tdata: { [key: string]: RuneInterface }\n\t\t) =>\n\t\t\tdispatch({ type: actionTypes.BUILD_SET_RUNESSELECTED, runeName, data }),\n\t};\n};\n\nconst connector = connect(mapStateToProps, mapDispatchToprops);\n\ntype PropsFromRedux = ConnectedProps<typeof connector>;\n\ntype RunesSelectProps = PropsFromRedux & {\n\tformControl: string;\n};\n\nexport default connector(RunesSelect);\n","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\components\\BuildSelection\\components\\RunesSelect\\components\\Keystone.tsx",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\components\\BuildSelection\\components\\RunesSelect\\components\\Domination.tsx",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\components\\BuildSelection\\components\\RunesSelect\\components\\Resolve.tsx",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\components\\BuildSelection\\components\\RunesSelect\\components\\Inspiration.tsx",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\components\\BuildSelection\\components\\SpellsSelect\\SpellsSelect.tsx",["205"],"import React from 'react';\n\n// Redux\nimport { connect, ConnectedProps } from 'react-redux';\nimport actionTypes from '../../../../../../../store/actions';\n\n// MaterialUI\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\n// Components\nimport Spell from './components/Spell';\n// CSS\nimport styles from './spellsselect.module.css';\n// Types\nimport {\n\tSpellInterface,\n\tRootState,\n} from '../../../../../../../utils/interfaces';\n\nconst SpellsSelect = (props: SpellsSelectProps) => {\n\tconst { formControl } = props;\n\t// Game Data PROPS\n\tconst { spells } = props;\n\t// Build PROPS\n\tconst { spellsSelected, setSpellsSelected } = props;\n\n\tconst handleSpellSelectChange = (\n\t\te: React.ChangeEvent<HTMLSelectElement>,\n\t\tspellNumber: number\n\t) => {\n\t\tconst { value: spellId } = e.target;\n\n\t\tconst getSpell = spells.find(\n\t\t\t(spell: SpellInterface) => spell.id === spellId\n\t\t);\n\n\t\tif (getSpell) {\n\t\t\tswitch (spellNumber) {\n\t\t\t\tcase 1:\n\t\t\t\t\tsetSpellsSelected('spellOne', getSpell);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 2:\n\t\t\t\t\tsetSpellsSelected('spellTwo', getSpell);\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t};\n\n\treturn (\n\t\t<Box>\n\t\t\t<p>6. Summoner Spells</p>\n\n\t\t\t<Grid container item xs={12}>\n\t\t\t\t{/* Spell One */}\n\t\t\t\t<Spell\n\t\t\t\t\tformControl={formControl}\n\t\t\t\t\tspells={spells}\n\t\t\t\t\tspellNumber={1}\n\t\t\t\t\tspellsSelected={spellsSelected}\n\t\t\t\t\thandleSpellSelectChange={handleSpellSelectChange}\n\t\t\t\t/>\n\n\t\t\t\t{/* Spell Two */}\n\t\t\t\t<Spell\n\t\t\t\t\tformControl={formControl}\n\t\t\t\t\tspells={spells}\n\t\t\t\t\tspellNumber={2}\n\t\t\t\t\tspellsSelected={spellsSelected}\n\t\t\t\t\thandleSpellSelectChange={handleSpellSelectChange}\n\t\t\t\t/>\n\t\t\t</Grid>\n\t\t</Box>\n\t);\n};\n\nconst mapStateToProps = (state: RootState) => {\n\treturn {\n\t\tspellsSelected: state.build.spells,\n\t\tspells: state.gameData.spells,\n\t};\n};\n\nconst mapDispatchToprops = (dispatch: any) => {\n\treturn {\n\t\tsetSpellsSelected: (spellKey: string, data: SpellInterface) =>\n\t\t\tdispatch({ type: actionTypes.BUILD_SET_SPELLSSELECTED, spellKey, data }),\n\t};\n};\n\nconst connector = connect(mapStateToProps, mapDispatchToprops);\n\ntype PropsFromRedux = ConnectedProps<typeof connector>;\n\ntype SpellsSelectProps = PropsFromRedux & {\n\tformControl: string;\n};\n\nexport default connector(SpellsSelect);\n","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\components\\BuildSelection\\components\\SpellsSelect\\components\\Spell.tsx",["206"],"import React from 'react';\n// @ts-ignore - No types for this module\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\n\n// MaterialUI\nimport FormControl from '@material-ui/core/FormControl';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport Grid from '@material-ui/core/Grid';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport NativeSelect from '@material-ui/core/NativeSelect';\n// Components\n// CSS\nimport styles from './spell.module.css';\n// Types\nimport { SpellInterface } from '../../../../../../../../utils/interfaces';\ntype SpellProps = {\n\tformControl: string;\n\tspells: Array<SpellInterface>;\n\tspellNumber: number;\n\tspellsSelected: {\n\t\tspellOne: SpellInterface;\n\t\tspellTwo: SpellInterface;\n\t};\n\thandleSpellSelectChange(\n\t\te: React.ChangeEvent<HTMLSelectElement>,\n\t\tspellNumber: number\n\t): void;\n};\n\nconst Spell = (props: SpellProps) => {\n\tconst {\n\t\tformControl,\n\t\tspells,\n\t\tspellNumber,\n\t\tspellsSelected,\n\t\thandleSpellSelectChange,\n\t} = props;\n\tconst { spellOne, spellTwo } = spellsSelected;\n\n\treturn (\n\t\t<Grid item xs={12} sm={3} style={{ marginTop: '10px' }}>\n\t\t\t<LazyLoadImage\n\t\t\t\tsrc={`/images/wildriftspells/${\n\t\t\t\t\tspellNumber === 1 ? spellOne.id : spellTwo.id\n\t\t\t\t}.jpg`}\n\t\t\t\tstyle={{ width: '90px' }}\n\t\t\t/>\n\n\t\t\t{\n\t\t\t\t<FormControl className={formControl}>\n\t\t\t\t\t<InputLabel shrink htmlFor='spell-select'>\n\t\t\t\t\t\t{spellNumber === 1 ? 'Spell One' : 'Spell Two'}\n\t\t\t\t\t</InputLabel>\n\t\t\t\t\t<NativeSelect\n\t\t\t\t\t\tdefaultValue={`${spellNumber === 1 ? spellOne.id : spellTwo.id}`}\n\t\t\t\t\t\tonChange={(e) => handleSpellSelectChange(e, spellNumber)}\n\t\t\t\t\t\tinputProps={{\n\t\t\t\t\t\t\tname: 'spell',\n\t\t\t\t\t\t\tid: 'spell-select',\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t{spells.map(({ id, spellName, url }: SpellInterface, index) => {\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<option key={index} value={id}>\n\t\t\t\t\t\t\t\t\t{spellName}\n\t\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t})}\n\t\t\t\t\t</NativeSelect>\n\t\t\t\t\t<FormHelperText>Select a Spell</FormHelperText>\n\t\t\t\t</FormControl>\n\t\t\t}\n\t\t</Grid>\n\t);\n};\n\nexport default Spell;\n","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\components\\Loading\\Backdrop.tsx",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\store\\actions.js",[],["207","208"],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\store\\reducers\\gameData.js",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\store\\reducers\\build.js",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\utils\\interfaces.ts",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\utils\\alertpopups.js",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Builds\\Champion\\ChampionBuilds.tsx",["209"],"import React from 'react';\n\n// MaterialUI\nimport Box from '@material-ui/core/Box';\n// Components\n// CSS\nimport styles from './championbuilds.module.css';\n// Types\n\nconst HeroBuilds = () => {\n\treturn (\n\t\t<Box>\n\t\t\t<Box\n\t\t\t\tstyle={{\n\t\t\t\t\tbackgroundColor: '#171717',\n\t\t\t\t\tcolor: '#EBEBEB',\n\t\t\t\t\tpadding: '20px',\n\t\t\t\t\tmargin: '50px 0',\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t163 Lee Sin Builds\n\t\t\t</Box>\n\t\t\t<Box>Champion Image Lee Sin The Blind Monk</Box>\n\t\t</Box>\n\t);\n};\n\nexport default HeroBuilds;\n","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Builds\\Player\\PlayerBuild.tsx",["210","211","212","213"],"import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { withRouter } from 'react-router-dom';\n\n// MaterialUI\nimport { makeStyles } from '@material-ui/core/styles';\nimport Avatar from '@material-ui/core/Avatar';\nimport Box from '@material-ui/core/Box';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\n// Components\nimport BuildItem from './components/BuildItem/BuildItem';\nimport RuneItem from './components/RuneItem/RuneItem';\nimport SpellItem from './components/Spellitem/SpellItem';\nimport PlayerBuildHeader from './components/PlayerBuildHeader/PlayerBuildHeader';\nimport PlayerBuildFooter from './components/PlayerBuildFooter/PlayerBuildFooter';\nimport SectionDivider from './components/SectionDivider/SectionDivider';\n// Types\nimport { BuildInterface, ItemInterface } from '../../../utils/interfaces';\n// CSS\nimport styles from './playerbuild.module.css';\nconst useStyles = makeStyles((theme) => ({\n\troot: {\n\t\tflexGrow: 1,\n\t\toverflow: 'hidden',\n\t},\n\tlarge: {\n\t\twidth: theme.spacing(7),\n\t\theight: theme.spacing(7),\n\t},\n}));\n\n// === CHANGE PROPS TYPE === //\nconst PlayerBuild = (props: any) => {\n\tconst classes = useStyles();\n\n\tconst { match } = props;\n\tconst [build, setBuild] = useState<BuildInterface>();\n\n\tuseEffect(() => {\n\t\taxios\n\t\t\t.get(\n\t\t\t\t// `https://wildriftbuilds.herokuapp.com/api/build/${match.params.buildId}`\n\t\t\t\t`/api/build/${match.params.buildId}`\n\t\t\t)\n\t\t\t.then((res) => {\n\t\t\t\tconst { data } = res;\n\t\t\t\tsetBuild(data);\n\t\t\t});\n\t}, []);\n\n\treturn (\n\t\t<div className={classes.root}>\n\t\t\t{build ? (\n\t\t\t\t<Box\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\tbackgroundColor: '#303841',\n\t\t\t\t\t\tpadding: '30px',\n\t\t\t\t\t\tcolor: '#ffffff',\n\t\t\t\t\t\tmargin: '50px 0',\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<PlayerBuildHeader build={build} />\n\n\t\t\t\t\t{/* PRIMARY ITEMS */}\n\t\t\t\t\t<SectionDivider title='Primary Items' />\n\t\t\t\t\t<Grid container spacing={3}>\n\t\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t\t{build.itemsConfirmed\n\t\t\t\t\t\t\t\t.filter((item: ItemInterface) => item.type !== 'optional')\n\t\t\t\t\t\t\t\t.map((item: ItemInterface, index) => {\n\t\t\t\t\t\t\t\t\treturn <BuildItem key={index} item={item} />;\n\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</Grid>\n\n\t\t\t\t\t{/* OPTIONAL ITEMS */}\n\t\t\t\t\t<SectionDivider title='Optional Items' />\n\t\t\t\t\t<Grid container spacing={3}>\n\t\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t\t{build.itemsConfirmed\n\t\t\t\t\t\t\t\t.filter((item: ItemInterface) => item.type !== 'primary')\n\t\t\t\t\t\t\t\t.map((item: ItemInterface, index) => {\n\t\t\t\t\t\t\t\t\treturn <BuildItem key={index} item={item} />;\n\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</Grid>\n\n\t\t\t\t\t{/* RUNES */}\n\t\t\t\t\t<SectionDivider title='Runes' />\n\t\t\t\t\t<Grid container spacing={3}>\n\t\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t\t{/* KEYSTONE RUNE */}\n\t\t\t\t\t\t\t<RuneItem\n\t\t\t\t\t\t\t\truneId={build.runes.keystone.id}\n\t\t\t\t\t\t\t\truneName={build.runes.keystone.runeName}\n\t\t\t\t\t\t\t\treason={\n\t\t\t\t\t\t\t\t\tbuild.runes.keystone.reason ? build.runes.keystone.reason : ''\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t{/* DOMINATION RUNE */}\n\t\t\t\t\t\t\t<RuneItem\n\t\t\t\t\t\t\t\truneId={build.runes.domination.id}\n\t\t\t\t\t\t\t\truneName={build.runes.domination.runeName}\n\t\t\t\t\t\t\t\treason={\n\t\t\t\t\t\t\t\t\tbuild.runes.domination.reason\n\t\t\t\t\t\t\t\t\t\t? build.runes.domination.reason\n\t\t\t\t\t\t\t\t\t\t: ''\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t{/* RESOLVE RUNE */}\n\t\t\t\t\t\t\t<RuneItem\n\t\t\t\t\t\t\t\truneId={build.runes.resolve.id}\n\t\t\t\t\t\t\t\truneName={build.runes.resolve.runeName}\n\t\t\t\t\t\t\t\treason={\n\t\t\t\t\t\t\t\t\tbuild.runes.resolve.reason ? build.runes.resolve.reason : ''\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t{/* INSPIRATION RUNE BOX */}\n\t\t\t\t\t\t\t<RuneItem\n\t\t\t\t\t\t\t\truneId={build.runes.inspiration.id}\n\t\t\t\t\t\t\t\truneName={build.runes.inspiration.runeName}\n\t\t\t\t\t\t\t\treason={\n\t\t\t\t\t\t\t\t\tbuild.runes.inspiration.reason\n\t\t\t\t\t\t\t\t\t\t? build.runes.inspiration.reason\n\t\t\t\t\t\t\t\t\t\t: ''\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</Grid>\n\n\t\t\t\t\t{/* SPELLS */}\n\t\t\t\t\t<SectionDivider title='Summoner Spells' />\n\t\t\t\t\t<Grid container spacing={3}>\n\t\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t\t<Box p={1}>\n\t\t\t\t\t\t\t\t<SpellItem\n\t\t\t\t\t\t\t\t\tspellId={build.spells.spellOne.id}\n\t\t\t\t\t\t\t\t\tspellName={build.spells.spellOne.spellName}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<SpellItem\n\t\t\t\t\t\t\t\t\tspellId={build.spells.spellTwo.id}\n\t\t\t\t\t\t\t\t\tspellName={build.spells.spellTwo.spellName}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</Grid>\n\n\t\t\t\t\t{/* FOOTER*/}\n\t\t\t\t\t<PlayerBuildFooter dateSubmitted={build.dateSubmitted} />\n\t\t\t\t</Box>\n\t\t\t) : (\n\t\t\t\t<CircularProgress />\n\t\t\t)}\n\t\t</div>\n\t);\n};\n\nexport default withRouter(PlayerBuild);\n","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Builds\\Player\\components\\PlayerBuildHeader\\PlayerBuildHeader.tsx",["214","215","216","217"],"import React from 'react';\n// @ts-ignore - No types for this module\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\n\n// MaterialUI\nimport Avatar from '@material-ui/core/Avatar';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\n// CSS\nimport styles from './playerbuildheader.module.css';\n// Types\nimport { BuildInterface } from '../../../../../utils/interfaces';\ntype PlayerBuildHeaderProps = {\n\tbuild: BuildInterface;\n};\n\nconst PlayerBuildHeader = (props: PlayerBuildHeaderProps) => {\n\tconst { build } = props;\n\tconst { buildTitle, buildRole, champion, rank, spells, username } = build;\n\n\tlet roleToDisplay;\n\n\tswitch (buildRole) {\n\t\tcase 'Jungle':\n\t\t\troleToDisplay = 'e4cbdb64-7118-436b-b0c6-89388731aeb5';\n\t\t\tbreak;\n\t\tcase 'Support':\n\t\t\troleToDisplay = '35b924df-6d60-4cc5-82a8-4e5dc85272a0';\n\t\t\tbreak;\n\t\tcase 'Top':\n\t\t\troleToDisplay = '53f90d2a-d970-41ec-8d5c-f8775580ad7e';\n\t\t\tbreak;\n\t\tcase 'Middle':\n\t\t\troleToDisplay = '6b7ca1d8-872a-4c54-b685-720e14251941';\n\t\t\tbreak;\n\t\tcase 'Bottom':\n\t\t\troleToDisplay = 'e3f90603-6452-4c33-afe6-466a69b6095b';\n\t\t\tbreak;\n\t}\n\n\treturn (\n\t\t<Grid\n\t\t\tcontainer\n\t\t\twrap='nowrap'\n\t\t\tspacing={2}\n\t\t\tclassName={styles.playerBuildHeaderContainer}\n\t\t>\n\t\t\t{/* Champion Image */}\n\t\t\t<Grid item>\n\t\t\t\t<Box className={styles.championImageContainer}>\n\t\t\t\t\t<LazyLoadImage\n\t\t\t\t\t\tsrc={`/images/wildriftchampions/${champion.id}.jpg`}\n\t\t\t\t\t\tclassName={styles.championImage}\n\t\t\t\t\t\ttitle={champion.championName}\n\t\t\t\t\t/>\n\t\t\t\t\t<Box\n\t\t\t\t\t\tclassName={styles.buildRoleContainer}\n\t\t\t\t\t\tdisplay='flex'\n\t\t\t\t\t\tjustifyContent='center'\n\t\t\t\t\t>\n\t\t\t\t\t\t<LazyLoadImage\n\t\t\t\t\t\t\tsrc={`/images/wildriftroles/${roleToDisplay}.png`}\n\t\t\t\t\t\t\tclassName={styles.buildRoleImage}\n\t\t\t\t\t\t\ttitle={buildRole}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<span className={styles.buildRoleText}>{buildRole}</span>\n\t\t\t\t\t</Box>\n\t\t\t\t</Box>\n\t\t\t</Grid>\n\t\t\t{/* Champion Name, Build Title, and Username */}\n\t\t\t<Grid item xs>\n\t\t\t\t<Box className={styles.buildInformationContainer}>\n\t\t\t\t\t<span className={styles.championNameText}>\n\t\t\t\t\t\t{champion.championName}\n\t\t\t\t\t</span>\n\t\t\t\t\t<Box>\n\t\t\t\t\t\t<p className={styles.buildTitleText}>{buildTitle}</p>\n\t\t\t\t\t\t<span>by</span>{' '}\n\t\t\t\t\t\t<span className={styles.usernameText}>{username}</span>\n\t\t\t\t\t\t{/* <LazyLoadImage\n\t\t\t\t\t\t\tsrc={`/images/wildriftranks/${build.rank.id}.png`}\n\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\twidth: '30px',\n\t\t\t\t\t\t\t\tmarginLeft: '10px',\n\t\t\t\t\t\t\t\tposition: 'absolute',\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\ttitle={rank.rankName}\n\t\t\t\t\t\t/> */}\n\t\t\t\t\t</Box>\n\t\t\t\t</Box>\n\t\t\t</Grid>\n\t\t</Grid>\n\t);\n};\n\nexport default PlayerBuildHeader;\n","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Builds\\Player\\components\\SectionDivider\\SectionDivider.tsx",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Builds\\Player\\components\\BuildItem\\BuildItem.tsx",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Builds\\Player\\components\\RuneItem\\RuneItem.tsx",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Builds\\Player\\components\\Spellitem\\SpellItem.tsx",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Builds\\Player\\components\\PlayerBuildFooter\\PlayerBuildFooter.tsx",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\components\\Popover\\ItemPopover.tsx",[],{"ruleId":"218","severity":1,"message":"219","line":8,"column":10,"nodeType":"220","messageId":"221","endLine":8,"endColumn":21},{"ruleId":"218","severity":1,"message":"222","line":27,"column":7,"nodeType":"220","messageId":"221","endLine":27,"endColumn":15},{"ruleId":"218","severity":1,"message":"223","line":31,"column":7,"nodeType":"220","messageId":"221","endLine":31,"endColumn":16},{"ruleId":"224","replacedBy":"225"},{"ruleId":"226","replacedBy":"227"},{"ruleId":"228","severity":1,"message":"229","line":40,"column":70,"nodeType":"230","messageId":"231","endLine":40,"endColumn":72},{"ruleId":"232","severity":1,"message":"233","line":58,"column":5,"nodeType":"234","endLine":58,"endColumn":17,"suggestions":"235"},{"ruleId":"232","severity":1,"message":"233","line":69,"column":5,"nodeType":"234","endLine":69,"endColumn":21,"suggestions":"236"},{"ruleId":"232","severity":1,"message":"237","line":177,"column":5,"nodeType":"234","endLine":177,"endColumn":7,"suggestions":"238"},{"ruleId":"218","severity":1,"message":"239","line":6,"column":8,"nodeType":"220","messageId":"221","endLine":6,"endColumn":17},{"ruleId":"218","severity":1,"message":"240","line":9,"column":2,"nodeType":"220","messageId":"221","endLine":9,"endColumn":19},{"ruleId":"218","severity":1,"message":"241","line":28,"column":8,"nodeType":"220","messageId":"221","endLine":28,"endColumn":14},{"ruleId":"218","severity":1,"message":"242","line":69,"column":10,"nodeType":"220","messageId":"221","endLine":69,"endColumn":24},{"ruleId":"218","severity":1,"message":"241","line":12,"column":8,"nodeType":"220","messageId":"221","endLine":12,"endColumn":14},{"ruleId":"218","severity":1,"message":"241","line":11,"column":8,"nodeType":"220","messageId":"221","endLine":11,"endColumn":14},{"ruleId":"218","severity":1,"message":"241","line":20,"column":8,"nodeType":"220","messageId":"221","endLine":20,"endColumn":14},{"ruleId":"232","severity":1,"message":"243","line":65,"column":5,"nodeType":"234","endLine":65,"endColumn":21,"suggestions":"244"},{"ruleId":"218","severity":1,"message":"241","line":16,"column":8,"nodeType":"220","messageId":"221","endLine":16,"endColumn":14},{"ruleId":"218","severity":1,"message":"241","line":13,"column":8,"nodeType":"220","messageId":"221","endLine":13,"endColumn":14},{"ruleId":"218","severity":1,"message":"241","line":13,"column":8,"nodeType":"220","messageId":"221","endLine":13,"endColumn":14},{"ruleId":"224","replacedBy":"225"},{"ruleId":"226","replacedBy":"227"},{"ruleId":"218","severity":1,"message":"241","line":7,"column":8,"nodeType":"220","messageId":"221","endLine":7,"endColumn":14},{"ruleId":"218","severity":1,"message":"245","line":7,"column":8,"nodeType":"220","messageId":"221","endLine":7,"endColumn":14},{"ruleId":"218","severity":1,"message":"246","line":11,"column":8,"nodeType":"220","messageId":"221","endLine":11,"endColumn":18},{"ruleId":"218","severity":1,"message":"241","line":22,"column":8,"nodeType":"220","messageId":"221","endLine":22,"endColumn":14},{"ruleId":"232","severity":1,"message":"247","line":51,"column":5,"nodeType":"234","endLine":51,"endColumn":7,"suggestions":"248"},{"ruleId":"218","severity":1,"message":"245","line":6,"column":8,"nodeType":"220","messageId":"221","endLine":6,"endColumn":14},{"ruleId":"218","severity":1,"message":"246","line":9,"column":8,"nodeType":"220","messageId":"221","endLine":9,"endColumn":18},{"ruleId":"218","severity":1,"message":"249","line":20,"column":43,"nodeType":"220","messageId":"221","endLine":20,"endColumn":47},{"ruleId":"218","severity":1,"message":"250","line":20,"column":49,"nodeType":"220","messageId":"221","endLine":20,"endColumn":55},"@typescript-eslint/no-unused-vars","'PersistGate' is defined but never used.","Identifier","unusedVar","'pReducer' is assigned a value but never used.","'persistor' is assigned a value but never used.","no-native-reassign",["251"],"no-negated-in-lhs",["252"],"array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'champions'. Either include it or remove the dependency array.","ArrayExpression",["253"],["254"],"React Hook useEffect has missing dependencies: 'setChampions', 'setItems', 'setRanks', 'setRoles', 'setRunes', and 'setSpells'. Either include them or remove the dependency array.",["255"],"'TextField' is defined but never used.","'successBuildSaved' is defined but never used.","'styles' is defined but never used.","'saveToDatabase' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'setItemsConfirmed'. Either include it or remove the dependency array.",["256"],"'Avatar' is defined but never used.","'Typography' is defined but never used.","React Hook useEffect has a missing dependency: 'match.params.buildId'. Either include it or remove the dependency array.",["257"],"'rank' is assigned a value but never used.","'spells' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"258","fix":"259"},{"desc":"260","fix":"261"},{"desc":"262","fix":"263"},{"desc":"264","fix":"265"},{"desc":"266","fix":"267"},"Update the dependencies array to be: [champions, roleFilter]",{"range":"268","text":"269"},"Update the dependencies array to be: [championSearch, champions]",{"range":"270","text":"271"},"Update the dependencies array to be: [setChampions, setItems, setRanks, setRoles, setRunes, setSpells]",{"range":"272","text":"273"},"Update the dependencies array to be: [itemsConfirmed, setItemsConfirmed]",{"range":"274","text":"275"},"Update the dependencies array to be: [match.params.buildId]",{"range":"276","text":"277"},[1576,1588],"[champions, roleFilter]",[1888,1904],"[championSearch, champions]",[4361,4363],"[setChampions, setItems, setRanks, setRoles, setRunes, setSpells]",[1799,1815],"[itemsConfirmed, setItemsConfirmed]",[1599,1601],"[match.params.buildId]"]