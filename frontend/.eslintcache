[{"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\index.tsx":"1","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\reportWebVitals.ts":"2","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\App\\App.tsx":"3","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\shared\\constants\\requiredLength.ts":"4","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\shared\\config\\config.ts":"5","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\shared\\constants\\constants.ts":"6","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\shared\\constants\\defaultSelectedState.ts":"7","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\shared\\constants\\validationMessages.ts":"8","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\shared\\interfaces\\interfaces.ts":"9","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\shared\\components\\Popover\\ItemPopover.tsx":"10","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\shared\\components\\Popover\\RunePopover.tsx":"11","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\shared\\components\\Popover\\SpellPopover.tsx":"12","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\shared\\components\\Loading\\Backdrop.tsx":"13","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\shared\\components\\Loading\\ComponentLoading.tsx":"14","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\shared\\components\\Footer\\Footer.tsx":"15","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\shared\\components\\Header\\Header.tsx":"16","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\shared\\components\\PageError\\PageNotFound\\PageNotFound.tsx":"17","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\shared\\utils\\buildValidation.ts":"18","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\shared\\utils\\buildValidationHelpers.ts":"19","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\shared\\components\\PageLayout\\Layout.tsx":"20","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\shared\\components\\AlertPopup\\AlertPopup.tsx":"21","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\FAQPage\\index.tsx":"22","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\AboutPage\\index.tsx":"23","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\ChampionBuildsPage\\index.tsx":"24","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\LandingPage\\index.tsx":"25","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\PlayerBuildPage\\index.tsx":"26","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\PrivacyPolicyPage\\index.tsx":"27","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\index.tsx":"28","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\ChampionBuildsPage\\Header\\index.tsx":"29","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\FAQPage\\Accordion\\index.tsx":"30","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\LandingPage\\ChampionsList\\index.tsx":"31","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\ChampionBuildsPage\\BuildsList\\index.tsx":"32","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\LandingPage\\FilterChampions\\index.tsx":"33","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\PlayerBuildPage\\PlayerBuildFooter\\index.tsx":"34","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\Header\\index.tsx":"35","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\PlayerInformation\\index.tsx":"36","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\BuildInformation\\index.tsx":"37","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\Stepper\\index.tsx":"38","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\PlayerBuildPage\\PlayerBuildHeader\\index.tsx":"39","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\PlayerBuildPage\\Spellitem\\index.tsx":"40","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\PlayerBuildPage\\SectionDivider\\index.tsx":"41","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\PlayerBuildPage\\RuneItem\\index.tsx":"42","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\PlayerBuildPage\\BuildDescription\\index.tsx":"43","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\PlayerBuildPage\\BuildItem\\index.tsx":"44","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\ChampionBuildsPage\\Header\\Counters\\index.tsx":"45","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\ChampionBuildsPage\\Header\\Lanes\\index.tsx":"46","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\PlayerBuildPage\\PlayerBuildFooter\\CopyBuildLink\\index.tsx":"47","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\PlayerBuildPage\\PlayerBuildFooter\\ViewMoreBuilds\\index.tsx":"48","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\PlayerInformation\\PlayerRegion\\index.tsx":"49","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\Stepper\\StepperButtons\\index.tsx":"50","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\ReCaptcha\\index.tsx":"51","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\PlayerBuildPage\\PlayerBuildHeader\\BuildChip\\index.tsx":"52","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\PlayerInformation\\PlayerRank\\index.tsx":"53","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\PlayerInformation\\PlayerUsername\\index.tsx":"54","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\ChampionBuildsPage\\BuildsList\\NoBuilds\\index.tsx":"55","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\ChampionBuildsPage\\BuildsList\\BuildBox\\index.tsx":"56","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\ChampionBuildsPage\\BuildsList\\BuildBox\\BuildItem\\index.tsx":"57","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\ChampionBuildsPage\\BuildsList\\BuildBox\\BuildRankUser\\index.tsx":"58","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\ChampionBuildsPage\\BuildsList\\BuildBox\\BuildDate\\index.tsx":"59","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\ChampionBuildsPage\\BuildsList\\BuildBox\\BuildRune\\index.tsx":"60","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\ChampionBuildsPage\\BuildsList\\BuildBox\\BuildSpell\\index.tsx":"61","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\BuildInformation\\SpellsSelect\\index.tsx":"62","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\BuildInformation\\ChampionSelect\\index.tsx":"63","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\BuildInformation\\ItemsSelect\\index.tsx":"64","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\BuildInformation\\RunesSelect\\index.tsx":"65","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\BuildInformation\\SpellsSelect\\Spell\\index.tsx":"66","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\BuildInformation\\RunesSelect\\components\\Inspiration.tsx":"67","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\BuildInformation\\RunesSelect\\components\\Keystone.tsx":"68","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\BuildInformation\\RunesSelect\\components\\Resolve.tsx":"69","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\BuildInformation\\RunesSelect\\components\\Domination.tsx":"70","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\BuildInformation\\ItemsSelected\\index.tsx":"71","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\BuildInformation\\ItemsSelected\\BuildItem\\index.tsx":"72","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\App\\Routes.tsx":"73","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\GeneralInformation\\index.tsx":"74","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\GeneralInformation\\BuildRole\\index.tsx":"75","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\GeneralInformation\\BuildTitle\\index.tsx":"76","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\GeneralInformation\\BuildGameMode\\index.tsx":"77","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\GeneralInformation\\BuildDescription\\index.tsx":"78","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\shared\\store\\reducers\\build.ts":"79","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\shared\\store\\reducers\\gameData.ts":"80","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\shared\\store\\reducers\\reCaptcha.ts":"81","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\shared\\store\\reducers\\snackbarControls.ts":"82","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\shared\\store\\actions.ts":"83","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\shared\\store\\index.ts":"84","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\shared\\components\\Header\\AppBar\\AppBar.tsx":"85","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\shared\\utils\\imagePath.ts":"86","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\shared\\utils\\championNameToUrlString.ts":"87","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\shared\\utils\\sessionStorage.ts":"88"},{"size":800,"mtime":1619400498332,"results":"89","hashOfConfig":"90"},{"size":425,"mtime":499162500000,"results":"91","hashOfConfig":"90"},{"size":4914,"mtime":1619422359482,"results":"92","hashOfConfig":"90"},{"size":337,"mtime":1619089926304,"results":"93","hashOfConfig":"90"},{"size":267,"mtime":1619400442826,"results":"94","hashOfConfig":"90"},{"size":1259,"mtime":1619400761791,"results":"95","hashOfConfig":"90"},{"size":3895,"mtime":1618818913506,"results":"96","hashOfConfig":"90"},{"size":2388,"mtime":1617875669211,"results":"97","hashOfConfig":"90"},{"size":2430,"mtime":1617802086265,"results":"98","hashOfConfig":"90"},{"size":2548,"mtime":1619235168527,"results":"99","hashOfConfig":"90"},{"size":2240,"mtime":1619232954947,"results":"100","hashOfConfig":"90"},{"size":2850,"mtime":1619232958146,"results":"101","hashOfConfig":"90"},{"size":614,"mtime":1618569757965,"results":"102","hashOfConfig":"90"},{"size":545,"mtime":1619086704533,"results":"103","hashOfConfig":"90"},{"size":2088,"mtime":1619086912825,"results":"104","hashOfConfig":"90"},{"size":274,"mtime":1619234568277,"results":"105","hashOfConfig":"90"},{"size":1817,"mtime":1619485089496,"results":"106","hashOfConfig":"90"},{"size":10547,"mtime":1619233454171,"results":"107","hashOfConfig":"90"},{"size":7688,"mtime":1619233492151,"results":"108","hashOfConfig":"90"},{"size":888,"mtime":1619173914936,"results":"109","hashOfConfig":"90"},{"size":2155,"mtime":1619233599747,"results":"110","hashOfConfig":"90"},{"size":1353,"mtime":1619491370148,"results":"111","hashOfConfig":"90"},{"size":2189,"mtime":1619421648965,"results":"112","hashOfConfig":"90"},{"size":4572,"mtime":1619490694988,"results":"113","hashOfConfig":"90"},{"size":2835,"mtime":1619491419997,"results":"114","hashOfConfig":"90"},{"size":4448,"mtime":1619491750465,"results":"115","hashOfConfig":"90"},{"size":4505,"mtime":1619491914154,"results":"116","hashOfConfig":"90"},{"size":7607,"mtime":1619490903259,"results":"117","hashOfConfig":"90"},{"size":2009,"mtime":1619490709082,"results":"118","hashOfConfig":"90"},{"size":5972,"mtime":1619491387466,"results":"119","hashOfConfig":"90"},{"size":1394,"mtime":1619491454995,"results":"120","hashOfConfig":"90"},{"size":858,"mtime":1619490749388,"results":"121","hashOfConfig":"90"},{"size":2886,"mtime":1619491434593,"results":"122","hashOfConfig":"90"},{"size":739,"mtime":1619491847138,"results":"123","hashOfConfig":"90"},{"size":743,"mtime":1619491039822,"results":"124","hashOfConfig":"90"},{"size":589,"mtime":1619490975799,"results":"125","hashOfConfig":"90"},{"size":979,"mtime":1619491139920,"results":"126","hashOfConfig":"90"},{"size":2005,"mtime":1619490948636,"results":"127","hashOfConfig":"90"},{"size":3197,"mtime":1619491817448,"results":"128","hashOfConfig":"90"},{"size":1773,"mtime":1619491760215,"results":"129","hashOfConfig":"90"},{"size":539,"mtime":1619491785220,"results":"130","hashOfConfig":"90"},{"size":2009,"mtime":1619491801460,"results":"131","hashOfConfig":"90"},{"size":1753,"mtime":1619491902265,"results":"132","hashOfConfig":"90"},{"size":2186,"mtime":1619491891797,"results":"133","hashOfConfig":"90"},{"size":3321,"mtime":1619490734096,"results":"134","hashOfConfig":"90"},{"size":1801,"mtime":1619490720702,"results":"135","hashOfConfig":"90"},{"size":1467,"mtime":1619491878015,"results":"136","hashOfConfig":"90"},{"size":1039,"mtime":1619491862063,"results":"137","hashOfConfig":"90"},{"size":2081,"mtime":1619491013762,"results":"138","hashOfConfig":"90"},{"size":1290,"mtime":1619490958356,"results":"139","hashOfConfig":"90"},{"size":1495,"mtime":1619233599747,"results":"140","hashOfConfig":"90"},{"size":572,"mtime":1619491838834,"results":"141","hashOfConfig":"90"},{"size":2335,"mtime":1619491031277,"results":"142","hashOfConfig":"90"},{"size":1813,"mtime":1619490994145,"results":"143","hashOfConfig":"90"},{"size":1578,"mtime":1619490757662,"results":"144","hashOfConfig":"90"},{"size":4196,"mtime":1619490789324,"results":"145","hashOfConfig":"90"},{"size":1180,"mtime":1619490847071,"results":"146","hashOfConfig":"90"},{"size":971,"mtime":1619490834925,"results":"147","hashOfConfig":"90"},{"size":733,"mtime":1619226506670,"results":"148","hashOfConfig":"90"},{"size":1851,"mtime":1619490825256,"results":"149","hashOfConfig":"90"},{"size":1192,"mtime":1619490806509,"results":"150","hashOfConfig":"90"},{"size":3254,"mtime":1619491158735,"results":"151","hashOfConfig":"90"},{"size":2533,"mtime":1619491347420,"results":"152","hashOfConfig":"90"},{"size":5855,"mtime":1619491331608,"results":"153","hashOfConfig":"90"},{"size":4429,"mtime":1619491260830,"results":"154","hashOfConfig":"90"},{"size":2255,"mtime":1619491176499,"results":"155","hashOfConfig":"90"},{"size":3383,"mtime":1619491289064,"results":"156","hashOfConfig":"90"},{"size":3277,"mtime":1619491277863,"results":"157","hashOfConfig":"90"},{"size":3278,"mtime":1619491270997,"results":"158","hashOfConfig":"90"},{"size":3326,"mtime":1619491296593,"results":"159","hashOfConfig":"90"},{"size":6017,"mtime":1619491248387,"results":"160","hashOfConfig":"90"},{"size":1709,"mtime":1619491310652,"results":"161","hashOfConfig":"90"},{"size":1269,"mtime":1619230234378,"results":"162","hashOfConfig":"90"},{"size":905,"mtime":1619491048934,"results":"163","hashOfConfig":"90"},{"size":3408,"mtime":1619491084906,"results":"164","hashOfConfig":"90"},{"size":2080,"mtime":1619491069705,"results":"165","hashOfConfig":"90"},{"size":2852,"mtime":1619491123832,"results":"166","hashOfConfig":"90"},{"size":1943,"mtime":1619491117995,"results":"167","hashOfConfig":"90"},{"size":2118,"mtime":1619233813338,"results":"168","hashOfConfig":"90"},{"size":1018,"mtime":1619233599746,"results":"169","hashOfConfig":"90"},{"size":566,"mtime":1619233599745,"results":"170","hashOfConfig":"90"},{"size":398,"mtime":1619233599747,"results":"171","hashOfConfig":"90"},{"size":1919,"mtime":1619233593981,"results":"172","hashOfConfig":"90"},{"size":792,"mtime":1619233846582,"results":"173","hashOfConfig":"90"},{"size":2144,"mtime":1619234799677,"results":"174","hashOfConfig":"90"},{"size":487,"mtime":1619402479197,"results":"175","hashOfConfig":"90"},{"size":435,"mtime":1619416273917,"results":"176","hashOfConfig":"90"},{"size":716,"mtime":1619409950491,"results":"177","hashOfConfig":"90"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"181"},"q16prs",{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"181"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186","usedDeprecatedRules":"181"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"181"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"181"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"181"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"181"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"181"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"181"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"181"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"181"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"181"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"181"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"181"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"181"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"215","messages":"216","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"217","usedDeprecatedRules":"181"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"220","usedDeprecatedRules":"181"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"181"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"181"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"181"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"231","messages":"232","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"233","messages":"234","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"237","messages":"238","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"247","messages":"248","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"249","messages":"250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"255","messages":"256","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"257","messages":"258","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"259","usedDeprecatedRules":"181"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"262","messages":"263","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"264","messages":"265","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"266","messages":"267","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"268","messages":"269","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"270","messages":"271","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"272","messages":"273","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"274","messages":"275","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"276","messages":"277","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"278","messages":"279","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"280","messages":"281","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"282","messages":"283","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"284","messages":"285","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"286","usedDeprecatedRules":"181"},{"filePath":"287","messages":"288","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"289","messages":"290","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"291","messages":"292","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"293","messages":"294","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"295","messages":"296","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"181"},{"filePath":"297","messages":"298","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"181"},{"filePath":"299","messages":"300","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"301","messages":"302","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"181"},{"filePath":"303","messages":"304","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"305","messages":"306","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"307","messages":"308","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"309","messages":"310","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"311","messages":"312","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"313","usedDeprecatedRules":"181"},{"filePath":"314","messages":"315","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"316","messages":"317","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"181"},{"filePath":"318","messages":"319","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"181"},{"filePath":"320","messages":"321","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"322","messages":"323","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"324","messages":"325","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"181"},{"filePath":"326","messages":"327","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"328","messages":"329","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"330","messages":"331","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"181"},{"filePath":"332","messages":"333","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"334","messages":"335","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"181"},{"filePath":"336","messages":"337","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"338","messages":"339","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"340","messages":"341","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"342","messages":"343","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"181"},{"filePath":"344","messages":"345","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"181"},{"filePath":"346","messages":"347","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"181"},{"filePath":"348","messages":"349","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"181"},{"filePath":"350","messages":"351","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"181"},{"filePath":"352","messages":"353","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"354","usedDeprecatedRules":"181"},{"filePath":"355","messages":"356","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"181"},{"filePath":"357","messages":"358","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"181"},{"filePath":"359","messages":"360","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"181"},{"filePath":"361","messages":"362","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"181"},"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\index.tsx",["363","364"],"import React from 'react';\nimport ReactDOM from 'react-dom';\n\n// Redux\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { Provider } from 'react-redux';\nimport { store, persistor } from './shared/store/index';\n\nimport './index.css';\nimport App from './App/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<Provider store={store}>\n\t\t\t{/* <PersistGate loading={null} persistor={persistor}> */}\n\t\t\t<App />\n\t\t\t{/* </PersistGate> */}\n\t\t</Provider>\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["365","366"],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\reportWebVitals.ts",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\App\\App.tsx",["367"],"import React, { useEffect } from 'react';\r\nimport { createMuiTheme } from '@material-ui/core/styles';\r\nimport { ThemeProvider } from '@material-ui/styles';\r\nimport { URL } from '../shared/config/config';\r\nimport axios from 'axios';\r\n\r\n// Redux\r\nimport { connect } from 'react-redux';\r\nimport actionTypes from '../shared/store/actions';\r\n\r\n// MaterialUI\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\n// Components\r\nimport Layout from '../shared/components/PageLayout/Layout';\r\nimport Routes from './Routes';\r\n\r\n// Types\r\nimport {\r\n\tChampionInterface,\r\n\tItemInterface,\r\n\tRankInterface,\r\n\tRoleInterface,\r\n\tRuneInterface,\r\n\tSpellInterface,\r\n} from '../shared/interfaces/GameData';\r\n// CSS\r\nimport styles from './app.module.css';\r\nconst theme = createMuiTheme({\r\n\ttypography: {\r\n\t\tfontFamily: ['Helvetica Neue', 'Helvetica', 'Arial', 'Tahoma'].join(','),\r\n\t},\r\n\tpalette: {\r\n\t\tprimary: {\r\n\t\t\tlight: '#FAFAFA',\r\n\t\t\tmain: '#13AAFF',\r\n\t\t\tdark: '#5893D4',\r\n\t\t},\r\n\t\tsecondary: {\r\n\t\t\tlight: '#292E38',\r\n\t\t\tmain: '#5893D4',\r\n\t\t\tdark: '#171717',\r\n\t\t},\r\n\t},\r\n});\r\ntype AppProps = {\r\n\tsetChampions: (newChampions: Array<ChampionInterface>) => void;\r\n\tsetItems: (newItems: Array<ItemInterface>) => void;\r\n\tsetRanks: (newRanks: Array<RankInterface>) => void;\r\n\tsetRoles: (newRoles: Array<RoleInterface>) => void;\r\n\tsetRunes: (newRunes: Array<RuneInterface>) => void;\r\n\tsetSpells: (newSpells: Array<SpellInterface>) => void;\r\n};\r\n\r\nconst App = (props: AppProps) => {\r\n\tconst {\r\n\t\tsetChampions,\r\n\t\tsetItems,\r\n\t\tsetRanks,\r\n\t\tsetRunes,\r\n\t\tsetRoles,\r\n\t\tsetSpells,\r\n\t} = props;\r\n\r\n\t// Get DATA\r\n\tuseEffect(() => {\r\n\t\tconst getChampions = axios.get(`${URL.SERVER}/api/champion/all`);\r\n\t\tconst getItems = axios.get(`${URL.SERVER}/api/item/all`);\r\n\t\tconst getRunes = axios.get(`${URL.SERVER}/api/rune/all`);\r\n\t\tconst getSpells = axios.get(`${URL.SERVER}/api/spell/all`);\r\n\t\tconst getRanks = axios.get(`${URL.SERVER}/api/rank/all`);\r\n\t\tconst getRoles = axios.get(`${URL.SERVER}/api/role/all`);\r\n\r\n\t\tPromise.all([\r\n\t\t\tgetChampions,\r\n\t\t\tgetItems,\r\n\t\t\tgetRunes,\r\n\t\t\tgetSpells,\r\n\t\t\tgetRanks,\r\n\t\t\tgetRoles,\r\n\t\t])\r\n\t\t\t.then((values) => {\r\n\t\t\t\tconst [\r\n\t\t\t\t\t{ data: championsArray },\r\n\t\t\t\t\t{ data: itemsArray },\r\n\t\t\t\t\t{ data: runesArray },\r\n\t\t\t\t\t{ data: spellsArray },\r\n\t\t\t\t\t{ data: ranksArray },\r\n\t\t\t\t\t{ data: rolesArray },\r\n\t\t\t\t] = values;\r\n\r\n\t\t\t\t// const sortArray = (arrName, interface) => {\r\n\r\n\t\t\t\t// \tswitch(arrName){\r\n\t\t\t\t// \t\tcase 'championsArray':\r\n\t\t\t\t// \t\t\treturn\r\n\t\t\t\t// \t}\r\n\r\n\t\t\t\t// \treturn\r\n\t\t\t\t// }\r\n\r\n\t\t\t\t// Sort Champions Alphabetically\r\n\t\t\t\tchampionsArray.sort(function (\r\n\t\t\t\t\ta: ChampionInterface,\r\n\t\t\t\t\tb: ChampionInterface\r\n\t\t\t\t) {\r\n\t\t\t\t\tif (a.championName < b.championName) {\r\n\t\t\t\t\t\treturn -1;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (a.championName > b.championName) {\r\n\t\t\t\t\t\treturn 1;\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn 0;\r\n\t\t\t\t});\r\n\r\n\t\t\t\t// Sort Items Alphabetically\r\n\t\t\t\titemsArray.sort(function (a: ItemInterface, b: ItemInterface) {\r\n\t\t\t\t\tif (a.itemName < b.itemName) {\r\n\t\t\t\t\t\treturn -1;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (a.itemName > b.itemName) {\r\n\t\t\t\t\t\treturn 1;\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn 0;\r\n\t\t\t\t});\r\n\r\n\t\t\t\t// Sort Runes\r\n\t\t\t\trunesArray.sort(function (a: RuneInterface, b: RuneInterface) {\r\n\t\t\t\t\tif (a.runeName < b.runeName) {\r\n\t\t\t\t\t\treturn -1;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (a.runeName > b.runeName) {\r\n\t\t\t\t\t\treturn 1;\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn 0;\r\n\t\t\t\t});\r\n\r\n\t\t\t\t// Sort Spells\r\n\t\t\t\tspellsArray.sort(function (a: SpellInterface, b: SpellInterface) {\r\n\t\t\t\t\tif (a.spellName < b.spellName) {\r\n\t\t\t\t\t\treturn -1;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (a.spellName > b.spellName) {\r\n\t\t\t\t\t\treturn 1;\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn 0;\r\n\t\t\t\t});\r\n\r\n\t\t\t\tsetItems(itemsArray);\r\n\t\t\t\tsetChampions(championsArray);\r\n\t\t\t\tsetRanks(ranksArray);\r\n\t\t\t\tsetRunes(runesArray);\r\n\t\t\t\tsetSpells(spellsArray);\r\n\t\t\t\tsetRoles(rolesArray);\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tconsole.error('Something went wrong');\r\n\t\t\t\tconsole.error(err);\r\n\t\t\t});\r\n\t}, []);\r\n\r\n\treturn (\r\n\t\t<ThemeProvider theme={theme}>\r\n\t\t\t<div className={`App ${styles.appContainer}`}>\r\n\t\t\t\t<CssBaseline />\r\n\t\t\t\t<Layout>\r\n\t\t\t\t\t<Routes />\r\n\t\t\t\t</Layout>\r\n\t\t\t</div>\r\n\t\t</ThemeProvider>\r\n\t);\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: any) => {\r\n\treturn {\r\n\t\t// === SETTER Champions === //\r\n\t\tsetChampions: (champions: Array<ChampionInterface>) =>\r\n\t\t\tdispatch({ type: actionTypes.GAMEDATA_SET_CHAMPIONS, data: champions }),\r\n\t\tsetItems: (items: Array<ItemInterface>) =>\r\n\t\t\tdispatch({ type: actionTypes.GAMEDATA_SET_ITEMS, data: items }),\r\n\t\tsetRanks: (ranks: Array<RankInterface>) =>\r\n\t\t\tdispatch({ type: actionTypes.GAMEDATA_SET_RANKS, data: ranks }),\r\n\t\tsetRoles: (roles: Array<RoleInterface>) =>\r\n\t\t\tdispatch({ type: actionTypes.GAMEDATA_SET_ROLES, data: roles }),\r\n\t\tsetRunes: (runes: Array<RuneInterface>) =>\r\n\t\t\tdispatch({ type: actionTypes.GAMEDATA_SET_RUNES, data: runes }),\r\n\t\tsetSpells: (spells: Array<SpellInterface>) =>\r\n\t\t\tdispatch({ type: actionTypes.GAMEDATA_SET_SPELLS, data: spells }),\r\n\t};\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(App);\r\n","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\shared\\constants\\requiredLength.ts",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\shared\\config\\config.ts",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\shared\\constants\\constants.ts",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\shared\\constants\\defaultSelectedState.ts",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\shared\\constants\\validationMessages.ts",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\shared\\interfaces\\interfaces.ts",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\shared\\components\\Popover\\ItemPopover.tsx",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\shared\\components\\Popover\\RunePopover.tsx",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\shared\\components\\Popover\\SpellPopover.tsx",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\shared\\components\\Loading\\Backdrop.tsx",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\shared\\components\\Loading\\ComponentLoading.tsx",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\shared\\components\\Footer\\Footer.tsx",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\shared\\components\\Header\\Header.tsx",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\shared\\components\\PageError\\PageNotFound\\PageNotFound.tsx",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\shared\\utils\\buildValidation.ts",["368"],"import {\n\tChampionInterface,\n\tItemInterface,\n\tRankInterface,\n\tRoleInterface,\n\tRuneInterface,\n\tSpellInterface,\n} from '../interfaces/GameData';\nimport { BuildInterface } from '../interfaces/Build';\nimport { BuildValidationHelper } from './buildValidationHelpers';\nimport { ItemType, GameMode, GameRegion } from '../constants/constants';\nimport { RequiredLength } from '../constants/requiredLength';\nimport { Message } from '../constants/validationMessages';\n\nconst HAS_BUILD_TITLE = (build: BuildInterface) => {\n\tif (build.buildTitle) {\n\t\treturn BuildValidationHelper.resultHandler(null, true);\n\t}\n\n\treturn BuildValidationHelper.resultHandler(\n\t\tMessage.ERROR.NO_BUILD_TITLE,\n\t\tfalse\n\t);\n};\n\nconst HAS_ITEMS_SELECTED = (build: BuildInterface) => {\n\tif (build.itemsConfirmed.length !== 0) {\n\t\treturn BuildValidationHelper.resultHandler(null, true);\n\t}\n\n\treturn BuildValidationHelper.resultHandler(\n\t\tMessage.ERROR.NO_ITEMS_SELECTED,\n\t\tfalse\n\t);\n};\n\nconst HAS_THREE_TO_SIX_PRIMARY_ITEMS = (build: BuildInterface) => {\n\tconst lengthOfPrimaryItems = build.itemsConfirmed.filter(\n\t\t(item: ItemInterface) => item.type === 'primary'\n\t).length;\n\n\tconst hasThreeToSixPrimaryItems =\n\t\tlengthOfPrimaryItems >= RequiredLength.ITEMS.PRIMARY.MIN_LENGTH &&\n\t\tlengthOfPrimaryItems <= RequiredLength.ITEMS.PRIMARY.MAX_LENGTH;\n\n\tif (hasThreeToSixPrimaryItems) {\n\t\treturn BuildValidationHelper.resultHandler(null, true);\n\t}\n\n\treturn BuildValidationHelper.resultHandler(\n\t\tMessage.ERROR.DOES_NOT_HAVE_THREE_TO_SIX_PRIMARY_ITEMS,\n\t\tfalse\n\t);\n};\n\nconst HAS_USERNAME = (build: BuildInterface) => {\n\tif (build.username) {\n\t\treturn BuildValidationHelper.resultHandler(null, true);\n\t}\n\n\treturn BuildValidationHelper.resultHandler(Message.ERROR.NO_USERNAME, false);\n};\n\nconst IS_VALID_BUILD_TITLE = (build: BuildInterface) => {\n\tconst { buildTitle } = build;\n\n\tconst isTypeString = BuildValidationHelper.isValidString(buildTitle);\n\tconst isValidLength =\n\t\tbuildTitle.length >= RequiredLength.BUILD_TITLE.MIN_LENGTH &&\n\t\tbuildTitle.length <= RequiredLength.BUILD_TITLE.MAX_LENGTH;\n\n\tif (isTypeString && isValidLength) {\n\t\treturn BuildValidationHelper.resultHandler(null, true);\n\t}\n\n\treturn BuildValidationHelper.resultHandler(\n\t\tMessage.ERROR.NOT_VALID_BUILD_TITLE,\n\t\tfalse\n\t);\n};\n\nconst IS_VALID_USERNAME = (build: BuildInterface) => {\n\tconst { username } = build;\n\n\tconst isTypeString = BuildValidationHelper.isValidString(username);\n\tconst isValidLength =\n\t\tusername.length >= RequiredLength.USERNAME.MIN_LENGTH &&\n\t\tusername.length <= RequiredLength.USERNAME.MAX_LENGTH;\n\n\tif (isTypeString && isValidLength) {\n\t\treturn BuildValidationHelper.resultHandler(null, true);\n\t}\n\n\treturn BuildValidationHelper.resultHandler(\n\t\tMessage.ERROR.NOT_VALID_USERNAME,\n\t\tfalse\n\t);\n};\n\nconst IS_VALID_ROLE = (build: BuildInterface, roles: Array<RoleInterface>) => {\n\tconst { buildRole } = build;\n\n\t// Checks if buildRole.id and buildRole.roleName has a corresponding object to roles\n\tconst isValidRole =\n\t\troles.filter((role) => {\n\t\t\treturn JSON.stringify(buildRole) === JSON.stringify(role);\n\t\t}).length === 1;\n\n\tif (isValidRole) {\n\t\treturn BuildValidationHelper.resultHandler(null, true);\n\t}\n\n\treturn BuildValidationHelper.resultHandler(\n\t\tMessage.ERROR.NOT_VALID_ROLE,\n\t\tfalse\n\t);\n};\n\nconst IS_VALID_GAME_MODE = (build: BuildInterface) => {\n\tconst { gameMode } = build;\n\n\tconst isValidGameMode =\n\t\tgameMode === GameMode.NORMAL || gameMode === GameMode.ARAM;\n\tconst isTypeString = BuildValidationHelper.isValidString(gameMode);\n\n\tif (isValidGameMode && isTypeString) {\n\t\treturn BuildValidationHelper.resultHandler(null, true);\n\t}\n\n\treturn BuildValidationHelper.resultHandler(\n\t\tMessage.ERROR.NOT_VALID_GAME_MODE,\n\t\tfalse\n\t);\n};\n\nconst IS_VALID_BUILD_DESCRIPTION = (build: BuildInterface) => {\n\tconst { description } = build;\n\n\tconst isTypeString = BuildValidationHelper.isValidString(description);\n\tconst isValidLength = BuildValidationHelper.isValidReasonLength(description);\n\n\tif (isTypeString && isValidLength) {\n\t\treturn BuildValidationHelper.resultHandler(null, true);\n\t}\n\n\treturn BuildValidationHelper.resultHandler(\n\t\tMessage.ERROR.NOT_VALID_BUILD_DESCRIPTION,\n\t\tfalse\n\t);\n};\n\nconst IS_VALID_CHAMPION = (\n\tbuild: BuildInterface,\n\tchampions: Array<ChampionInterface>\n) => {\n\tconst { champion: buildChampion } = build;\n\n\tconst isValidChampion =\n\t\tchampions.filter((champion) => {\n\t\t\t// Checks if both objects have same properties and corresponding values\n\t\t\t// THE ORDER OF PROPERTIES IS IMPORTANT\n\t\t\t// Source: https://stackoverflow.com/questions/1068834/object-comparison-in-javascript\n\n\t\t\treturn JSON.stringify(buildChampion) === JSON.stringify(champion);\n\t\t}).length === 1;\n\n\tif (isValidChampion) {\n\t\treturn BuildValidationHelper.resultHandler(null, true);\n\t}\n\n\treturn BuildValidationHelper.resultHandler(\n\t\tMessage.ERROR.NOT_VALID_CHAMPION,\n\t\tfalse\n\t);\n};\n\nconst IS_VALID_ITEMS_SELECTED = (\n\tbuild: BuildInterface,\n\titems: Array<ItemInterface>\n) => {\n\tconst { itemsConfirmed } = build;\n\n\t// Checks if every reason property of an item is type string and has valid length\n\tconst validReasonTypeAndLength = itemsConfirmed\n\t\t.map((item: ItemInterface) =>\n\t\t\tBuildValidationHelper.isValidReasonTypeAndLength(item)\n\t\t)\n\t\t.every((boolIsTrue) => boolIsTrue);\n\n\t// Removes \"reason\" and \"type\" property which is defined by user\n\tconst modifiedItemsConfirmed = itemsConfirmed.map((item: ItemInterface) => {\n\t\tconst { reason, type, ...modifiedObject } = item;\n\n\t\treturn modifiedObject;\n\t});\n\n\t// Return items from ITEMSCONFIRMED that are in ITEMS\n\tconst validatedItems = items.filter((item) => {\n\t\t// Check if \"some\" items from MODIFIEDITEMSCONFIRMED are found in ITEMS\n\t\tif (\n\t\t\tmodifiedItemsConfirmed.some(\n\t\t\t\t(buildItem) => JSON.stringify(buildItem) === JSON.stringify(item)\n\t\t\t)\n\t\t) {\n\t\t\treturn item;\n\t\t}\n\t});\n\n\t// Check if valid items' (items that are in ITEMS array) length is\n\t// equal to length of ITEMSCONFIRMED\n\tif (\n\t\tvalidatedItems.length === itemsConfirmed.length &&\n\t\tvalidReasonTypeAndLength\n\t) {\n\t\treturn BuildValidationHelper.resultHandler(null, true);\n\t}\n\n\treturn BuildValidationHelper.resultHandler(\n\t\tMessage.ERROR.NOT_VALID_ITEMS_SELECTED,\n\t\tfalse\n\t);\n};\n\nconst IS_VALID_NUMBER_OF_ITEMS_SELECTED = (build: BuildInterface) => {\n\tconst { itemsConfirmed } = build;\n\n\tconst primaryItems = itemsConfirmed.filter(\n\t\t(item) => item.type === ItemType.PRIMARY\n\t).length;\n\tconst optionalItems = itemsConfirmed.filter(\n\t\t(item) => item.type === ItemType.OPTIONAL\n\t).length;\n\n\tconst isValidPrimaryItemsLength =\n\t\tprimaryItems >= RequiredLength.ITEMS.PRIMARY.MIN_LENGTH &&\n\t\tprimaryItems <= RequiredLength.ITEMS.PRIMARY.MAX_LENGTH;\n\tconst isValidOptionalItemsLength =\n\t\toptionalItems >= RequiredLength.ITEMS.OPTIONAL.MIN_LENGTH &&\n\t\toptionalItems <= RequiredLength.ITEMS.OPTIONAL.MAX_LENGTH;\n\n\tif (isValidPrimaryItemsLength && isValidOptionalItemsLength) {\n\t\treturn BuildValidationHelper.resultHandler(null, true);\n\t}\n\n\treturn BuildValidationHelper.resultHandler(\n\t\tMessage.ERROR.NOT_VALID_NUMBER_OF_ITEMS_SELECTED,\n\t\tfalse\n\t);\n};\n\nconst IS_VALID_RUNES = (build: BuildInterface, runes: Array<RuneInterface>) => {\n\tconst { runes: buildRunes } = build;\n\tconst { keystone, domination, resolve, inspiration } = buildRunes;\n\n\tconst VALID_KEYSTONE =\n\t\trunes.filter((rune) => {\n\t\t\t// Remove reason property from build rune;\n\t\t\tconst { reason, ...keystoneCopy } = keystone;\n\n\t\t\treturn JSON.stringify(rune) === JSON.stringify(keystoneCopy);\n\t\t}).length === 1 &&\n\t\tBuildValidationHelper.isValidReasonTypeAndLength(keystone);\n\n\tconst VALID_DOMINATION =\n\t\trunes.filter((rune) => {\n\t\t\t// Remove reason property from build rune;\n\t\t\tconst { reason, ...dominationCopy } = domination;\n\n\t\t\treturn JSON.stringify(rune) === JSON.stringify(dominationCopy);\n\t\t}).length === 1 &&\n\t\tBuildValidationHelper.isValidReasonTypeAndLength(domination);\n\n\tconst VALID_RESOLVE =\n\t\trunes.filter((rune) => {\n\t\t\t// Remove reason property from build rune;\n\t\t\tconst { reason, ...resolveCopy } = resolve;\n\n\t\t\treturn JSON.stringify(rune) === JSON.stringify(resolveCopy);\n\t\t}).length === 1 &&\n\t\tBuildValidationHelper.isValidReasonTypeAndLength(resolve);\n\n\tconst VALID_INSPIRATION =\n\t\trunes.filter((rune) => {\n\t\t\t// Remove reason property from build rune;\n\t\t\tconst { reason, ...inspirationCopy } = inspiration;\n\n\t\t\treturn JSON.stringify(rune) === JSON.stringify(inspirationCopy);\n\t\t}).length === 1 &&\n\t\tBuildValidationHelper.isValidReasonTypeAndLength(inspiration);\n\n\tif (\n\t\tVALID_KEYSTONE &&\n\t\tVALID_DOMINATION &&\n\t\tVALID_RESOLVE &&\n\t\tVALID_INSPIRATION\n\t) {\n\t\treturn BuildValidationHelper.resultHandler(null, true);\n\t}\n\n\treturn BuildValidationHelper.resultHandler(\n\t\tMessage.ERROR.NOT_VALID_RUNES,\n\t\tfalse\n\t);\n};\n\nconst IS_VALID_SPELLS = (\n\tbuild: BuildInterface,\n\tspells: Array<SpellInterface>\n) => {\n\tconst { spells: buildSpells } = build;\n\tconst { spellOne, spellTwo } = buildSpells;\n\n\tconst VALID_SPELL_ONE =\n\t\tspells.filter((spell) => {\n\t\t\treturn JSON.stringify(spell) === JSON.stringify(spellOne);\n\t\t}).length === 1;\n\n\tconst VALID_SPELL_TWO =\n\t\tspells.filter((spell) => {\n\t\t\treturn JSON.stringify(spell) === JSON.stringify(spellTwo);\n\t\t}).length === 1;\n\n\tif (VALID_SPELL_ONE && VALID_SPELL_TWO) {\n\t\treturn BuildValidationHelper.resultHandler(null, true);\n\t}\n\n\treturn BuildValidationHelper.resultHandler(\n\t\tMessage.ERROR.NOT_VALID_SPELLS,\n\t\tfalse\n\t);\n};\n\nconst IS_VALID_RANK = (build: BuildInterface, ranks: Array<RankInterface>) => {\n\tconst { rank: buildRank } = build;\n\n\tconst isValidRank =\n\t\tranks.filter((rank) => {\n\t\t\treturn JSON.stringify(rank) === JSON.stringify(buildRank);\n\t\t}).length === 1;\n\n\tif (isValidRank) {\n\t\treturn BuildValidationHelper.resultHandler(null, true);\n\t}\n\n\treturn BuildValidationHelper.resultHandler(\n\t\tMessage.ERROR.NOT_VALID_RANK,\n\t\tfalse\n\t);\n};\n\nconst IS_VALID_REGION = (build: BuildInterface) => {\n\tconst { region } = build;\n\n\tconst isValidRegion =\n\t\tregion === GameRegion.SEA ||\n\t\tregion === GameRegion.NA ||\n\t\tregion === GameRegion.EUW;\n\tconst isTypeString = BuildValidationHelper.isValidString(region);\n\n\tif (isValidRegion && isTypeString) {\n\t\treturn BuildValidationHelper.resultHandler(null, true);\n\t}\n\n\treturn BuildValidationHelper.resultHandler(\n\t\tMessage.ERROR.NOT_VALID_REGION,\n\t\tfalse\n\t);\n};\n\nexport const BuildValidation = {\n\tHAS_BUILD_TITLE,\n\tHAS_ITEMS_SELECTED,\n\tHAS_THREE_TO_SIX_PRIMARY_ITEMS,\n\tHAS_USERNAME,\n\tIS_VALID_BUILD_TITLE,\n\tIS_VALID_USERNAME,\n\tIS_VALID_ROLE,\n\tIS_VALID_GAME_MODE,\n\tIS_VALID_BUILD_DESCRIPTION,\n\tIS_VALID_CHAMPION,\n\tIS_VALID_ITEMS_SELECTED,\n\tIS_VALID_NUMBER_OF_ITEMS_SELECTED,\n\tIS_VALID_RUNES,\n\tIS_VALID_SPELLS,\n\tIS_VALID_RANK,\n\tIS_VALID_REGION,\n};\n","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\shared\\utils\\buildValidationHelpers.ts",["369"],"import {\n\tChampionInterface,\n\tItemInterface,\n\tRankInterface,\n\tRoleInterface,\n\tRuneInterface,\n\tSpellInterface,\n} from '../interfaces/GameData';\nimport { BuildInterface } from '../interfaces/Build';\nimport { ValidationResult } from '../interfaces/interfaces';\nimport { BuildValidation } from './buildValidation';\nimport { RequiredLength } from '../constants/requiredLength';\n\n// resultHandler is the object that gets returned for each validation\n// and the value of CreateBuild.tsx's isValidBuild variable\nconst resultHandler = (message: string | null, result: boolean) => {\n\treturn {\n\t\tmessage,\n\t\tresult,\n\t};\n};\n\nconst trimString = (text: string) => {\n\treturn text.trim();\n};\n\nconst turnToString = (text: string) => {\n\treturn String(text);\n};\n\nconst isValidString = (text: string) => {\n\treturn typeof text === 'string';\n};\n\nconst isValidReasonLength = (text: string) => {\n\treturn (\n\t\ttext.length >= RequiredLength.REASON.MIN_LENGTH &&\n\t\ttext.length <= RequiredLength.REASON.MAX_LENGTH\n\t);\n};\n\nconst isValidReasonTypeAndLength = (\n\tobjectToCheck: RuneInterface | ItemInterface\n) => {\n\tconst { reason } = objectToCheck;\n\n\t// If there's a reason property, check if it's the right type\n\t// and right length\n\t// This will always return true if it doesn't fail any of the\n\t// two conditions\n\tif (reason) {\n\t\tconst isValidType = isValidString(reason);\n\t\tconst isValidLength = isValidReasonLength(reason);\n\n\t\tif (!(isValidType && isValidLength)) return false;\n\t}\n\n\treturn true;\n};\n\n// Find all validations that returned false\n// Return first validation that failed, hence [0]\nconst findFailedValidation = (\n\tvalidationsCollection: Array<ValidationResult>\n) => {\n\treturn validationsCollection.filter((validation) => {\n\t\tconst { result } = validation;\n\n\t\tif (result === false) {\n\t\t\treturn validation;\n\t\t}\n\t})[0];\n};\n\nconst checkAllValidationsAreValid = (\n\tvalidationsCollection: Array<ValidationResult>\n) => {\n\treturn validationsCollection.every((validation: ValidationResult) => {\n\t\tconst { result } = validation;\n\n\t\treturn result === true;\n\t});\n};\n\n// Applies toString() and trim() to each text input\nconst sanitizeBuildTextInputs = (build: BuildInterface) => {\n\tconst { buildTitle, description, username, itemsConfirmed } = build;\n\n\t// run turnToString() on each item reason property, if it's defined\n\tconst sanitizeItemReasons = itemsConfirmed.map((item: ItemInterface) => {\n\t\tconst { reason } = item;\n\n\t\tif (reason) {\n\t\t\treturn {\n\t\t\t\t...item,\n\t\t\t\treason: turnToString(trimString(reason)),\n\t\t\t};\n\t\t}\n\n\t\t// return item if there's no reason property\n\t\treturn item;\n\t});\n\n\treturn {\n\t\t...build,\n\t\tbuildTitle: turnToString(trimString(buildTitle)),\n\t\tdescription: turnToString(trimString(description)),\n\t\tusername: turnToString(trimString(username)),\n\t\titemsConfirmed: sanitizeItemReasons,\n\t};\n};\n\n// Validations for each step\nconst validateStep = (\n\tactiveStep: number,\n\tcompleteBuild: BuildInterface,\n\tchampions: Array<ChampionInterface>,\n\titems: Array<ItemInterface>,\n\trunes: Array<RuneInterface>,\n\tspells: Array<SpellInterface>,\n\troles: Array<RoleInterface>\n) => {\n\tlet allValidationsAreValid = false;\n\tlet validationsCollection: Array<ValidationResult> = [];\n\n\tif (activeStep === 0) {\n\t\tconst HAS_BUILD_TITLE = BuildValidation.HAS_BUILD_TITLE(completeBuild);\n\t\tconst IS_VALID_BUILD_TITLE = BuildValidation.IS_VALID_BUILD_TITLE(\n\t\t\tcompleteBuild\n\t\t);\n\t\tconst IS_VALID_ROLE = BuildValidation.IS_VALID_ROLE(completeBuild, roles);\n\t\tconst IS_VALID_GAME_MODE = BuildValidation.IS_VALID_GAME_MODE(\n\t\t\tcompleteBuild\n\t\t);\n\t\tconst IS_VALID_BUILD_DESCRIPTION = BuildValidation.IS_VALID_BUILD_DESCRIPTION(\n\t\t\tcompleteBuild\n\t\t);\n\n\t\tvalidationsCollection = [\n\t\t\tHAS_BUILD_TITLE,\n\t\t\tIS_VALID_BUILD_TITLE,\n\t\t\tIS_VALID_ROLE,\n\t\t\tIS_VALID_GAME_MODE,\n\t\t\tIS_VALID_BUILD_DESCRIPTION,\n\t\t];\n\n\t\tallValidationsAreValid = checkAllValidationsAreValid(validationsCollection);\n\t} else if (activeStep === 1) {\n\t\tconst IS_VALID_CHAMPION = BuildValidation.IS_VALID_CHAMPION(\n\t\t\tcompleteBuild,\n\t\t\tchampions\n\t\t);\n\t\tconst HAS_ITEMS_SELECTED = BuildValidation.HAS_ITEMS_SELECTED(\n\t\t\tcompleteBuild\n\t\t);\n\t\tconst HAS_THREE_TO_SIX_PRIMARY_ITEMS = BuildValidation.HAS_THREE_TO_SIX_PRIMARY_ITEMS(\n\t\t\tcompleteBuild\n\t\t);\n\t\tconst IS_VALID_ITEMS_SELECTED = BuildValidation.IS_VALID_ITEMS_SELECTED(\n\t\t\tcompleteBuild,\n\t\t\titems\n\t\t);\n\t\tconst IS_VALID_NUMBER_OF_ITEMS_SELECTED = BuildValidation.IS_VALID_NUMBER_OF_ITEMS_SELECTED(\n\t\t\tcompleteBuild\n\t\t);\n\t\tconst IS_VALID_RUNES = BuildValidation.IS_VALID_RUNES(completeBuild, runes);\n\t\tconst IS_VALID_SPELLS = BuildValidation.IS_VALID_SPELLS(\n\t\t\tcompleteBuild,\n\t\t\tspells\n\t\t);\n\n\t\tvalidationsCollection = [\n\t\t\tIS_VALID_CHAMPION,\n\t\t\tHAS_ITEMS_SELECTED,\n\t\t\tHAS_THREE_TO_SIX_PRIMARY_ITEMS,\n\t\t\tIS_VALID_ITEMS_SELECTED,\n\t\t\tIS_VALID_NUMBER_OF_ITEMS_SELECTED,\n\t\t\tIS_VALID_RUNES,\n\t\t\tIS_VALID_SPELLS,\n\t\t];\n\n\t\tallValidationsAreValid = checkAllValidationsAreValid(validationsCollection);\n\t}\n\n\tif (allValidationsAreValid) {\n\t\treturn resultHandler(null, true);\n\t}\n\n\t// Find all validations that returned false\n\t// Return first validation that failed, hence [0]\n\tconst invalidValidation = findFailedValidation(validationsCollection);\n\n\treturn resultHandler(invalidValidation.message, false);\n};\n\n// For FINAL validation\nconst validateBuild = (\n\tcompleteBuild: BuildInterface,\n\tchampions: Array<ChampionInterface>,\n\titems: Array<ItemInterface>,\n\trunes: Array<RuneInterface>,\n\tspells: Array<SpellInterface>,\n\tranks: Array<RankInterface>,\n\troles: Array<RoleInterface>\n) => {\n\tconst HAS_BUILD_TITLE = BuildValidation.HAS_BUILD_TITLE(completeBuild);\n\tconst IS_VALID_BUILD_TITLE = BuildValidation.IS_VALID_BUILD_TITLE(\n\t\tcompleteBuild\n\t);\n\tconst HAS_ITEMS_SELECTED = BuildValidation.HAS_ITEMS_SELECTED(completeBuild);\n\tconst HAS_THREE_TO_SIX_PRIMARY_ITEMS = BuildValidation.HAS_THREE_TO_SIX_PRIMARY_ITEMS(\n\t\tcompleteBuild\n\t);\n\tconst HAS_USERNAME = BuildValidation.HAS_USERNAME(completeBuild);\n\tconst IS_VALID_USERNAME = BuildValidation.IS_VALID_USERNAME(completeBuild);\n\tconst IS_VALID_ROLE = BuildValidation.IS_VALID_ROLE(completeBuild, roles);\n\tconst IS_VALID_GAME_MODE = BuildValidation.IS_VALID_GAME_MODE(completeBuild);\n\tconst IS_VALID_BUILD_DESCRIPTION = BuildValidation.IS_VALID_BUILD_DESCRIPTION(\n\t\tcompleteBuild\n\t);\n\tconst IS_VALID_CHAMPION = BuildValidation.IS_VALID_CHAMPION(\n\t\tcompleteBuild,\n\t\tchampions\n\t);\n\tconst IS_VALID_ITEMS_SELECTED = BuildValidation.IS_VALID_ITEMS_SELECTED(\n\t\tcompleteBuild,\n\t\titems\n\t);\n\tconst IS_VALID_RUNES = BuildValidation.IS_VALID_RUNES(completeBuild, runes);\n\tconst IS_VALID_SPELLS = BuildValidation.IS_VALID_SPELLS(\n\t\tcompleteBuild,\n\t\tspells\n\t);\n\tconst IS_VALID_RANK = BuildValidation.IS_VALID_RANK(completeBuild, ranks);\n\tconst IS_VALID_NUMBER_OF_ITEMS_SELECTED = BuildValidation.IS_VALID_NUMBER_OF_ITEMS_SELECTED(\n\t\tcompleteBuild\n\t);\n\tconst IS_VALID_REGION = BuildValidation.IS_VALID_REGION(completeBuild);\n\n\tconst validationsCollection = [\n\t\tHAS_BUILD_TITLE,\n\t\tIS_VALID_BUILD_TITLE,\n\t\tHAS_ITEMS_SELECTED,\n\t\tHAS_THREE_TO_SIX_PRIMARY_ITEMS,\n\t\tHAS_USERNAME,\n\t\tIS_VALID_USERNAME,\n\t\tIS_VALID_ROLE,\n\t\tIS_VALID_GAME_MODE,\n\t\tIS_VALID_BUILD_DESCRIPTION,\n\t\tIS_VALID_CHAMPION,\n\t\tIS_VALID_ITEMS_SELECTED,\n\t\tIS_VALID_RUNES,\n\t\tIS_VALID_SPELLS,\n\t\tIS_VALID_RANK,\n\t\tIS_VALID_NUMBER_OF_ITEMS_SELECTED,\n\t\tIS_VALID_REGION,\n\t];\n\n\tconst allValidationsAreValid = checkAllValidationsAreValid(\n\t\tvalidationsCollection\n\t);\n\n\tif (allValidationsAreValid) {\n\t\treturn {\n\t\t\tmessage: null,\n\t\t\tresult: true,\n\t\t};\n\t}\n\n\treturn findFailedValidation(validationsCollection);\n};\n\nexport const BuildValidationHelper = {\n\tresultHandler,\n\tvalidateBuild,\n\tvalidateStep,\n\tfindFailedValidation,\n\tcheckAllValidationsAreValid,\n\tsanitizeBuildTextInputs,\n\tisValidReasonTypeAndLength,\n\tisValidString,\n\tisValidReasonLength,\n};\n","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\shared\\components\\PageLayout\\Layout.tsx",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\shared\\components\\AlertPopup\\AlertPopup.tsx",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\FAQPage\\index.tsx",["370"],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\AboutPage\\index.tsx",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\ChampionBuildsPage\\index.tsx",["371"],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\LandingPage\\index.tsx",["372","373","374","375"],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\PlayerBuildPage\\index.tsx",["376","377"],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\PrivacyPolicyPage\\index.tsx",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\index.tsx",["378","379","380"],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\ChampionBuildsPage\\Header\\index.tsx",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\FAQPage\\Accordion\\index.tsx",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\LandingPage\\ChampionsList\\index.tsx",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\ChampionBuildsPage\\BuildsList\\index.tsx",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\LandingPage\\FilterChampions\\index.tsx",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\PlayerBuildPage\\PlayerBuildFooter\\index.tsx",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\Header\\index.tsx",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\PlayerInformation\\index.tsx",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\BuildInformation\\index.tsx",["381"],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\Stepper\\index.tsx",["382"],"import React from 'react';\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\n\n// MaterialUI\nimport Box from '@material-ui/core/Box';\n\n// Components\nimport ReCaptcha from '../ReCaptcha';\nimport StepperButtons from './StepperButtons';\n\n// CSS\nimport globalstyles from '../../Styles.module.css';\n\n// Types\ntype StepperProps = {\n\tactiveStep: number;\n\tcomponentToDisplay: React.ReactNode;\n\topenRecaptcha: boolean;\n\tresetCaptcha: () => void;\n\tsetActiveStep: (step: any) => void;\n\tsubmitBuild: () => void;\n\tvalidateStep: () => boolean;\n};\n\nconst useStyles = makeStyles((theme: Theme) =>\n\tcreateStyles({\n\t\troot: {\n\t\t\twidth: '100%',\n\t\t},\n\t})\n);\n\nconst getSteps = () => {\n\treturn ['Build Information', 'Create Build', 'Player Information'];\n};\n\nconst HorizontalLabelPositionBelowStepper = (props: StepperProps) => {\n\tconst {\n\t\tactiveStep,\n\t\tcomponentToDisplay,\n\t\tsetActiveStep,\n\t\tsubmitBuild,\n\t\tvalidateStep,\n\t} = props;\n\tconst { openRecaptcha, resetCaptcha } = props;\n\tconst classes = useStyles();\n\n\t// ===== Stepper ===== //\n\tconst steps = getSteps();\n\n\tconst handleNext = () => {\n\t\tconst stepIsValid = validateStep();\n\n\t\tif (stepIsValid) {\n\t\t\tsetActiveStep((prevActiveStep: number) => prevActiveStep + 1);\n\t\t} else {\n\t\t\treturn;\n\t\t}\n\t};\n\tconst handleBack = () => {\n\t\tsetActiveStep((prevActiveStep: number) => prevActiveStep - 1);\n\t};\n\n\treturn (\n\t\t<div className={classes.root}>\n\t\t\t{/* Build Components */}\n\t\t\t<Box style={{ padding: '10px 0' }}>{componentToDisplay}</Box>\n\t\t\t{/* ReCAPTCHA */}\n\t\t\t<Box display='flex' flexDirection='row-reverse'>\n\t\t\t\t{openRecaptcha && activeStep === steps.length - 1 ? (\n\t\t\t\t\t<ReCaptcha resetCaptcha={resetCaptcha} />\n\t\t\t\t) : null}\n\t\t\t</Box>\n\t\t\t{/* Buttons */}\n\t\t\t<Box display='flex' flexDirection='row-reverse'>\n\t\t\t\t<StepperButtons\n\t\t\t\t\tactiveStep={activeStep}\n\t\t\t\t\tsubmitBuild={submitBuild}\n\t\t\t\t\thandleNext={handleNext}\n\t\t\t\t\thandleBack={handleBack}\n\t\t\t\t\tsteps={steps}\n\t\t\t\t/>\n\t\t\t</Box>\n\t\t</div>\n\t);\n};\n\nexport default HorizontalLabelPositionBelowStepper;\n","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\PlayerBuildPage\\PlayerBuildHeader\\index.tsx",["383","384"],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\PlayerBuildPage\\Spellitem\\index.tsx",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\PlayerBuildPage\\SectionDivider\\index.tsx",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\PlayerBuildPage\\RuneItem\\index.tsx",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\PlayerBuildPage\\BuildDescription\\index.tsx",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\PlayerBuildPage\\BuildItem\\index.tsx",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\ChampionBuildsPage\\Header\\Counters\\index.tsx",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\ChampionBuildsPage\\Header\\Lanes\\index.tsx",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\PlayerBuildPage\\PlayerBuildFooter\\CopyBuildLink\\index.tsx",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\PlayerBuildPage\\PlayerBuildFooter\\ViewMoreBuilds\\index.tsx",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\PlayerInformation\\PlayerRegion\\index.tsx",["385"],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\Stepper\\StepperButtons\\index.tsx",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\ReCaptcha\\index.tsx",["386"],"import React, { useEffect, useRef, RefObject } from 'react';\nimport { ReCaptcha } from '../../../../shared/config/config';\nimport ReCAPTCHA from 'react-google-recaptcha';\n\n// Redux\nimport { connect, ConnectedProps } from 'react-redux';\nimport actionTypes from '../../../../store/actions';\n\nconst ReCaptchaComponent = (props: ReCaptchaComponentProps) => {\n\tconst { resetCaptcha } = props;\n\t// RECAPTCHA Props\n\tconst { setRecaptchRef, setRecaptchaToken } = props;\n\n\t// ===== ReCaptcha ===== //\n\tlet ref = useRef<ReCAPTCHA | null>(null);\n\n\tconst recaptchaHandleChange = (value: string | null) => {\n\t\tsetRecaptchaToken(value);\n\t};\n\n\tuseEffect(() => {\n\t\tsetRecaptchRef(ref);\n\t}, []);\n\n\treturn (\n\t\t<ReCAPTCHA\n\t\t\tref={(r) => (ref.current = r)}\n\t\t\tsitekey={ReCaptcha.PUBLIC_KEY!} // Always has a value hence !\n\t\t\tonChange={recaptchaHandleChange}\n\t\t\tonExpired={() => resetCaptcha()}\n\t\t/>\n\t);\n};\n\nconst mapDispatchToProps = (dispatch: any) => {\n\treturn {\n\t\tsetRecaptchRef: (recaptchaRef: RefObject<ReCAPTCHA | null>) =>\n\t\t\tdispatch({\n\t\t\t\ttype: actionTypes.RECAPTCHA_SET_REF,\n\t\t\t\tdata: recaptchaRef,\n\t\t\t}),\n\t\tsetRecaptchaToken: (recaptchaToken: string | null) =>\n\t\t\tdispatch({\n\t\t\t\ttype: actionTypes.RECAPTCHA_SET_TOKEN,\n\t\t\t\tdata: recaptchaToken,\n\t\t\t}),\n\t};\n};\n\nconst connector = connect(null, mapDispatchToProps);\n\ntype PropsFromRedux = ConnectedProps<typeof connector> & {\n\tresetCaptcha: () => void;\n};\n\ntype ReCaptchaComponentProps = PropsFromRedux;\n\nexport default connector(ReCaptchaComponent);\n","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\PlayerBuildPage\\PlayerBuildHeader\\BuildChip\\index.tsx",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\PlayerInformation\\PlayerRank\\index.tsx",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\PlayerInformation\\PlayerUsername\\index.tsx",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\ChampionBuildsPage\\BuildsList\\NoBuilds\\index.tsx",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\ChampionBuildsPage\\BuildsList\\BuildBox\\index.tsx",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\ChampionBuildsPage\\BuildsList\\BuildBox\\BuildItem\\index.tsx",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\ChampionBuildsPage\\BuildsList\\BuildBox\\BuildRankUser\\index.tsx",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\ChampionBuildsPage\\BuildsList\\BuildBox\\BuildDate\\index.tsx",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\ChampionBuildsPage\\BuildsList\\BuildBox\\BuildRune\\index.tsx",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\ChampionBuildsPage\\BuildsList\\BuildBox\\BuildSpell\\index.tsx",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\BuildInformation\\SpellsSelect\\index.tsx",["387","388"],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\BuildInformation\\ChampionSelect\\index.tsx",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\BuildInformation\\ItemsSelect\\index.tsx",["389"],"import React, { useState } from 'react';\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\n\n// Redux\nimport { connect, ConnectedProps } from 'react-redux';\nimport actionTypes from '../../../../../shared/store/actions';\n\n// Shared\nimport { ImagePath } from '../../../../../shared/utils/imagePath';\nimport {\n\tItemType,\n\tItemStatus,\n} from '../../../../../shared/constants/constants';\nimport { DefaultSelectedState } from '../../../../../shared/constants/defaultSelectedState';\nimport { RequiredLength } from '../../../../../shared/constants/requiredLength';\n\n// MaterialUI\nimport Box from '@material-ui/core/Box';\nimport Button from '@material-ui/core/Button';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Grid from '@material-ui/core/Grid';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\n\n// Components\nimport ItemsSelected from '../ItemsSelected';\n\n// CSS\nimport globalstyles from '../../Styles.module.css';\nimport styles from './Styles.module.css';\n\n// Types\nimport { ItemInterface } from '../../../../../shared/interfaces/GameData';\nimport { RootState } from '../../../../../shared/interfaces/GlobalStore';\n\nconst ItemsSelect = (props: ItemsSelectProps) => {\n\t// Game Data PROPS\n\tconst { items } = props;\n\t// Build PROPS\n\tconst { itemsConfirmed, setItemsConfirmed } = props;\n\n\tconst [itemSelected, setItemSelected] = useState<ItemInterface>(\n\t\t// Defaults to Item: 'Abyssal Mask' which is the first option\n\t\tDefaultSelectedState.ITEM\n\t);\n\tconst [itemType, setItemType] = useState(ItemType.PRIMARY);\n\tconst [itemReason, setItemReason] = useState('');\n\n\tconst handleItemSelectChange = (e: React.ChangeEvent<HTMLSelectElement>) => {\n\t\tconst { value: itemId } = e.target;\n\n\t\tconst getItem = items.find((item: ItemInterface) => item.id === itemId);\n\n\t\tif (getItem) {\n\t\t\tsetItemSelected(getItem);\n\t\t}\n\t};\n\n\tconst handleItemTypeChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n\t\tsetItemType(e.target.value);\n\t};\n\n\tconst handleItemExplanationChange = (\n\t\te: React.ChangeEvent<HTMLTextAreaElement>\n\t) => {\n\t\tsetItemReason(e.target.value);\n\t};\n\n\tconst handleDeleteItemClick = (itemId: string) => {\n\t\tconst filteredItems = itemsConfirmed.filter(\n\t\t\t(item: ItemInterface) => item.id !== itemId\n\t\t);\n\n\t\tif (filteredItems) {\n\t\t\tsetItemsConfirmed(filteredItems);\n\t\t}\n\t};\n\n\tconst handleAddItemClick = () => {\n\t\t// Pushes item to itemsConfirmed Array\n\t\tsetItemsConfirmed([\n\t\t\t...itemsConfirmed,\n\t\t\t{ ...itemSelected, type: itemType, reason: itemReason },\n\t\t]);\n\t\tsetItemReason('');\n\t};\n\n\treturn (\n\t\t<Box>\n\t\t\t<p className={globalstyles.inputLabel}>\n\t\t\t\t6. Items <span className={globalstyles.requiredInput}>*</span>\n\t\t\t</p>\n\t\t\t<p className={globalstyles.inputDescription}>\n\t\t\t\tSelect the items for your build&nbsp;\n\t\t\t</p>\n\n\t\t\t<Box>\n\t\t\t\t<Grid container spacing={3}>\n\t\t\t\t\t<Grid item xs={12} sm={6}>\n\t\t\t\t\t\t<Box>\n\t\t\t\t\t\t\t{/* ITEM IMAGE */}\n\t\t\t\t\t\t\t<LazyLoadImage\n\t\t\t\t\t\t\t\tsrc={ImagePath.Item(itemSelected.id)}\n\t\t\t\t\t\t\t\tclassName={styles.itemImage}\n\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t{/* <SELECT> */}\n\t\t\t\t\t\t\t<select\n\t\t\t\t\t\t\t\tonChange={handleItemSelectChange}\n\t\t\t\t\t\t\t\tclassName={globalstyles.buildSelectInput}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{items.map((item: ItemInterface, index: number) => {\n\t\t\t\t\t\t\t\t\tconst { id: itemId, itemName, status } = item;\n\n\t\t\t\t\t\t\t\t\tif (status !== ItemStatus.REMOVED) {\n\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t<option\n\t\t\t\t\t\t\t\t\t\t\t\tkey={index}\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={itemId}\n\t\t\t\t\t\t\t\t\t\t\t\tclassName={globalstyles.buildSelectOption}\n\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t{itemName}\n\t\t\t\t\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t</select>\n\n\t\t\t\t\t\t\t{/* ITEM TYPE */}\n\t\t\t\t\t\t\t<Box>\n\t\t\t\t\t\t\t\t<RadioGroup\n\t\t\t\t\t\t\t\t\trow\n\t\t\t\t\t\t\t\t\tname='position'\n\t\t\t\t\t\t\t\t\tdefaultValue={ItemType.PRIMARY}\n\t\t\t\t\t\t\t\t\tclassName={styles.radioGroup}\n\t\t\t\t\t\t\t\t\tonChange={handleItemTypeChange}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<FormControlLabel\n\t\t\t\t\t\t\t\t\t\tvalue={ItemType.PRIMARY}\n\t\t\t\t\t\t\t\t\t\tcontrol={<Radio color='primary' />}\n\t\t\t\t\t\t\t\t\t\tlabel='Primary'\n\t\t\t\t\t\t\t\t\t\tlabelPlacement='end'\n\t\t\t\t\t\t\t\t\t\tclassName={styles.radioButtonContainer}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<FormControlLabel\n\t\t\t\t\t\t\t\t\t\tvalue={ItemType.OPTIONAL}\n\t\t\t\t\t\t\t\t\t\tcontrol={<Radio color='primary' />}\n\t\t\t\t\t\t\t\t\t\tlabel='Optional'\n\t\t\t\t\t\t\t\t\t\tlabelPlacement='end'\n\t\t\t\t\t\t\t\t\t\tclassName={styles.radioButtonContainer}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</RadioGroup>\n\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t</Box>\n\t\t\t\t\t</Grid>\n\n\t\t\t\t\t{/* Item Explanation */}\n\t\t\t\t\t<Grid item xs={12} sm={6}>\n\t\t\t\t\t\t<Box>\n\t\t\t\t\t\t\t<textarea\n\t\t\t\t\t\t\t\tid='itemReason'\n\t\t\t\t\t\t\t\tname='itemReason'\n\t\t\t\t\t\t\t\trows={5}\n\t\t\t\t\t\t\t\tvalue={itemReason}\n\t\t\t\t\t\t\t\tplaceholder='Explanation'\n\t\t\t\t\t\t\t\tclassName={`${styles.explanationTextArea} text-white-disabled`}\n\t\t\t\t\t\t\t\tmaxLength={RequiredLength.REASON.MAX_LENGTH}\n\t\t\t\t\t\t\t\tonChange={(e) => handleItemExplanationChange(e)}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<Box\n\t\t\t\t\t\t\t\tdisplay='flex'\n\t\t\t\t\t\t\t\tflexDirection='row-reverse'\n\t\t\t\t\t\t\t\tclassName={styles.addItemButtonContainer}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\tvariant='contained'\n\t\t\t\t\t\t\t\t\tstyle={{ backgroundColor: '#326cac' }}\n\t\t\t\t\t\t\t\t\tonClick={handleAddItemClick}\n\t\t\t\t\t\t\t\t\tclassName={styles.addItemButton}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tAdd Item\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t</Box>\n\t\t\t\t\t</Grid>\n\n\t\t\t\t\t{/* Items List */}\n\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t<ItemsSelected handleDeleteItemClick={handleDeleteItemClick} />\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\t\t\t</Box>\n\t\t</Box>\n\t);\n};\n\nconst mapStateToProps = (state: RootState) => {\n\treturn {\n\t\titemsConfirmed: state.build.itemsConfirmed,\n\t\titems: state.gameData.items,\n\t};\n};\n\nconst mapDispatchToProps = (dispatch: any) => {\n\treturn {\n\t\tsetItemsConfirmed: (items: Array<ItemInterface>) =>\n\t\t\tdispatch({ type: actionTypes.BUILD_SET_ITEMSCONFIRMED, data: items }),\n\t};\n};\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\n\ntype PropsFromRedux = ConnectedProps<typeof connector>;\n\ntype ItemsSelectProps = PropsFromRedux;\n\nexport default connector(ItemsSelect);\n","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\BuildInformation\\RunesSelect\\index.tsx",["390"],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\BuildInformation\\SpellsSelect\\Spell\\index.tsx",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\BuildInformation\\RunesSelect\\components\\Inspiration.tsx",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\BuildInformation\\RunesSelect\\components\\Keystone.tsx",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\BuildInformation\\RunesSelect\\components\\Resolve.tsx",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\BuildInformation\\RunesSelect\\components\\Domination.tsx",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\BuildInformation\\ItemsSelected\\index.tsx",["391"],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\BuildInformation\\ItemsSelected\\BuildItem\\index.tsx",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\App\\Routes.tsx",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\GeneralInformation\\index.tsx",["392"],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\GeneralInformation\\BuildRole\\index.tsx",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\GeneralInformation\\BuildTitle\\index.tsx",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\GeneralInformation\\BuildGameMode\\index.tsx",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\GeneralInformation\\BuildDescription\\index.tsx",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\shared\\store\\reducers\\build.ts",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\shared\\store\\reducers\\gameData.ts",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\shared\\store\\reducers\\reCaptcha.ts",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\shared\\store\\reducers\\snackbarControls.ts",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\shared\\store\\actions.ts",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\shared\\store\\index.ts",["393"],"// Redux\nimport { createStore, combineReducers } from 'redux';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\n\nimport buildReducer from './reducers/build';\nimport gameDataReducer from './reducers/gameData';\nimport recaptchaReducer from './reducers/reCaptcha';\nimport snackbarControlsReducer from './reducers/snackbarControls';\n\nconst persistConfig = {\n\tkey: 'root',\n\tstorage: storage,\n};\n\nconst rootReducer = combineReducers({\n\tbuild: buildReducer,\n\tgameData: gameDataReducer,\n\trecaptcha: recaptchaReducer,\n\tsnackbarControls: snackbarControlsReducer,\n});\n\nconst pReducer = persistReducer(persistConfig, rootReducer);\n\nconst store = createStore(rootReducer);\n\nconst persistor = persistStore(store);\n\nexport { store, persistor };\n","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\shared\\components\\Header\\AppBar\\AppBar.tsx",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\shared\\utils\\imagePath.ts",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\shared\\utils\\championNameToUrlString.ts",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\shared\\utils\\sessionStorage.ts",[],{"ruleId":"394","severity":1,"message":"395","line":5,"column":10,"nodeType":"396","messageId":"397","endLine":5,"endColumn":21},{"ruleId":"394","severity":1,"message":"398","line":7,"column":17,"nodeType":"396","messageId":"397","endLine":7,"endColumn":26},{"ruleId":"399","replacedBy":"400"},{"ruleId":"401","replacedBy":"402"},{"ruleId":"403","severity":1,"message":"404","line":159,"column":5,"nodeType":"405","endLine":159,"endColumn":7,"suggestions":"406"},{"ruleId":"407","severity":1,"message":"408","line":198,"column":45,"nodeType":"409","messageId":"410","endLine":198,"endColumn":47},{"ruleId":"407","severity":1,"message":"408","line":66,"column":51,"nodeType":"409","messageId":"410","endLine":66,"endColumn":53},{"ruleId":"394","severity":1,"message":"411","line":16,"column":8,"nodeType":"396","messageId":"397","endLine":16,"endColumn":14},{"ruleId":"403","severity":1,"message":"412","line":113,"column":5,"nodeType":"405","endLine":113,"endColumn":7,"suggestions":"413"},{"ruleId":"394","severity":1,"message":"411","line":18,"column":8,"nodeType":"396","messageId":"397","endLine":18,"endColumn":14},{"ruleId":"407","severity":1,"message":"408","line":48,"column":70,"nodeType":"409","messageId":"410","endLine":48,"endColumn":72},{"ruleId":"403","severity":1,"message":"414","line":67,"column":5,"nodeType":"405","endLine":67,"endColumn":17,"suggestions":"415"},{"ruleId":"403","severity":1,"message":"414","line":78,"column":5,"nodeType":"405","endLine":78,"endColumn":21,"suggestions":"416"},{"ruleId":"394","severity":1,"message":"411","line":33,"column":8,"nodeType":"396","messageId":"397","endLine":33,"endColumn":14},{"ruleId":"403","severity":1,"message":"417","line":75,"column":5,"nodeType":"405","endLine":75,"endColumn":7,"suggestions":"418"},{"ruleId":"394","severity":1,"message":"411","line":33,"column":8,"nodeType":"396","messageId":"397","endLine":33,"endColumn":14},{"ruleId":"394","severity":1,"message":"419","line":138,"column":10,"nodeType":"396","messageId":"397","endLine":138,"endColumn":24},{"ruleId":"403","severity":1,"message":"420","line":220,"column":5,"nodeType":"405","endLine":220,"endColumn":7,"suggestions":"421"},{"ruleId":"394","severity":1,"message":"411","line":14,"column":8,"nodeType":"396","messageId":"397","endLine":14,"endColumn":14},{"ruleId":"394","severity":1,"message":"422","line":12,"column":8,"nodeType":"396","messageId":"397","endLine":12,"endColumn":20},{"ruleId":"394","severity":1,"message":"423","line":39,"column":14,"nodeType":"396","messageId":"397","endLine":39,"endColumn":20},{"ruleId":"394","severity":1,"message":"424","line":39,"column":22,"nodeType":"396","messageId":"397","endLine":39,"endColumn":30},{"ruleId":"394","severity":1,"message":"411","line":20,"column":8,"nodeType":"396","messageId":"397","endLine":20,"endColumn":14},{"ruleId":"403","severity":1,"message":"425","line":23,"column":5,"nodeType":"405","endLine":23,"endColumn":7,"suggestions":"426"},{"ruleId":"394","severity":1,"message":"411","line":23,"column":8,"nodeType":"396","messageId":"397","endLine":23,"endColumn":14},{"ruleId":"407","severity":1,"message":"408","line":62,"column":69,"nodeType":"409","messageId":"410","endLine":62,"endColumn":71},{"ruleId":"407","severity":1,"message":"427","line":112,"column":57,"nodeType":"409","messageId":"410","endLine":112,"endColumn":59},{"ruleId":"394","severity":1,"message":"411","line":22,"column":8,"nodeType":"396","messageId":"397","endLine":22,"endColumn":14},{"ruleId":"403","severity":1,"message":"428","line":94,"column":5,"nodeType":"405","endLine":94,"endColumn":21,"suggestions":"429"},{"ruleId":"394","severity":1,"message":"411","line":14,"column":8,"nodeType":"396","messageId":"397","endLine":14,"endColumn":14},{"ruleId":"394","severity":1,"message":"430","line":23,"column":7,"nodeType":"396","messageId":"397","endLine":23,"endColumn":15},"@typescript-eslint/no-unused-vars","'PersistGate' is defined but never used.","Identifier","unusedVar","'persistor' is defined but never used.","no-native-reassign",["431"],"no-negated-in-lhs",["432"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'setChampions', 'setItems', 'setRanks', 'setRoles', 'setRunes', and 'setSpells'. Either include them or remove the dependency array.","ArrayExpression",["433"],"array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'styles' is defined but never used.","React Hook useEffect has missing dependencies: 'championName', 'getBuildsForChampion', and 'isLoadingPage'. Either include them or remove the dependency array. You can also do a functional update 'setIsLoadingPage(i => ...)' if you only need 'isLoadingPage' in the 'setIsLoadingPage' call.",["434"],"React Hook useEffect has a missing dependency: 'champions'. Either include it or remove the dependency array.",["435"],["436"],"React Hook useEffect has missing dependencies: 'isLoading' and 'match.params.buildId'. Either include them or remove the dependency array. You can also do a functional update 'setIsLoading(i => ...)' if you only need 'isLoading' in the 'setIsLoading' call.",["437"],"'saveToDatabase' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'setChampionSelected'. Either include it or remove the dependency array.",["438"],"'globalstyles' is defined but never used.","'roleId' is assigned a value but never used.","'roleName' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'setRecaptchRef'. Either include it or remove the dependency array.",["439"],"Array.prototype.map() expects a value to be returned at the end of arrow function.","React Hook useEffect has missing dependencies: 'setItemsConfirmed' and 'setSnackbarControls'. Either include them or remove the dependency array.",["440"],"'pReducer' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"441","fix":"442"},{"desc":"443","fix":"444"},{"desc":"445","fix":"446"},{"desc":"447","fix":"448"},{"desc":"449","fix":"450"},{"desc":"451","fix":"452"},{"desc":"453","fix":"454"},{"desc":"455","fix":"456"},"Update the dependencies array to be: [setChampions, setItems, setRanks, setRoles, setRunes, setSpells]",{"range":"457","text":"458"},"Update the dependencies array to be: [championName, getBuildsForChampion, isLoadingPage]",{"range":"459","text":"460"},"Update the dependencies array to be: [champions, roleFilter]",{"range":"461","text":"462"},"Update the dependencies array to be: [championSearch, champions]",{"range":"463","text":"464"},"Update the dependencies array to be: [isLoading, match.params.buildId]",{"range":"465","text":"466"},"Update the dependencies array to be: [setChampionSelected]",{"range":"467","text":"468"},"Update the dependencies array to be: [setRecaptchRef]",{"range":"469","text":"470"},"Update the dependencies array to be: [itemsConfirmed, setItemsConfirmed, setSnackbarControls]",{"range":"471","text":"472"},[3826,3828],"[setChampions, setItems, setRanks, setRoles, setRunes, setSpells]",[3204,3206],"[championName, getBuildsForChampion, isLoadingPage]",[1833,1845],"[champions, roleFilter]",[2145,2161],"[championSearch, champions]",[2063,2065],"[isLoading, match.params.buildId]",[6099,6101],"[setChampionSelected]",[674,676],"[setRecaptchRef]",[2684,2700],"[itemsConfirmed, setItemsConfirmed, setSnackbarControls]"]