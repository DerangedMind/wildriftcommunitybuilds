[{"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\index.tsx":"1","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\reportWebVitals.ts":"2","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\App\\App.tsx":"3","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\components\\Layout.tsx":"4","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\components\\Header\\Header.tsx":"5","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\components\\Footer\\Footer.tsx":"6","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Landing\\Landing.tsx":"7","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Builds\\Builds.tsx":"8","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\CreateBuild.tsx":"9","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\SoloBuild\\SoloBuild.tsx":"10","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\utils\\errorPopups.js":"11"},{"size":505,"mtime":1611338810358,"results":"12","hashOfConfig":"13"},{"size":425,"mtime":499162500000,"results":"14","hashOfConfig":"13"},{"size":876,"mtime":1611831116697,"results":"15","hashOfConfig":"13"},{"size":619,"mtime":1611339072609,"results":"16","hashOfConfig":"13"},{"size":1095,"mtime":1611841390370,"results":"17","hashOfConfig":"13"},{"size":1918,"mtime":1611841293415,"results":"18","hashOfConfig":"13"},{"size":1515,"mtime":1611844500317,"results":"19","hashOfConfig":"13"},{"size":9315,"mtime":1611851487869,"results":"20","hashOfConfig":"13"},{"size":27224,"mtime":1611852977458,"results":"21","hashOfConfig":"13"},{"size":9069,"mtime":1611851448986,"results":"22","hashOfConfig":"13"},{"size":534,"mtime":1611852693227,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"q16prs",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"26"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"26"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"26"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"26"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"26"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"26"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\index.tsx",[],["54","55"],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\reportWebVitals.ts",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\App\\App.tsx",["56","57","58"],"import React, { useState, useEffect } from 'react';\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\n// Components\r\nimport Layout from '../../components/Layout';\r\nimport Landing from '../Landing/Landing';\r\nimport Builds from '../Builds/Builds';\r\nimport CreateBuild from '../Create/Build/CreateBuild';\r\nimport SoloBuild from '../SoloBuild/SoloBuild';\r\n// CSS\r\n// Types\r\n\r\nexport default function App() {\r\n\treturn (\r\n\t\t<div className='App'>\r\n\t\t\t<Layout>\r\n\t\t\t\t<Router>\r\n\t\t\t\t\t<Switch>\r\n\t\t\t\t\t\t<Route exact path='/' render={() => <Landing />} />\r\n\r\n\t\t\t\t\t\t<Route exact path='/builds' render={() => <Builds />} />\r\n\r\n\t\t\t\t\t\t<Route exact path='/create' render={() => <CreateBuild />} />\r\n\r\n\t\t\t\t\t\t<Route exact path='/build/:buildId' render={() => <SoloBuild />} />\r\n\t\t\t\t\t</Switch>\r\n\t\t\t\t</Router>\r\n\t\t\t</Layout>\r\n\t\t</div>\r\n\t);\r\n}\r\n","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\components\\Layout.tsx",["59"],"import React from 'react';\n\n// MaterialUi\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\n// Components\nimport Footer from './Footer/Footer';\nimport Header from './Header/Header';\n// CSS\n// Types\n\nexport default function Layout(props: { children: React.ReactNode }) {\n\tconst { children } = props;\n\n\treturn (\n\t\t<>\n\t\t\t<React.Fragment>\n\t\t\t\t<CssBaseline />\n\t\t\t\t<Container maxWidth='lg'>\n\t\t\t\t\t<Header />\n\n\t\t\t\t\t<section>{children}</section>\n\n\t\t\t\t\t<Footer />\n\t\t\t\t</Container>\n\t\t\t</React.Fragment>\n\t\t</>\n\t);\n}\n","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\components\\Header\\Header.tsx",["60"],"import React from 'react';\n\n// MaterialUI\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\n// Components\n// CSS\n//Types\n\nexport default function Header() {\n\treturn (\n\t\t<>\n\t\t\t<header>\n\t\t\t\t<Grid container style={{ padding: '16px 0' }}>\n\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t<Box>\n\t\t\t\t\t\t\t<Typography\n\t\t\t\t\t\t\t\tvariant='h4'\n\t\t\t\t\t\t\t\tcomponent='a'\n\t\t\t\t\t\t\t\thref='/'\n\t\t\t\t\t\t\t\tstyle={{ color: '#000000', textDecoration: 'none' }}\n\t\t\t\t\t\t\t\tgutterBottom\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tWR:CB\n\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t<Box\n\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\tmarginTop: '8px',\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<Typography component='a' href='/'>\n\t\t\t\t\t\t\t\t\tHome\n\t\t\t\t\t\t\t\t</Typography>{' '}\n\t\t\t\t\t\t\t\t&nbsp;\n\t\t\t\t\t\t\t\t<Typography component='a' href='/builds'>\n\t\t\t\t\t\t\t\t\tView builds\n\t\t\t\t\t\t\t\t</Typography>{' '}\n\t\t\t\t\t\t\t\t&nbsp;\n\t\t\t\t\t\t\t\t<Typography component='a' href='/create'>\n\t\t\t\t\t\t\t\t\tCreate a build\n\t\t\t\t\t\t\t\t</Typography>{' '}\n\t\t\t\t\t\t\t\t&nbsp;\n\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t</Box>\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\t\t\t</header>\n\t\t</>\n\t);\n}\n","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\components\\Footer\\Footer.tsx",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Landing\\Landing.tsx",["61"],"import React from 'react';\r\n\r\n// MaterialUI\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Button from '@material-ui/core/Button';\r\nimport Box from '@material-ui/core/Box';\r\n// Components\r\n// CSS\r\nconst useStyles = makeStyles((theme) => ({\r\n\troot: {\r\n\t\tflexGrow: 1,\r\n\t},\r\n}));\r\n// Types\r\n\r\nexport default function Landing() {\r\n\tconst classes = useStyles();\r\n\r\n\treturn (\r\n\t\t<div className={classes.root}>\r\n\t\t\t<Grid container spacing={3}>\r\n\t\t\t\t<Grid item xs={12} sm={6} style={{ position: 'relative' }}>\r\n\t\t\t\t\t<Box\r\n\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\tmargin: '100px 0',\r\n\t\t\t\t\t\t\tpadding: '5px',\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<Typography\r\n\t\t\t\t\t\t\tvariant='h4'\r\n\t\t\t\t\t\t\tgutterBottom\r\n\t\t\t\t\t\t\tstyle={{ fontWeight: 'bold', margin: '0 0 25px 0' }}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tShowcase your builds\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t<Typography\r\n\t\t\t\t\t\t\tvariant='subtitle1'\r\n\t\t\t\t\t\t\tgutterBottom\r\n\t\t\t\t\t\t\tstyle={{ margin: '0 0 45px 0' }}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tWild Rift Community Builds provides builds by the community to\r\n\t\t\t\t\t\t\tthousands of League of Legends: Wild Rift gamers worldwide.\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t<a href='/create'>\r\n\t\t\t\t\t\t\t<Button variant='contained' color='primary'>\r\n\t\t\t\t\t\t\t\tCreate your build\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</a>\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid item xs={12} sm={6}>\r\n\t\t\t\t\t<img\r\n\t\t\t\t\t\tsrc='/images/yasuo.png'\r\n\t\t\t\t\t\tstyle={{ width: '90%', marginTop: '-20px' }}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Grid>\r\n\t\t\t</Grid>\r\n\t\t</div>\r\n\t);\r\n}\r\n","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Builds\\Builds.tsx",["62","63","64","65","66"],"import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport InfiniteScroll from 'react-infinite-scroll-component';\r\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\r\n\r\n// MaterialUI\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport NativeSelect from '@material-ui/core/NativeSelect';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\ninterface ItemInterface {\r\n\tid: string;\r\n\titemName: string;\r\n\treason?: string;\r\n\ttype: string;\r\n\turl: string;\r\n}\r\n\r\ninterface ChampionInterface {\r\n\tid: string;\r\n\tchampionName: string;\r\n\turl: string;\r\n}\r\n\r\ninterface RankInterface {\r\n\tid: string;\r\n\trankName: string;\r\n\turl: string;\r\n}\r\n\r\ninterface BuildInterface {\r\n\tid: string;\r\n\tusername: string;\r\n\tchampion: ChampionInterface;\r\n\titems: ItemInterface[];\r\n\trank: RankInterface;\r\n}\r\n\r\n// https://flaviocopes.com/typescript-object-destructuring/\r\nlet page = 5;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\troot: {\r\n\t\tflexGrow: 1,\r\n\t\toverflow: 'hidden',\r\n\t},\r\n\tpaper: {\r\n\t\twidth: '100%',\r\n\t\tmargin: `${theme.spacing(1)}px auto`,\r\n\t\tpadding: theme.spacing(2),\r\n\t\tbackgroundColor: '#233248',\r\n\t\tcolor: '#ffffff',\r\n\t},\r\n\tlarge: {\r\n\t\twidth: theme.spacing(7),\r\n\t\theight: theme.spacing(7),\r\n\t},\r\n\tformControl: {\r\n\t\tmargin: theme.spacing(1),\r\n\t\tminWidth: 120,\r\n\t},\r\n}));\r\n\r\nexport default function Builds() {\r\n\tconst [loading, setLoading] = useState(true);\r\n\tconst [builds, setBuilds] = useState<Array<BuildInterface>>([]);\r\n\tconst [champions, setChampions] = useState<Array<ChampionInterface>>([]);\r\n\tconst [championFilter, setChampionFilter] = useState<ChampionInterface>({\r\n\t\tid: '',\r\n\t\tchampionName: '',\r\n\t\turl: '',\r\n\t});\r\n\r\n\tconst classes = useStyles();\r\n\r\n\tuseEffect(() => {\r\n\t\tconst getChampions = axios.get(\r\n\t\t\t'https://wildriftbuilds.herokuapp.com/api/champion/all'\r\n\t\t);\r\n\t\tconst getBuilds = axios.post(\r\n\t\t\t'https://wildriftbuilds.herokuapp.com/api/build/all',\r\n\t\t\t{\r\n\t\t\t\tpage,\r\n\t\t\t}\r\n\t\t);\r\n\r\n\t\tPromise.all([getChampions, getBuilds]).then((values) => {\r\n\t\t\tconst [{ data: championsArray }, { data: buildsArray }] = values;\r\n\r\n\t\t\t// Sort Champions\r\n\t\t\tchampionsArray.sort(function (\r\n\t\t\t\ta: ChampionInterface,\r\n\t\t\t\tb: ChampionInterface\r\n\t\t\t) {\r\n\t\t\t\tif (a.championName < b.championName) {\r\n\t\t\t\t\treturn -1;\r\n\t\t\t\t}\r\n\t\t\t\tif (a.championName > b.championName) {\r\n\t\t\t\t\treturn 1;\r\n\t\t\t\t}\r\n\t\t\t\treturn 0;\r\n\t\t\t});\r\n\t\t\tsetChampions(championsArray);\r\n\r\n\t\t\tsetBuilds((prev: BuildInterface[]) => [...prev, ...buildsArray]);\r\n\t\t});\r\n\t}, []);\r\n\r\n\t// Get all builds\r\n\tuseEffect(() => {\r\n\t\tconsole.log(championFilter);\r\n\t}, [championFilter]);\r\n\r\n\tconst getMoreBuilds = async () => {\r\n\t\tconsole.log(championFilter.id);\r\n\r\n\t\tif (championFilter.id === '') {\r\n\t\t\tpage += 5;\r\n\r\n\t\t\tconst getBuilds = await axios.post(\r\n\t\t\t\t'https://wildriftbuilds.herokuapp.com/api/build/all',\r\n\t\t\t\t{\r\n\t\t\t\t\tpage,\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t\t\tconst { data } = getBuilds;\r\n\r\n\t\t\tsetBuilds((prev: BuildInterface[]) => [...prev, ...data]);\r\n\t\t} else {\r\n\t\t\tpage += 5;\r\n\r\n\t\t\tconst getBuildsForHero = await axios.post(\r\n\t\t\t\t`https://wildriftbuilds.herokuapp.com/api/build/all/${\r\n\t\t\t\t\tchampionFilter ? championFilter.id : ''\r\n\t\t\t\t}`,\r\n\t\t\t\t{\r\n\t\t\t\t\tpage,\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t\t\tconst { data } = getBuildsForHero;\r\n\r\n\t\t\tsetBuilds((prev: BuildInterface[]) => [...prev, ...data]);\r\n\t\t}\r\n\t};\r\n\r\n\tconst handleChampSelectChange = async (e: any) => {\r\n\t\tpage = 5;\r\n\r\n\t\tconst getChampion = champions.find(\r\n\t\t\t(champ: ChampionInterface) => champ.id === e.target.value\r\n\t\t);\r\n\r\n\t\tif (!getChampion) {\r\n\t\t\t// CHAMPION NOT FOUND\r\n\t\t\tsetChampionFilter({\r\n\t\t\t\tid: '',\r\n\t\t\t\tchampionName: '',\r\n\t\t\t\turl: '',\r\n\t\t\t});\r\n\r\n\t\t\tconst getBuilds = await axios.post(\r\n\t\t\t\t`https://wildriftbuilds.herokuapp.com/api/build/all/`,\r\n\t\t\t\t{\r\n\t\t\t\t\tpage,\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t\t\tconst { data } = getBuilds;\r\n\r\n\t\t\tsetBuilds((prev: BuildInterface[]) => [...data]);\r\n\t\t} else {\r\n\t\t\t// CHAMPION FOUND\r\n\t\t\tsetChampionFilter(getChampion);\r\n\r\n\t\t\tconst getBuildsForHero = await axios.post(\r\n\t\t\t\t`https://wildriftbuilds.herokuapp.com/api/build/all/${\r\n\t\t\t\t\tgetChampion ? getChampion.id : ''\r\n\t\t\t\t}`,\r\n\t\t\t\t{\r\n\t\t\t\t\tpage,\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t\t\tconst { data } = getBuildsForHero;\r\n\r\n\t\t\tsetBuilds((prev: BuildInterface[]) => [...data]);\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<hr />\r\n\t\t\t<Typography>Filter by:</Typography>\r\n\t\t\t<FormControl className={classes.formControl}>\r\n\t\t\t\t<InputLabel shrink htmlFor='champion-select'>\r\n\t\t\t\t\tChampion\r\n\t\t\t\t</InputLabel>\r\n\t\t\t\t<NativeSelect\r\n\t\t\t\t\tonChange={handleChampSelectChange}\r\n\t\t\t\t\tinputProps={{\r\n\t\t\t\t\t\tname: 'champion',\r\n\t\t\t\t\t\tid: 'champion-select',\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<option value=''>None</option>\r\n\t\t\t\t\t{champions.map(\r\n\t\t\t\t\t\t({ id, championName, url }: ChampionInterface, index) => {\r\n\t\t\t\t\t\t\treturn <option value={id}>{championName}</option>;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t)}\r\n\t\t\t\t</NativeSelect>\r\n\t\t\t\t<FormHelperText>Select a champion</FormHelperText>\r\n\t\t\t</FormControl>\r\n\r\n\t\t\t{builds.length === 0 ? (\r\n\t\t\t\t<Box>\r\n\t\t\t\t\t<CircularProgress />\r\n\t\t\t\t</Box>\r\n\t\t\t) : (\r\n\t\t\t\t<InfiniteScroll\r\n\t\t\t\t\tdataLength={builds.length}\r\n\t\t\t\t\tnext={getMoreBuilds}\r\n\t\t\t\t\thasMore={true}\r\n\t\t\t\t\tloader={<h4>Loading...</h4>}\r\n\t\t\t\t>\r\n\t\t\t\t\t{builds.map((build, index) => {\r\n\t\t\t\t\t\tconst {\r\n\t\t\t\t\t\t\tid: buildId,\r\n\t\t\t\t\t\t\tusername,\r\n\t\t\t\t\t\t\titems,\r\n\t\t\t\t\t\t\tchampion,\r\n\t\t\t\t\t\t\trank,\r\n\t\t\t\t\t\t}: BuildInterface = build;\r\n\t\t\t\t\t\tconst { id: championId, championName, url } = champion;\r\n\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<div className={classes.root}>\r\n\t\t\t\t\t\t\t\t<Paper className={classes.paper}>\r\n\t\t\t\t\t\t\t\t\t<Grid container wrap='nowrap' spacing={2}>\r\n\t\t\t\t\t\t\t\t\t\t<Grid item>\r\n\t\t\t\t\t\t\t\t\t\t\t<Avatar className={classes.large}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<LazyLoadImage\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsrc={`/images/wildriftchampions/${championId}.png`}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ width: '100%' }}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t</Avatar>\r\n\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t<Grid item xs>\r\n\t\t\t\t\t\t\t\t\t\t\t<Box display='flex'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Box flexGrow={1}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Typography variant='body1'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolor: '#517ebd',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfontWeight: 'bold',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfontSize: '20px',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{championName}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Typography variant='body1'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span style={{ color: '#949494' }}>by</span>{' '}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span style={{ color: '#e9eaec' }}>{username}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Box>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Avatar\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={classes.large}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ backgroundColor: '#38465a' }}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{rank ? (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<LazyLoadImage\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsrc={`/images/wildriftranks/${rank.id}.png`}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\twidth: '80%',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<LazyLoadImage\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsrc='/images/wildriftranks/a4938a79-f11f-4ee1-9ec5-7741a12c4ef9.png'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\twidth: '80%',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Avatar>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t<Box style={{ marginTop: '30px' }}>\r\n\t\t\t\t\t\t\t\t\t\t{items\r\n\t\t\t\t\t\t\t\t\t\t\t.filter((item) => item.type !== 'optional')\r\n\t\t\t\t\t\t\t\t\t\t\t.map((item) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\tconst { id: itemId } = item;\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Box style={{ display: 'inline-block' }}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<LazyLoadImage\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsrc={`/images/wildriftitems/${itemId}.png`}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\talt={championName}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ width: '50px' }}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t\t\t\t{/* <Box>\r\n\t\t\t\t\t\t\t\t\t\t<p>Optional</p>\r\n\t\t\t\t\t\t\t\t\t\t{items\r\n\t\t\t\t\t\t\t\t\t\t\t.filter((item) => item.type !== 'primary')\r\n\t\t\t\t\t\t\t\t\t\t\t.map((item) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\tconst { id: itemId } = item;\r\n\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Box style={{ display: 'inline-block' }}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<LazyLoadImage\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsrc={`/images/wildriftitems/${itemId}.png`}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\talt={championName}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ width: '50px' }}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t</Box> */}\r\n\t\t\t\t\t\t\t\t\t<Box\r\n\t\t\t\t\t\t\t\t\t\tdisplay='flex'\r\n\t\t\t\t\t\t\t\t\t\tflexDirection='row-reverse'\r\n\t\t\t\t\t\t\t\t\t\tstyle={{ margin: '20px 0 0 0' }}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t<a\r\n\t\t\t\t\t\t\t\t\t\t\t// href={`https://wildriftbuilds.herokuapp.com/build/${buildId}`}\r\n\t\t\t\t\t\t\t\t\t\t\thref={`/build/${buildId}`}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t<Button variant='contained' color='primary'>\r\n\t\t\t\t\t\t\t\t\t\t\t\tLearn more\r\n\t\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t\t\t</Paper>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t})}\r\n\t\t\t\t</InfiniteScroll>\r\n\t\t\t)}\r\n\t\t</>\r\n\t);\r\n}\r\n","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\CreateBuild.tsx",["67","68","69"],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\SoloBuild\\SoloBuild.tsx",["70","71","72","73","74"],"import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { withRouter } from 'react-router-dom';\r\nimport moment from 'moment';\r\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\r\n\r\n// MaterialUI\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Box from '@material-ui/core/Box';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Avatar from '@material-ui/core/Avatar';\r\n// CSS\r\nconst useStyles = makeStyles((theme) => ({\r\n\troot: {\r\n\t\tflexGrow: 1,\r\n\t\toverflow: 'hidden',\r\n\t},\r\n\tlarge: {\r\n\t\twidth: theme.spacing(7),\r\n\t\theight: theme.spacing(7),\r\n\t},\r\n}));\r\n// Types\r\ninterface ChampionInterface {\r\n\tid: string;\r\n\tchampionName: string;\r\n\turl: string;\r\n}\r\ninterface ItemInterface {\r\n\tid: string;\r\n\titemName: string;\r\n\treason?: string;\r\n\ttype: string;\r\n\turl: string;\r\n}\r\n\r\ninterface RankInterface {\r\n\tid: string;\r\n\trankName: string;\r\n\turl: string;\r\n}\r\n\r\ninterface RuneInterface {\r\n\tid: string;\r\n\truneName: string;\r\n\turl: string;\r\n\ttype: string;\r\n\tpath?: string;\r\n}\r\n\r\ninterface BuildInterface {\r\n\tdateSubmitted: string;\r\n\tusername: string;\r\n\tchampion: ChampionInterface;\r\n\titems: ItemInterface[];\r\n\trank: RankInterface;\r\n\trunes: {\r\n\t\tkeystone: RuneInterface;\r\n\t\tdomination: RuneInterface;\r\n\t\tresolve: RuneInterface;\r\n\t\tinspiration: RuneInterface;\r\n\t};\r\n}\r\n\r\nexport default withRouter((props) => {\r\n\tconst { match } = props;\r\n\tconst [build, setBuild] = useState<BuildInterface>();\r\n\r\n\tconst classes = useStyles();\r\n\r\n\tuseEffect(() => {\r\n\t\taxios\r\n\t\t\t.get(\r\n\t\t\t\t`https://wildriftbuilds.herokuapp.com/api/build/${match.params.buildId}`\r\n\t\t\t)\r\n\t\t\t.then((res) => {\r\n\t\t\t\tconst { data } = res;\r\n\t\t\t\tsetBuild(data);\r\n\t\t\t});\r\n\t}, []);\r\n\r\n\treturn (\r\n\t\t<div className={classes.root}>\r\n\t\t\t<hr />\r\n\t\t\t{build ? (\r\n\t\t\t\t<Box\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tbackgroundColor: '#233248',\r\n\t\t\t\t\t\tpadding: '30px',\r\n\t\t\t\t\t\tcolor: '#ffffff',\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Grid container wrap='nowrap' spacing={2}>\r\n\t\t\t\t\t\t<Grid item>\r\n\t\t\t\t\t\t\t<LazyLoadImage\r\n\t\t\t\t\t\t\t\tsrc={`/images/wildriftchampions/${build.champion.id}.png`}\r\n\t\t\t\t\t\t\t\ttitle={build.champion.championName}\r\n\t\t\t\t\t\t\t\tstyle={{ width: '80%', float: 'left', marginRight: '20px' }}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item xs>\r\n\t\t\t\t\t\t\t<Box>\r\n\t\t\t\t\t\t\t\t<Typography variant='body1'>\r\n\t\t\t\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\tcolor: '#517ebd',\r\n\t\t\t\t\t\t\t\t\t\t\tfontWeight: 'bold',\r\n\t\t\t\t\t\t\t\t\t\t\tfontSize: '20px',\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t{build.champion.championName}\r\n\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t<Typography variant='body1'>\r\n\t\t\t\t\t\t\t\t\t<span style={{ color: '#949494' }}>by</span>{' '}\r\n\t\t\t\t\t\t\t\t\t<span style={{ color: '#e9eaec' }}>{build.username}</span>\r\n\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t\t<Box style={{ marginTop: '10px' }}>\r\n\t\t\t\t\t\t\t\t<Avatar variant='square' style={{ backgroundColor: '#38465a' }}>\r\n\t\t\t\t\t\t\t\t\t{build.rank ? (\r\n\t\t\t\t\t\t\t\t\t\t<LazyLoadImage\r\n\t\t\t\t\t\t\t\t\t\t\tsrc={`/images/wildriftranks/${build.rank.id}.png`}\r\n\t\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\t\twidth: '80%',\r\n\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\ttitle={build.rank.rankName}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t<LazyLoadImage\r\n\t\t\t\t\t\t\t\t\t\t\tsrc='/images/wildriftranks/a4938a79-f11f-4ee1-9ec5-7741a12c4ef9.png'\r\n\t\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\t\twidth: '80%',\r\n\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\ttitle='Unranked'\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t</Avatar>\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t{/* PRIMARY ITEMS */}\r\n\t\t\t\t\t<Box\r\n\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\tbackgroundColor: '#656f7e',\r\n\t\t\t\t\t\t\tcolor: 'black',\r\n\t\t\t\t\t\t\tmargin: '20px 0',\r\n\t\t\t\t\t\t\tpadding: '20px',\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<Typography\r\n\t\t\t\t\t\t\tvariant='subtitle1'\r\n\t\t\t\t\t\t\tstyle={{ fontWeight: 'bolder', color: '#e9eaec' }}\r\n\t\t\t\t\t\t\tgutterBottom\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tPrimary Items\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t\t<Grid container spacing={3}>\r\n\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t{build.items\r\n\t\t\t\t\t\t\t\t.filter((item) => item.type !== 'optional')\r\n\t\t\t\t\t\t\t\t.map((item) => {\r\n\t\t\t\t\t\t\t\t\tconst { id: itemId, itemName, type, reason, url } = item;\r\n\r\n\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t<Box display='flex' p={1}>\r\n\t\t\t\t\t\t\t\t\t\t\t<Box p={1} flexGrow={1}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Avatar\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvariant='square'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={classes.large}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ float: 'left', marginRight: '10px' }}\r\n\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<LazyLoadImage\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsrc={`/images/wildriftitems/${itemId}.png`}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ width: '100%' }}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttitle={itemName}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\talt={itemName}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Avatar>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{itemName}\r\n\t\t\t\t\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t\t\t\t\t\t<Box p={1} style={{ color: '#d3d6da' }}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{reason ? reason : 'N/A'}\r\n\t\t\t\t\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t{/* OPTIONAL ITEMS */}\r\n\t\t\t\t\t<Box\r\n\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\tbackgroundColor: '#656f7e',\r\n\t\t\t\t\t\t\tcolor: 'black',\r\n\t\t\t\t\t\t\tmargin: '20px 0',\r\n\t\t\t\t\t\t\tpadding: '20px',\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<Typography\r\n\t\t\t\t\t\t\tvariant='subtitle1'\r\n\t\t\t\t\t\t\tstyle={{ fontWeight: 'bolder', color: '#e9eaec' }}\r\n\t\t\t\t\t\t\tgutterBottom\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tOptional Items\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t\t<Grid container spacing={3}>\r\n\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t{build.items\r\n\t\t\t\t\t\t\t\t.filter((item) => item.type !== 'primary')\r\n\t\t\t\t\t\t\t\t.map((item) => {\r\n\t\t\t\t\t\t\t\t\tconst { id: itemId, itemName, type, reason, url } = item;\r\n\r\n\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t<Box display='flex' p={1}>\r\n\t\t\t\t\t\t\t\t\t\t\t<Box p={1} flexGrow={1}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Avatar\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvariant='square'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={classes.large}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ float: 'left', marginRight: '10px' }}\r\n\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<LazyLoadImage\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsrc={`/images/wildriftitems/${itemId}.png`}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ width: '100%' }}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttitle={itemName}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\talt={itemName}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Avatar>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{itemName}\r\n\t\t\t\t\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t\t\t\t\t\t<Box p={1} style={{ color: '#d3d6da' }}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{reason ? reason : 'N/A'}\r\n\t\t\t\t\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t{/* RUNES */}\r\n\t\t\t\t\t<Box\r\n\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\tbackgroundColor: '#656f7e',\r\n\t\t\t\t\t\t\tcolor: 'black',\r\n\t\t\t\t\t\t\tmargin: '20px 0',\r\n\t\t\t\t\t\t\tpadding: '20px',\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<Typography\r\n\t\t\t\t\t\t\tvariant='subtitle1'\r\n\t\t\t\t\t\t\tstyle={{ fontWeight: 'bolder', color: '#e9eaec' }}\r\n\t\t\t\t\t\t\tgutterBottom\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tRunes\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t\t<Grid container spacing={3}>\r\n\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t{/* KEYSTONE RUNE BOX */}\r\n\t\t\t\t\t\t\t<Box p={1}>\r\n\t\t\t\t\t\t\t\t<Avatar\r\n\t\t\t\t\t\t\t\t\tvariant='square'\r\n\t\t\t\t\t\t\t\t\tclassName={classes.large}\r\n\t\t\t\t\t\t\t\t\tstyle={{ marginRight: '10px' }}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<LazyLoadImage\r\n\t\t\t\t\t\t\t\t\t\tsrc={`/images/wildriftrunes/${build.runes.keystone.id}.png`}\r\n\t\t\t\t\t\t\t\t\t\tstyle={{ width: '100%' }}\r\n\t\t\t\t\t\t\t\t\t\ttitle={build.runes.keystone.runeName}\r\n\t\t\t\t\t\t\t\t\t\talt={build.runes.keystone.runeName}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</Avatar>\r\n\t\t\t\t\t\t\t\t{build.runes.keystone.runeName}\r\n\t\t\t\t\t\t\t</Box>\r\n\r\n\t\t\t\t\t\t\t{/* DOMINATION RUNE BOX */}\r\n\t\t\t\t\t\t\t<Box p={1}>\r\n\t\t\t\t\t\t\t\t<Avatar\r\n\t\t\t\t\t\t\t\t\tvariant='square'\r\n\t\t\t\t\t\t\t\t\tclassName={classes.large}\r\n\t\t\t\t\t\t\t\t\tstyle={{ marginRight: '10px' }}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<LazyLoadImage\r\n\t\t\t\t\t\t\t\t\t\tsrc={`/images/wildriftrunes/${build.runes.domination.id}.png`}\r\n\t\t\t\t\t\t\t\t\t\tstyle={{ width: '100%' }}\r\n\t\t\t\t\t\t\t\t\t\ttitle={build.runes.domination.runeName}\r\n\t\t\t\t\t\t\t\t\t\talt={build.runes.domination.runeName}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</Avatar>\r\n\t\t\t\t\t\t\t\t{build.runes.domination.runeName}\r\n\t\t\t\t\t\t\t</Box>\r\n\r\n\t\t\t\t\t\t\t{/* RESOLVE RUNE BOX */}\r\n\t\t\t\t\t\t\t<Box p={1}>\r\n\t\t\t\t\t\t\t\t<Avatar\r\n\t\t\t\t\t\t\t\t\tvariant='square'\r\n\t\t\t\t\t\t\t\t\tclassName={classes.large}\r\n\t\t\t\t\t\t\t\t\tstyle={{ marginRight: '10px' }}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<LazyLoadImage\r\n\t\t\t\t\t\t\t\t\t\tsrc={`/images/wildriftrunes/${build.runes.resolve.id}.png`}\r\n\t\t\t\t\t\t\t\t\t\tstyle={{ width: '100%' }}\r\n\t\t\t\t\t\t\t\t\t\ttitle={build.runes.resolve.runeName}\r\n\t\t\t\t\t\t\t\t\t\talt={build.runes.resolve.runeName}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</Avatar>\r\n\t\t\t\t\t\t\t\t{build.runes.resolve.runeName}\r\n\t\t\t\t\t\t\t</Box>\r\n\r\n\t\t\t\t\t\t\t{/* INSPIRATION RUNE BOX */}\r\n\t\t\t\t\t\t\t<Box p={1}>\r\n\t\t\t\t\t\t\t\t<Avatar\r\n\t\t\t\t\t\t\t\t\tvariant='square'\r\n\t\t\t\t\t\t\t\t\tclassName={classes.large}\r\n\t\t\t\t\t\t\t\t\tstyle={{ marginRight: '10px' }}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<LazyLoadImage\r\n\t\t\t\t\t\t\t\t\t\tsrc={`/images/wildriftrunes/${build.runes.inspiration.id}.png`}\r\n\t\t\t\t\t\t\t\t\t\tstyle={{ width: '100%' }}\r\n\t\t\t\t\t\t\t\t\t\ttitle={build.runes.inspiration.runeName}\r\n\t\t\t\t\t\t\t\t\t\talt={build.runes.inspiration.runeName}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</Avatar>\r\n\t\t\t\t\t\t\t\t{build.runes.inspiration.runeName}\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t{/* Date/Time Submitted */}\r\n\t\t\t\t\t<Box display='flex' flexDirection='row-reverse' p={1} m={1}>\r\n\t\t\t\t\t\t<Box p={1}>\r\n\t\t\t\t\t\t\t<Typography variant='body2' style={{ color: '#B78F41' }}>\r\n\t\t\t\t\t\t\t\t{build.dateSubmitted\r\n\t\t\t\t\t\t\t\t\t? moment(build.dateSubmitted).format('dddd, MMMM Do YYYY')\r\n\t\t\t\t\t\t\t\t\t: 'Unknown'}\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t</Box>\r\n\t\t\t) : (\r\n\t\t\t\t<CircularProgress />\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n});\r\n","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\utils\\errorPopups.js",[],["75","76"],{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","severity":1,"message":"82","line":1,"column":17,"nodeType":"83","messageId":"84","endLine":1,"endColumn":25},{"ruleId":"81","severity":1,"message":"85","line":1,"column":27,"nodeType":"83","messageId":"84","endLine":1,"endColumn":36},{"ruleId":"81","severity":1,"message":"86","line":3,"column":8,"nodeType":"83","messageId":"84","endLine":3,"endColumn":13},{"ruleId":"81","severity":1,"message":"87","line":5,"column":8,"nodeType":"83","messageId":"84","endLine":5,"endColumn":18},{"ruleId":"81","severity":1,"message":"88","line":5,"column":8,"nodeType":"83","messageId":"84","endLine":5,"endColumn":14},{"ruleId":"89","severity":1,"message":"90","line":54,"column":6,"nodeType":"91","endLine":57,"endColumn":8},{"ruleId":"81","severity":1,"message":"92","line":14,"column":8,"nodeType":"83","messageId":"84","endLine":14,"endColumn":17},{"ruleId":"81","severity":1,"message":"93","line":16,"column":8,"nodeType":"83","messageId":"84","endLine":16,"endColumn":24},{"ruleId":"81","severity":1,"message":"94","line":76,"column":9,"nodeType":"83","messageId":"84","endLine":76,"endColumn":16},{"ruleId":"81","severity":1,"message":"95","line":76,"column":18,"nodeType":"83","messageId":"84","endLine":76,"endColumn":28},{"ruleId":"81","severity":1,"message":"96","line":243,"column":45,"nodeType":"83","messageId":"84","endLine":243,"endColumn":48},{"ruleId":"81","severity":1,"message":"97","line":36,"column":8,"nodeType":"83","messageId":"84","endLine":36,"endColumn":14},{"ruleId":"98","severity":1,"message":"99","line":243,"column":35,"nodeType":"100","messageId":"101","endLine":243,"endColumn":37},{"ruleId":"81","severity":1,"message":"102","line":363,"column":10,"nodeType":"83","messageId":"84","endLine":363,"endColumn":24},{"ruleId":"103","severity":1,"message":"104","line":82,"column":5,"nodeType":"105","endLine":82,"endColumn":7,"suggestions":"106"},{"ruleId":"81","severity":1,"message":"107","line":167,"column":40,"nodeType":"83","messageId":"84","endLine":167,"endColumn":44},{"ruleId":"81","severity":1,"message":"96","line":167,"column":54,"nodeType":"83","messageId":"84","endLine":167,"endColumn":57},{"ruleId":"81","severity":1,"message":"107","line":217,"column":40,"nodeType":"83","messageId":"84","endLine":217,"endColumn":44},{"ruleId":"81","severity":1,"message":"96","line":217,"column":54,"nodeType":"83","messageId":"84","endLine":217,"endColumn":57},{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","replacedBy":"80"},"no-native-reassign",["108"],"no-negated-in-lhs",["109"],"@typescript-eslint/no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'axios' is defined but never used.","'Typography' is defined but never used.","'Button' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'TextField' is defined but never used.","'FormControlLabel' is defined but never used.","'loading' is assigned a value but never used.","'setLoading' is assigned a value but never used.","'url' is assigned a value but never used.","'Layout' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'saveToDatabase' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'match.params.buildId'. Either include it or remove the dependency array.","ArrayExpression",["110"],"'type' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"111","fix":"112"},"Update the dependencies array to be: [match.params.buildId]",{"range":"113","text":"114"},[1801,1803],"[match.params.buildId]"]