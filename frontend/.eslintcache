[{"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\index.tsx":"1","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\reportWebVitals.ts":"2","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\components\\Layout.tsx":"3","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\components\\Header\\Header.tsx":"4","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\components\\Footer\\Footer.tsx":"5","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Landing\\Landing.tsx":"6","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\App\\App.tsx":"7","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Landing\\components\\FilterBy\\FilterBy.tsx":"8","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Landing\\components\\Champions\\Champions.tsx":"9","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\components\\Error\\404\\PageNotFound.tsx":"10","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\components\\Header\\components\\AppBar.tsx":"11","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\CreateBuild.tsx":"12","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\components\\Stepper\\Stepper.tsx":"13","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\components\\BuildInformation\\BuildInformation.tsx":"14","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\components\\BuildSelection\\BuildSelection.tsx":"15","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\components\\PlayerInformation\\PlayerInformation.tsx":"16","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\components\\CreateBuildHeader\\CreateBuildHeader.tsx":"17","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\components\\BuildSelection\\components\\ChampionSelect\\ChampionSelect.tsx":"18","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\components\\BuildSelection\\components\\ItemsSelect\\ItemsSelect.tsx":"19","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\components\\BuildSelection\\components\\ItemsSelected\\ItemsSelected.tsx":"20","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\components\\BuildSelection\\components\\RunesSelect\\RunesSelect.tsx":"21","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\components\\BuildSelection\\components\\RunesSelect\\components\\Keystone.tsx":"22","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\components\\BuildSelection\\components\\RunesSelect\\components\\Domination.tsx":"23","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\components\\BuildSelection\\components\\RunesSelect\\components\\Resolve.tsx":"24","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\components\\BuildSelection\\components\\RunesSelect\\components\\Inspiration.tsx":"25","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\components\\BuildSelection\\components\\SpellsSelect\\SpellsSelect.tsx":"26","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\components\\BuildSelection\\components\\SpellsSelect\\components\\Spell.tsx":"27","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\components\\Loading\\Backdrop.tsx":"28"},{"size":499,"mtime":1613515858400,"results":"29","hashOfConfig":"30"},{"size":425,"mtime":499162500000,"results":"31","hashOfConfig":"30"},{"size":643,"mtime":1613515741251,"results":"32","hashOfConfig":"30"},{"size":278,"mtime":1613392509686,"results":"33","hashOfConfig":"30"},{"size":1616,"mtime":1613521382916,"results":"34","hashOfConfig":"30"},{"size":2860,"mtime":1613837528229,"results":"35","hashOfConfig":"30"},{"size":4296,"mtime":1613837531998,"results":"36","hashOfConfig":"30"},{"size":1718,"mtime":1613388995743,"results":"37","hashOfConfig":"30"},{"size":1239,"mtime":1613390936658,"results":"38","hashOfConfig":"30"},{"size":121,"mtime":1613391402398,"results":"39","hashOfConfig":"30"},{"size":1863,"mtime":1613392497376,"results":"40","hashOfConfig":"30"},{"size":3996,"mtime":1613639552759,"results":"41","hashOfConfig":"30"},{"size":1921,"mtime":1613639267328,"results":"42","hashOfConfig":"30"},{"size":2372,"mtime":1613637062604,"results":"43","hashOfConfig":"30"},{"size":12106,"mtime":1613572979639,"results":"44","hashOfConfig":"30"},{"size":3083,"mtime":1613637060879,"results":"45","hashOfConfig":"30"},{"size":954,"mtime":1613396524964,"results":"46","hashOfConfig":"30"},{"size":2139,"mtime":1613478107221,"results":"47","hashOfConfig":"30"},{"size":4445,"mtime":1613526681233,"results":"48","hashOfConfig":"30"},{"size":2983,"mtime":1613633872173,"results":"49","hashOfConfig":"30"},{"size":2445,"mtime":1613560685908,"results":"50","hashOfConfig":"30"},{"size":2309,"mtime":1613565931635,"results":"51","hashOfConfig":"30"},{"size":2429,"mtime":1613566434371,"results":"52","hashOfConfig":"30"},{"size":2383,"mtime":1613565941417,"results":"53","hashOfConfig":"30"},{"size":2441,"mtime":1613565936057,"results":"54","hashOfConfig":"30"},{"size":1725,"mtime":1613564873606,"results":"55","hashOfConfig":"30"},{"size":2179,"mtime":1613564860853,"results":"56","hashOfConfig":"30"},{"size":614,"mtime":1613638537382,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"q16prs",{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"60"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"60"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"60"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"60"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"60"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"60"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"60"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"60"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"60"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"60"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"60"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"60"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"60"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"60"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"60"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"60"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"60"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\index.tsx",[],["132","133"],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\reportWebVitals.ts",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\components\\Layout.tsx",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\components\\Header\\Header.tsx",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\components\\Footer\\Footer.tsx",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Landing\\Landing.tsx",["134","135","136","137"],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\App\\App.tsx",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Landing\\components\\FilterBy\\FilterBy.tsx",["138"],"import React from 'react';\n\n// MaterialUI\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\n// Components\n// CSS\nimport styles from './filterby.module.css';\n// Types\ntype FilterByProps = {\n\tchampionSearch: string;\n\thandleChampionSearchChange(e: React.ChangeEvent<HTMLInputElement>): void;\n\tsetRoleFilter(role: string): void;\n};\n\nconst FilterBy = (props: FilterByProps) => {\n\tconst { championSearch, handleChampionSearchChange, setRoleFilter } = props;\n\n\treturn (\n\t\t<Box className={styles.filterContainer}>\n\t\t\t<Grid container>\n\t\t\t\t<Grid item xs={12} sm={10}>\n\t\t\t\t\t<Box className={styles.rolesListContainer}>\n\t\t\t\t\t\t<ul className={styles.rolesList}>\n\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t<span onClick={() => setRoleFilter('all')}>All</span>\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t<span onClick={() => setRoleFilter('top')}>Top</span>\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t<span onClick={() => setRoleFilter('jungle')}>Jungle</span>\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t<span onClick={() => setRoleFilter('middle')}>Middle</span>\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t<span onClick={() => setRoleFilter('bottom')}>Bottom</span>\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t<span onClick={() => setRoleFilter('support')}>Support</span>\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t</Box>\n\t\t\t\t</Grid>\n\t\t\t\t<Grid item xs={12} sm={2}>\n\t\t\t\t\t<Box className={styles.searchForChampionContainer}>\n\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\tvalue={championSearch}\n\t\t\t\t\t\t\tonChange={handleChampionSearchChange}\n\t\t\t\t\t\t\tlabel='Search a Champion'\n\t\t\t\t\t\t\tvariant='outlined'\n\t\t\t\t\t\t\tsize='small'\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Box>\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t</Box>\n\t);\n};\n\nexport default FilterBy;\n","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Landing\\components\\Champions\\Champions.tsx",["139"],"import React, { FunctionComponent } from 'react';\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\n\n// MaterialUI\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\n// Components\n// Types\nimport { ChampionInterface } from '../../../../utils/interfaces';\n// CSS\nimport styles from './champions.module.css';\n\ntype ChampionsProps = {\n\tfilteredChampions: Array<ChampionInterface>;\n};\n\nconst Champions: FunctionComponent<ChampionsProps> = (props) => {\n\tconst { filteredChampions } = props;\n\n\treturn (\n\t\t<Box display='flex' flexWrap='wrap' className={styles.championsContainer}>\n\t\t\t{filteredChampions.map((champion: ChampionInterface, index) => {\n\t\t\t\tconst { id: championId, championName } = champion;\n\n\t\t\t\treturn (\n\t\t\t\t\t<Box key={index} className={styles.championImageContainer}>\n\t\t\t\t\t\t<a href={`/builds/${championId}`} className={styles.championLink}>\n\t\t\t\t\t\t\t<LazyLoadImage\n\t\t\t\t\t\t\t\tsrc={`/images/wildriftchampions/${championId}.png`}\n\t\t\t\t\t\t\t\tclassName={styles.championImage}\n\t\t\t\t\t\t\t\ttitle={championName}\n\t\t\t\t\t\t\t\talt={championName}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<p className={styles.championName}>{championName}</p>\n\t\t\t\t\t\t</a>\n\t\t\t\t\t</Box>\n\t\t\t\t);\n\t\t\t})}\n\t\t</Box>\n\t);\n};\n\nexport default Champions;\n","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\components\\Error\\404\\PageNotFound.tsx",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\components\\Header\\components\\AppBar.tsx",["140"],"import React from 'react';\n\n// MaterialUI\nimport { makeStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport useScrollTrigger from '@material-ui/core/useScrollTrigger';\nimport Slide from '@material-ui/core/Slide';\n// Components\n// CSS\nimport styles from './appbar.module.css';\nconst useStyles = makeStyles((theme) => ({\n\troot: {\n\t\tflexGrow: 1,\n\t},\n\tmenuLinks: {\n\t\tmarginRight: theme.spacing(2),\n\t},\n\ttitle: {\n\t\tflexGrow: 1,\n\t},\n}));\n//Types\n\nfunction HideOnScroll(props: any) {\n\tconst { children, window } = props;\n\t// Note that you normally won't need to set the window ref as useScrollTrigger\n\t// will default to window.\n\t// This is only being set here because the demo is in an iframe.\n\tconst trigger = useScrollTrigger({ target: window ? window() : undefined });\n\n\treturn (\n\t\t<Slide appear={false} direction='down' in={!trigger}>\n\t\t\t{children}\n\t\t</Slide>\n\t);\n}\n\nHideOnScroll.propTypes = {\n\tchildren: PropTypes.element.isRequired,\n\t/**\n\t * Injected by the documentation to work in an iframe.\n\t * You won't need it on your project.\n\t */\n\twindow: PropTypes.func,\n};\n\nconst AppBarComponent = (props: any) => {\n\tconst classes = useStyles();\n\n\treturn (\n\t\t<div className={classes.root}>\n\t\t\t<HideOnScroll {...props}>\n\t\t\t\t<AppBar className={styles.header}>\n\t\t\t\t\t<Toolbar>\n\t\t\t\t\t\t<a href='/' className={classes.title}>\n\t\t\t\t\t\t\t<img src='/images/riftbuilds.png' className={styles.headerLogo} />\n\t\t\t\t\t\t</a>\n\t\t\t\t\t\t<a href='/' className={styles.headerLink}>\n\t\t\t\t\t\t\t<p className={classes.menuLinks}>Home</p>\n\t\t\t\t\t\t</a>\n\t\t\t\t\t\t<a href='/create' className={styles.headerLink}>\n\t\t\t\t\t\t\t<p className={classes.menuLinks}>Create</p>\n\t\t\t\t\t\t</a>\n\t\t\t\t\t</Toolbar>\n\t\t\t\t</AppBar>\n\t\t\t</HideOnScroll>\n\t\t\t<Toolbar />\n\t\t</div>\n\t);\n};\n\nexport default AppBarComponent;\n","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\CreateBuild.tsx",["141","142","143","144"],"import React, { useState } from 'react';\nimport axios from 'axios';\nimport { Redirect } from 'react-router-dom';\n\n// MaterialUI\nimport { makeStyles } from '@material-ui/core/styles';\nimport Box from '@material-ui/core/Box';\n// Components\nimport Stepper from './components/Stepper/Stepper';\nimport BackdropLoading from '../../../components/Loading/Backdrop';\nimport BuildInformation from './components/BuildInformation/BuildInformation';\nimport BuildSelection from './components/BuildSelection/BuildSelection';\nimport CreateBuildHeader from './components/CreateBuildHeader/CreateBuildHeader';\nimport PlayerInformation from './components/PlayerInformation/PlayerInformation';\n// CSS\nimport styles from './createbuild.module.css';\n// Types\nimport {\n\tBuildInterface,\n\tCountersInterface,\n\tChampionInterface,\n\tItemInterface,\n\tRankInterface,\n\tRuneInterface,\n\tSpellInterface,\n} from '../../../utils/interfaces';\ntype CreateBuildProps = {\n\tchampions: Array<ChampionInterface>;\n\titems: Array<ItemInterface>;\n\trunes: Array<RuneInterface>;\n\tspells: Array<SpellInterface>;\n\tranks: Array<RankInterface>;\n};\n\nconst useStyles = makeStyles((theme) => ({\n\tformControl: {\n\t\tmargin: theme.spacing(1),\n\t\tminWidth: 120,\n\t},\n}));\n\nconst CreateBuild = (props: CreateBuildProps) => {\n\tconst classes = useStyles();\n\tconst { champions, items, runes, spells, ranks } = props;\n\tconst [activeStep, setActiveStep] = useState(0);\n\tconst [build, setBuild] = useState<any>({\n\t\tbuildTitle: '',\n\t\tbuildRole: '',\n\t\tchampion: {},\n\t\tdateSubmitted: '',\n\t\titems: [],\n\t\trank: {},\n\t\trunes: {},\n\t\tspells: [],\n\t\tusername: '',\n\t});\n\tconst [openBackdrop, setOpenBackdrop] = useState<boolean>(false);\n\tconst [hasSubmittedBuild, setHasSubmittedBuild] = useState(false);\n\n\tconsole.log(build);\n\n\tlet componentToDisplay;\n\tif (activeStep === 0) {\n\t\tcomponentToDisplay = (\n\t\t\t<BuildInformation\n\t\t\t\tformControl={classes.formControl}\n\t\t\t\tsetBuild={(newBuild: any) => {\n\t\t\t\t\tsetBuild(newBuild);\n\t\t\t\t}}\n\t\t\t/>\n\t\t);\n\t} else if (activeStep === 1) {\n\t\tcomponentToDisplay = (\n\t\t\t<BuildSelection\n\t\t\t\tformControl={classes.formControl}\n\t\t\t\tchampions={champions}\n\t\t\t\titems={items}\n\t\t\t\trunes={runes}\n\t\t\t\tspells={spells}\n\t\t\t\tsetBuild={(newBuild: object) => {\n\t\t\t\t\tsetBuild(newBuild);\n\t\t\t\t}}\n\t\t\t/>\n\t\t);\n\t} else if (activeStep === 2) {\n\t\tcomponentToDisplay = (\n\t\t\t<PlayerInformation\n\t\t\t\tformControl={classes.formControl}\n\t\t\t\tranks={ranks}\n\t\t\t\tsetBuild={(newBuild: any) => {\n\t\t\t\t\tsetBuild(newBuild);\n\t\t\t\t}}\n\t\t\t/>\n\t\t);\n\t}\n\n\tconst submitBuild = async () => {\n\t\tif (build.items.length !== 0 && build.username) {\n\t\t\t// setOpenBackdrop(!openBackdrop);\n\t\t\tconst saveToDatabase = await axios\n\t\t\t\t.post(\n\t\t\t\t\t// 'https://wildriftbuilds.herokuapp.com/api/build/save',\n\t\t\t\t\t'/api/build/save',\n\t\t\t\t\tbuild\n\t\t\t\t)\n\t\t\t\t.then((res) => {\n\t\t\t\t\t// successBuildSaved();\n\t\t\t\t\tsetBuild(res.data);\n\t\t\t\t\tsetHasSubmittedBuild(true);\n\t\t\t\t\tconsole.log('Successfully saved build');\n\t\t\t\t})\n\t\t\t\t.catch((err) => {\n\t\t\t\t\tif (\n\t\t\t\t\t\terr.response.status === 429 &&\n\t\t\t\t\t\terr.response.data ===\n\t\t\t\t\t\t\t\"You're creating too many builds. Please try again after 30 minutes.\"\n\t\t\t\t\t) {\n\t\t\t\t\t\t// errorBuildSaved(err.response.data);\n\t\t\t\t\t\tconsole.log(\"You're creating too many builds\");\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// errorBuildSaved('Something went wrong. Failed to save build.');\n\t\t\t\t\t\tconsole.log('Something went wrong. Failed to save build.');\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t} else {\n\t\t\tif (build.items.length === 0) {\n\t\t\t\t// errorNoItemSelected();\n\t\t\t\tconsole.log('No items selected');\n\t\t\t} else if (!build.username) {\n\t\t\t\t// errorNoUsername();\n\t\t\t\tconsole.log('No username');\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\t};\n\n\tif (activeStep === 3) {\n\t\tsubmitBuild();\n\t}\n\n\tif (hasSubmittedBuild) {\n\t\treturn <Redirect to={`/build/${build.id}`} />;\n\t}\n\n\treturn (\n\t\t<Box>\n\t\t\t<BackdropLoading openBackdrop={openBackdrop} />\n\t\t\t<CreateBuildHeader />\n\n\t\t\t<Stepper\n\t\t\t\tactiveStep={activeStep}\n\t\t\t\tsetActiveStep={setActiveStep}\n\t\t\t\tcomponentToDisplay={componentToDisplay}\n\t\t\t\tsetOpenBackdrop={setOpenBackdrop}\n\t\t\t/>\n\t\t</Box>\n\t);\n};\n\nexport default CreateBuild;\n","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\components\\Stepper\\Stepper.tsx",["145","146","147"],"import React, { useState } from 'react';\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\n\n// MaterialUI\nimport Box from '@material-ui/core/Box';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\n// Types\ntype StepperProps = {\n\tactiveStep: number;\n\tsetActiveStep(step: any): void;\n\tcomponentToDisplay: React.ReactNode;\n\tsetOpenBackdrop(toOpen: boolean): void;\n};\n// CSS\nconst useStyles = makeStyles((theme: Theme) =>\n\tcreateStyles({\n\t\troot: {\n\t\t\twidth: '100%',\n\t\t},\n\t\tbackButton: {\n\t\t\tmarginRight: theme.spacing(1),\n\t\t},\n\t\tinstructions: {\n\t\t\tmarginTop: theme.spacing(1),\n\t\t\tmarginBottom: theme.spacing(1),\n\t\t},\n\t})\n);\n\nfunction getSteps() {\n\treturn ['Build Information', 'Create Build', 'Player Information'];\n}\n\nconst HorizontalLabelPositionBelowStepper = (props: StepperProps) => {\n\tconst {\n\t\tactiveStep,\n\t\tsetActiveStep,\n\t\tcomponentToDisplay,\n\t\tsetOpenBackdrop,\n\t} = props;\n\n\tconst classes = useStyles();\n\tconst steps = getSteps();\n\n\tconst handleNext = () => {\n\t\tsetActiveStep((prevActiveStep: number) => prevActiveStep + 1);\n\t};\n\n\tconst handleBack = () => {\n\t\tsetActiveStep((prevActiveStep: number) => prevActiveStep - 1);\n\t};\n\n\tconst handleReset = () => {\n\t\tsetActiveStep(0);\n\t};\n\n\tif (activeStep === steps.length) {\n\t\tsetOpenBackdrop(true);\n\t}\n\n\treturn (\n\t\t<div className={classes.root}>\n\t\t\t<div>\n\t\t\t\t<div>\n\t\t\t\t\t<Box style={{ padding: '10px 0' }}>{componentToDisplay}</Box>\n\t\t\t\t\t<Box display='flex' flexDirection='row-reverse'>\n\t\t\t\t\t\t<Button variant='contained' color='primary' onClick={handleNext}>\n\t\t\t\t\t\t\t{activeStep === steps.length - 1 ? 'Create Build' : 'Next'}\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tdisabled={activeStep === 0}\n\t\t\t\t\t\t\tonClick={handleBack}\n\t\t\t\t\t\t\tclassName={classes.backButton}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tBack\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</Box>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default HorizontalLabelPositionBelowStepper;\n","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\components\\BuildInformation\\BuildInformation.tsx",["148","149","150","151","152","153","154","155","156","157","158","159","160","161","162","163"],"import React, { useState, useEffect } from 'react';\n\n// MaterialUI\nimport Box from '@material-ui/core/Box';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport Grid from '@material-ui/core/Grid';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport NativeSelect from '@material-ui/core/NativeSelect';\nimport Select from '@material-ui/core/Select';\n// Components\n// CSS\nimport styles from './createbuild.module.css';\n// Types\nimport {\n\tBuildInterface,\n\tCountersInterface,\n\tChampionInterface,\n\tItemInterface,\n\tRankInterface,\n\tRuneInterface,\n\tSpellInterface,\n} from '../../../../../utils/interfaces';\ntype BuildInformationProps = {\n\tformControl: string;\n\tsetBuild: (newBuild: any) => void;\n};\n\nconst BuildInformation = (props: BuildInformationProps) => {\n\tconst { formControl, setBuild } = props;\n\n\tconst roles = ['Top', 'Jungle', 'Middle', 'Bottom', 'Support'];\n\n\t// =============== Build Title =============== //\n\tconst [buildTitle, setBuildTitle] = useState('');\n\tconst handleBuildTitleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n\t\tconst { value } = e.target;\n\n\t\tsetBuildTitle(value);\n\t};\n\n\t// =============== Build Role =============== //\n\tconst [buildRole, setBuildRole] = useState('Top');\n\tconst handleBuildRoleChange = (e: React.ChangeEvent<{ value: unknown }>) => {\n\t\tconst { value } = e.target;\n\n\t\tsetBuildRole(value as string);\n\t};\n\n\t// Handler for setBuild()\n\tuseEffect(() => {\n\t\tsetBuild((prev: any) => {\n\t\t\treturn { ...prev, buildTitle, buildRole };\n\t\t});\n\t}, [buildTitle, buildRole]);\n\n\treturn (\n\t\t<Grid container spacing={3}>\n\t\t\t<Grid item xs={12} sm={6}>\n\t\t\t\t<Box>\n\t\t\t\t\t<p>1. Build Title</p>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\tplaceholder='Build title'\n\t\t\t\t\t\tstyle={{ width: '100%' }}\n\t\t\t\t\t\tonChange={(e) => handleBuildTitleChange(e)}\n\t\t\t\t\t/>\n\t\t\t\t</Box>\n\t\t\t</Grid>\n\t\t\t<Grid item xs={12} sm={6}>\n\t\t\t\t<Box>\n\t\t\t\t\t<p>2. Role</p>\n\t\t\t\t\t{\n\t\t\t\t\t\t<select\n\t\t\t\t\t\t\tdefaultValue='Top'\n\t\t\t\t\t\t\tvalue={buildRole}\n\t\t\t\t\t\t\tonChange={handleBuildRoleChange}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{roles.map((role, index) => {\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<option key={index} value={role}>\n\t\t\t\t\t\t\t\t\t\t{role}\n\t\t\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t</select>\n\t\t\t\t\t}\n\t\t\t\t</Box>\n\t\t\t</Grid>\n\t\t</Grid>\n\t);\n};\n\nexport default BuildInformation;\n","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\components\\BuildSelection\\BuildSelection.tsx",["164","165","166","167","168","169","170","171"],"import React, { useState, useEffect, SetStateAction } from 'react';\n\n// MaterialUI\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\n// Components\nimport ChampionSelect from './components/ChampionSelect/ChampionSelect';\nimport ItemsSelect from './components/ItemsSelect/ItemsSelect';\nimport RunesSelect from './components/RunesSelect/RunesSelect';\nimport SpellsSelect from './components/SpellsSelect/SpellsSelect';\n// CSS\nimport styles from './buildselection.module.css';\n// Types\nimport {\n\tBuildInterface,\n\tCountersInterface,\n\tChampionInterface,\n\tItemInterface,\n\tRankInterface,\n\tRuneInterface,\n\tRunesSelectedType,\n\tSpellInterface,\n\tSpellsSelectedType,\n} from '../../../../../utils/interfaces';\ntype BuildSelectionProps = {\n\tformControl: string;\n\tchampions: Array<ChampionInterface>;\n\titems: Array<ItemInterface>;\n\trunes: Array<RuneInterface>;\n\tspells: Array<SpellInterface>;\n\tsetBuild: (newBuild: object) => void;\n};\n\nconst BuildSelection = (props: BuildSelectionProps) => {\n\tconst { formControl, champions, items, runes, spells, setBuild } = props;\n\n\t// =============== Champions =============== //\n\tconst [championSelected, setChampionSelected] = useState<ChampionInterface>(\n\t\t// Defaults to Champion: 'Ahri' - which is the first option\n\t\t{\n\t\t\tid: '48ca031a-d92e-44e6-b7b6-f3eb1dbe644c',\n\t\t\tchampionName: 'Ahri',\n\t\t\turl:\n\t\t\t\t'https://lolwildriftbuild.com/wp-content/uploads/2020/10/Ahri_wild_rift.png',\n\t\t\tlane: ['Middle'],\n\t\t\ttier: { Middle: 'A' },\n\t\t\ttitle: 'Nine-Tailed Fox',\n\t\t\tcounters: {\n\t\t\t\tweakAgainst: [\n\t\t\t\t\t{\n\t\t\t\t\t\tchampionName: 'Twisted Fate',\n\t\t\t\t\t\tid: '85f2909d-e3c1-425b-8398-5c8b9c145633',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tchampionName: 'Fizz',\n\t\t\t\t\t\tid: '96a64b1c-5a70-4b6c-a8ba-cf82d474a928',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tchampionName: 'Yasuo',\n\t\t\t\t\t\tid: 'e9759479-e2b8-45d4-84ce-6711c7371591',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tstrongAgainst: [\n\t\t\t\t\t{\n\t\t\t\t\t\tchampionName: 'Akali',\n\t\t\t\t\t\tid: '5a05e0d6-9c06-44af-9df9-a1fad5a2e427',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tchampionName: 'Twisted Fate',\n\t\t\t\t\t\tid: '85f2909d-e3c1-425b-8398-5c8b9c145633',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tchampionName: 'Lux',\n\t\t\t\t\t\tid: 'fd23d139-1fb4-4dd7-860b-ef261bf13431',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t},\n\t\t}\n\t);\n\tconst handleChampSelectChange = (e: React.ChangeEvent<HTMLSelectElement>) => {\n\t\tconst { value: championId } = e.target;\n\n\t\tconst getChampion = champions.find(\n\t\t\t(champ: ChampionInterface) => champ.id === championId\n\t\t);\n\n\t\tif (getChampion) {\n\t\t\tsetChampionSelected(getChampion);\n\t\t}\n\t};\n\n\t// =============== Items =============== //\n\tconst [itemSelected, setItemSelected] = useState<ItemInterface>(\n\t\t// Defaults to Item: 'Abyssal Mask' which is the first option\n\t\t{\n\t\t\tid: 'a42bcabd-290c-47f2-ae68-258d412c6d8d',\n\t\t\tcategory: 'defense',\n\t\t\tdescription: [\n\t\t\t\t'Eternity: Restore Mana equal to 15% of the damage taken from champions. Regen Health equal to 20% of Mana spent. Capped at 25 Health per cast.',\n\t\t\t\t'Abyssal: Nearby enemy champions take 15% bonus magic damage.',\n\t\t\t],\n\t\t\titemName: 'Abyssal Mask',\n\t\t\tstatistics: [\n\t\t\t\t'+300 Max Health',\n\t\t\t\t'+40 Magic Resistance',\n\t\t\t\t'+300 Max Mana',\n\t\t\t\t'+10 Ability Haste',\n\t\t\t],\n\t\t\ttier: 'upgraded',\n\t\t\turl:\n\t\t\t\t'https://lolwildriftbuild.com/wp-content/uploads/2020/10/abyssalmask_wild_rift.png',\n\t\t}\n\t);\n\tconst [itemType, setItemType] = useState('primary');\n\tconst [itemReason, setItemReason] = useState('');\n\n\tconst [itemsConfirmed, setItemsConfirmed] = useState<Array<ItemInterface>>(\n\t\t[]\n\t);\n\n\tconst handleItemSelectChange = (e: React.ChangeEvent<HTMLSelectElement>) => {\n\t\tconst { value: itemId } = e.target;\n\n\t\tconst getItem = items.find((item: ItemInterface) => item.id === itemId);\n\n\t\tif (getItem) {\n\t\t\tsetItemSelected(getItem);\n\t\t}\n\t};\n\tconst handleItemTypeChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n\t\tsetItemType(e.target.value);\n\t};\n\tconst handleItemExplanationChange = (\n\t\te: React.ChangeEvent<HTMLTextAreaElement>\n\t) => {\n\t\tsetItemReason(e.target.value);\n\t};\n\n\tconst handleAddItemClick = () => {\n\t\t// Pushes item to itemsConfirmed Array\n\t\tsetItemsConfirmed([\n\t\t\t...itemsConfirmed,\n\t\t\t{ ...itemSelected, type: itemType, reason: itemReason },\n\t\t]);\n\t\tsetItemReason('');\n\t};\n\tconst handleDeleteItemClick = (itemId: string) => {\n\t\tconst filteredItems = itemsConfirmed.filter(\n\t\t\t(item: ItemInterface) => item.id !== itemId\n\t\t);\n\n\t\tif (filteredItems) {\n\t\t\tsetItemsConfirmed([...filteredItems]);\n\t\t}\n\t};\n\n\t// =============== Runes =============== //\n\tconst [runesSelected, setRunesSelected] = useState<RunesSelectedType>({\n\t\tkeystone: {\n\t\t\tid: 'feadf691-c740-4e7d-a4e8-9c705a48ea6a',\n\t\t\truneName: 'Aery',\n\t\t\turl:\n\t\t\t\t'https://static.wikia.nocookie.net/leagueoflegends/images/c/ce/Aery_%28Wild_Rift%29_rune.png/revision/latest/scale-to-width-down/52?cb=20200713114442',\n\t\t\ttype: 'keystone',\n\t\t\tdescription: [\n\t\t\t\t'Basic attacks and abilities against an enemy champion signals Aery to dash to them, dealing 10 - 60 (based on level) (+ 20% bonus AD) (+ 10% AP) Adaptive damage. Healing, shielding, or buffing an ally signals Aery to dash to them, shielding them for 20 - 120 (based on level) (+ 40% bonus AD) (+ 20% AP) for 2 seconds.',\n\t\t\t\t'Aery lingers on the target for 2 seconds before flying back to the user, and cannot be sent out again until she returns. Aery is initially very slow, but gradually accelerates, and can be picked up by moving near her.',\n\t\t\t\t'Adaptive Damage: Deals either physical or magic damage depending on your bonus stats, defaulting based on the origin of the effect.',\n\t\t\t],\n\t\t},\n\t\tdomination: {\n\t\t\tid: '7a61f821-168c-4817-bbdd-daf3ce5439dc',\n\t\t\truneName: 'Brutal',\n\t\t\turl:\n\t\t\t\t'https://static.wikia.nocookie.net/leagueoflegends/images/c/ca/Brutal_%28Wild_Rift%29_rune.png/revision/latest/scale-to-width-down/52?cb=20200713102514',\n\t\t\ttype: 'secondary',\n\t\t\tpath: 'domination',\n\t\t\tdescription: [\n\t\t\t\t'Gain 7 AD and 2% armor penetration, or 14 AP and 2% magic penetration. (Adaptive)',\n\t\t\t],\n\t\t},\n\t\tresolve: {\n\t\t\tid: 'fc2532cb-e6d9-4577-a567-4f10fff13e0a',\n\t\t\truneName: 'Backbone',\n\t\t\turl:\n\t\t\t\t'https://static.wikia.nocookie.net/leagueoflegends/images/b/b2/Backbone_%28Wild_Rift%29_rune.png/revision/latest/scale-to-width-down/52?cb=20200713102418',\n\t\t\ttype: 'secondary',\n\t\t\tpath: 'resolve',\n\t\t\tdescription: [\n\t\t\t\t'Gain 10 AR or 10 MR, based on whichever stat you have less of.',\n\t\t\t],\n\t\t},\n\t\tinspiration: {\n\t\t\tid: '80216900-b198-4195-ab1c-e6e309c28ff3',\n\t\t\truneName: 'Hunter - Genius',\n\t\t\turl:\n\t\t\t\t'https://static.wikia.nocookie.net/leagueoflegends/images/e/e7/Hunter_-_Genius_%28Wild_Rift%29_rune.png/revision/latest/scale-to-width-down/52?cb=20200713102756',\n\t\t\ttype: 'secondary',\n\t\t\tpath: 'inspiration',\n\t\t\tdescription: [\n\t\t\t\t'Gain 2.5 Ability Haste.',\n\t\t\t\t'Unique champion takedowns grant 2.5 Ability Haste. (Max Ability Haste 15)',\n\t\t\t],\n\t\t},\n\t});\n\t// Everytime user changes a rune, this function gets executed\n\t// - sets new rune\n\t// - sets reason property\n\tconst handleRuneSelectChange = (\n\t\te: React.ChangeEvent<HTMLSelectElement>,\n\t\truneType: string,\n\t\trunePath?: string\n\t) => {\n\t\tconst getRune = runes.find(\n\t\t\t(rune: RuneInterface) => rune.id === e.target.value\n\t\t);\n\n\t\tif (getRune) {\n\t\t\t/*\n\n\t\t\t\t\t- \"{...getRune}\" spreads the previous state\n\t\t\t\t\t- \"reason: prev.keystone.reason\" gets the 'reason' property of the previous rune and sets it to the new rune\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\t...prev,\n\t\t\t\t\t\tkeystone: { ...getRune, reason: prev.keystone.reason || '' },\n\t\t\t\t\t};\n\n\t\t\t*/\n\n\t\t\tconst runesSelectStateHandler = (rune: string) => {\n\t\t\t\tsetRunesSelected((prev) => {\n\t\t\t\t\treturn {\n\t\t\t\t\t\t...prev,\n\t\t\t\t\t\t[rune]: { ...getRune, reason: prev[rune].reason || '' },\n\t\t\t\t\t};\n\t\t\t\t});\n\t\t\t};\n\n\t\t\tif (runeType === 'keystone') {\n\t\t\t\trunesSelectStateHandler('keystone');\n\t\t\t}\n\t\t\tif (runeType === 'secondary') {\n\t\t\t\tswitch (runePath) {\n\t\t\t\t\tcase 'domination':\n\t\t\t\t\t\trunesSelectStateHandler('domination');\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'resolve':\n\t\t\t\t\t\trunesSelectStateHandler('resolve');\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'inspiration':\n\t\t\t\t\t\trunesSelectStateHandler('inspiration');\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\tconst handleRuneExplanationChange = (\n\t\te: React.ChangeEvent<HTMLTextAreaElement>,\n\t\trune: string\n\t) => {\n\t\tsetRunesSelected((prev) => {\n\t\t\tconst prevCopy = { ...prev };\n\n\t\t\tlet getRune = prevCopy[rune];\n\t\t\tgetRune = { ...getRune, reason: e.target.value };\n\n\t\t\treturn { ...prev, [rune]: getRune };\n\t\t});\n\t};\n\n\t// =============== Spells =============== //\n\tconst [spellsSelected, setSpellsSelected] = useState<SpellsSelectedType>({\n\t\tspellOne: {\n\t\t\tid: 'dd6ff556-3b07-4be0-bd1f-c2dd9c9ce1dd',\n\t\t\tspellName: 'Flash',\n\t\t\turl:\n\t\t\t\t'/uploads/league-of-legends-wild-rift/images/summoner-spells/flash.jpg',\n\t\t\tdescription: [\n\t\t\t\t'Teleport a short distance forward or towards the aimed direction.',\n\t\t\t],\n\t\t\tcooldown: '150',\n\t\t},\n\t\tspellTwo: {\n\t\t\tid: 'aeb37ecd-ccb5-41fc-ad9c-c9b6bef39e34',\n\t\t\tspellName: 'Ignite',\n\t\t\turl:\n\t\t\t\t'/uploads/league-of-legends-wild-rift/images/summoner-spells/ignite.jpg',\n\t\t\tdescription: [\n\t\t\t\t'Ignites target enemy champion, dealing 60−410 (based on level) true damage over 5 seconds and inflincting them with Grievous Wounds.',\n\t\t\t\t'Grievous Wounds reduces healing effects by 50%',\n\t\t\t],\n\t\t\tcooldown: '90',\n\t\t},\n\t});\n\n\tconst handleSpellSelectChange = (\n\t\te: React.ChangeEvent<HTMLSelectElement>,\n\t\tspellNumber: string\n\t) => {\n\t\tconst { value: spellId } = e.target;\n\n\t\tconst getSpell = spells.find(\n\t\t\t(spell: SpellInterface) => spell.id === spellId\n\t\t);\n\n\t\tif (getSpell) {\n\t\t\tswitch (spellNumber) {\n\t\t\t\tcase 'spellOne':\n\t\t\t\t\tsetSpellsSelected((prev) => {\n\t\t\t\t\t\treturn { ...prev, spellOne: getSpell };\n\t\t\t\t\t});\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'spellTwo':\n\t\t\t\t\tsetSpellsSelected((prev) => {\n\t\t\t\t\t\treturn { ...prev, spellTwo: getSpell };\n\t\t\t\t\t});\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t};\n\n\t// Check for duplicate items selected\n\t// Check for primary items limit\n\tuseEffect(() => {\n\t\tconst primaryItems = itemsConfirmed.filter(\n\t\t\t(item) => item.type === 'primary'\n\t\t);\n\n\t\tvar itemArray = itemsConfirmed.map((item) => {\n\t\t\treturn item.id;\n\t\t});\n\t\tvar isDuplicate = itemArray.some((item, index) => {\n\t\t\treturn itemArray.indexOf(item) != index;\n\t\t});\n\n\t\t// Remove duplicates from itemsConfirmed Array\n\t\tconst filteredItemsConfirmed = itemsConfirmed.filter(\n\t\t\t(item, index, arr) => arr.findIndex((t) => t.id === item.id) === index\n\t\t);\n\n\t\tif (isDuplicate) {\n\t\t\talert('Duplicate');\n\t\t\tsetItemsConfirmed(filteredItemsConfirmed);\n\t\t\t// errorItemDuplicate();\n\t\t} else if (primaryItems.length > 6) {\n\t\t\t// errorPrimaryItemsLimit();\n\t\t\talert('Limit');\n\t\t\tsetItemsConfirmed((prev) => {\n\t\t\t\tconst itemsConfirmedCopy = [...prev];\n\n\t\t\t\titemsConfirmedCopy.pop();\n\n\t\t\t\treturn itemsConfirmedCopy;\n\t\t\t});\n\t\t}\n\t}, [itemsConfirmed]);\n\n\t// Handler for setBuild()\n\tuseEffect(() => {\n\t\tsetBuild((prev: object) => {\n\t\t\treturn {\n\t\t\t\t...prev,\n\t\t\t\tchampion: championSelected,\n\t\t\t\titems: itemsConfirmed,\n\t\t\t\trunes: runesSelected,\n\t\t\t\tspells: spellsSelected,\n\t\t\t};\n\t\t});\n\t}, [championSelected, itemsConfirmed, runesSelected, spellsSelected]);\n\n\treturn (\n\t\t<Grid container spacing={3}>\n\t\t\t<Grid item xs={12}>\n\t\t\t\t<ChampionSelect\n\t\t\t\t\tchampions={champions}\n\t\t\t\t\tchampionSelected={championSelected}\n\t\t\t\t\thandleChampSelectChange={handleChampSelectChange}\n\t\t\t\t\tformControl={formControl}\n\t\t\t\t/>\n\t\t\t</Grid>\n\t\t\t<Grid item xs={12}>\n\t\t\t\t<ItemsSelect\n\t\t\t\t\tformControl={formControl}\n\t\t\t\t\titems={items}\n\t\t\t\t\titemsConfirmed={itemsConfirmed}\n\t\t\t\t\titemReason={itemReason}\n\t\t\t\t\titemSelected={itemSelected}\n\t\t\t\t\thandleAddItemClick={handleAddItemClick}\n\t\t\t\t\thandleDeleteItemClick={handleDeleteItemClick}\n\t\t\t\t\thandleItemExplanationChange={handleItemExplanationChange}\n\t\t\t\t\thandleItemSelectChange={handleItemSelectChange}\n\t\t\t\t\thandleItemTypeChange={handleItemTypeChange}\n\t\t\t\t/>\n\t\t\t</Grid>\n\t\t\t<Grid item xs={12}>\n\t\t\t\t<RunesSelect\n\t\t\t\t\tformControl={formControl}\n\t\t\t\t\trunes={runes}\n\t\t\t\t\trunesSelected={runesSelected}\n\t\t\t\t\thandleRuneSelectChange={handleRuneSelectChange}\n\t\t\t\t\thandleRuneExplanationChange={handleRuneExplanationChange}\n\t\t\t\t/>\n\t\t\t</Grid>\n\t\t\t<Grid item xs={12}>\n\t\t\t\t<SpellsSelect\n\t\t\t\t\tformControl={formControl}\n\t\t\t\t\tspells={spells}\n\t\t\t\t\tspellsSelected={spellsSelected}\n\t\t\t\t\thandleSpellSelectChange={handleSpellSelectChange}\n\t\t\t\t/>\n\t\t\t</Grid>\n\t\t</Grid>\n\t);\n};\n\nexport default BuildSelection;\n","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\components\\PlayerInformation\\PlayerInformation.tsx",["172","173","174"],"import React, { useState, useEffect } from 'react';\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\n\n// MaterialUI\nimport Box from '@material-ui/core/Box';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport Grid from '@material-ui/core/Grid';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport NativeSelect from '@material-ui/core/NativeSelect';\n// Components\n// Types\nimport { BuildInterface, RankInterface } from '../../../../../utils/interfaces';\n// CSS\nimport styles from './playerinformation.module.css';\ntype PlayerInformationProps = {\n\tformControl: string;\n\tranks: Array<RankInterface>;\n\tsetBuild: (newBuild: any) => void;\n};\n\nconst PlayerInformation = (props: PlayerInformationProps) => {\n\tconst { formControl, ranks, setBuild } = props;\n\n\t// =============== Username =============== //\n\tconst [username, setUsername] = useState('');\n\tconst handleUsernameChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n\t\tconst { value } = e.target;\n\n\t\tsetUsername(value);\n\t};\n\n\t// =============== Rank =============== //\n\tconst [rankSelected, setRankSelected] = useState<RankInterface>(\n\t\t// Defaults to Rank: 'Unranked' which is the first option\n\t\t{\n\t\t\tid: 'a4938a79-f11f-4ee1-9ec5-7741a12c4ef9',\n\t\t\trankName: 'Unranked',\n\t\t\turl:\n\t\t\t\t'https://static.wikia.nocookie.net/leagueoflegends/images/3/38/Season_2019_-_Unranked.png/revision/latest/scale-to-width-down/130?cb=20190908074432',\n\t\t}\n\t);\n\tconst handleRankSelectChange = (e: React.ChangeEvent<HTMLSelectElement>) => {\n\t\tconst getRank = ranks.find(\n\t\t\t(rank: RankInterface) => rank.id === e.target.value\n\t\t);\n\n\t\tif (!getRank) {\n\t\t\treturn;\n\t\t} else {\n\t\t\tsetRankSelected(getRank);\n\t\t}\n\t};\n\n\t// Handler for setBuild()\n\tuseEffect(() => {\n\t\tsetBuild((prev: any) => {\n\t\t\treturn { ...prev, username, rank: rankSelected };\n\t\t});\n\t}, [username, rankSelected]);\n\n\treturn (\n\t\t<Grid container spacing={3}>\n\t\t\t<Grid item xs={12} sm={6}>\n\t\t\t\t<Box>\n\t\t\t\t\t<p>7. Username</p>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\tplaceholder='Username'\n\t\t\t\t\t\tonChange={(e) => handleUsernameChange(e)}\n\t\t\t\t\t\tstyle={{ width: '100%' }}\n\t\t\t\t\t/>\n\t\t\t\t</Box>\n\t\t\t</Grid>\n\t\t\t<Grid item xs={12} sm={6}>\n\t\t\t\t<Box>\n\t\t\t\t\t<p>8. Rank</p>\n\n\t\t\t\t\t<Box>\n\t\t\t\t\t\t<LazyLoadImage\n\t\t\t\t\t\t\tsrc={`/images/wildriftranks/${rankSelected.id}.png`}\n\t\t\t\t\t\t\tstyle={{ width: '100px' }}\n\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t<FormControl className={formControl}>\n\t\t\t\t\t\t\t\t<InputLabel shrink htmlFor='rank-select'>\n\t\t\t\t\t\t\t\t\tRank\n\t\t\t\t\t\t\t\t</InputLabel>\n\t\t\t\t\t\t\t\t<NativeSelect\n\t\t\t\t\t\t\t\t\tonChange={handleRankSelectChange}\n\t\t\t\t\t\t\t\t\tinputProps={{\n\t\t\t\t\t\t\t\t\t\tname: 'rank',\n\t\t\t\t\t\t\t\t\t\tid: 'rank-select',\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{ranks.map(({ id, rankName, url }: RankInterface, index) => {\n\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t<option key={index} value={id}>\n\t\t\t\t\t\t\t\t\t\t\t\t{rankName}\n\t\t\t\t\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t</NativeSelect>\n\t\t\t\t\t\t\t\t<FormHelperText>Select your rank</FormHelperText>\n\t\t\t\t\t\t\t</FormControl>\n\t\t\t\t\t\t}\n\t\t\t\t\t</Box>\n\t\t\t\t</Box>\n\t\t\t</Grid>\n\t\t</Grid>\n\t);\n};\n\nexport default PlayerInformation;\n","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\components\\CreateBuildHeader\\CreateBuildHeader.tsx",["175","176","177","178","179","180","181"],"import React from 'react';\n\n// MaterialUI\nimport Box from '@material-ui/core/Box';\nimport Typography from '@material-ui/core/Typography';\n// Components\n// Types\nimport {\n\tBuildInterface,\n\tCountersInterface,\n\tChampionInterface,\n\tItemInterface,\n\tRankInterface,\n\tRuneInterface,\n\tSpellInterface,\n} from '../../../../../utils/interfaces';\n// CSS\n\nconst CreateBuildHeader = () => {\n\treturn (\n\t\t<Box>\n\t\t\t<Box style={{ padding: '20px 0', marginTop: '20px' }}>\n\t\t\t\t<Typography variant='h6' style={{ fontWeight: 'bold' }} gutterBottom>\n\t\t\t\t\tCreate your build\n\t\t\t\t</Typography>\n\t\t\t\t<Typography variant='body2' style={{ color: '#666666' }} gutterBottom>\n\t\t\t\t\tPlease note that you can only create up to 5 builds every 30 minutes.\n\t\t\t\t</Typography>\n\t\t\t</Box>\n\t\t\t<Box\n\t\t\t\tstyle={{\n\t\t\t\t\twidth: '150px',\n\t\t\t\t\theight: '1px',\n\t\t\t\t\tmargin: '10px 0 20px 0',\n\t\t\t\t\tbackgroundColor: '#000000',\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t&nbsp;\n\t\t\t</Box>\n\t\t</Box>\n\t);\n};\n\nexport default CreateBuildHeader;\n","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\components\\BuildSelection\\components\\ChampionSelect\\ChampionSelect.tsx",["182"],"import React, { useState } from 'react';\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\n\n// MaterialUI\n\nimport Box from '@material-ui/core/Box';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport NativeSelect from '@material-ui/core/NativeSelect';\n// Components\n// CSS\nimport styles from './championselect.module.css';\n// Types\nimport { ChampionInterface } from '../../../../../../../utils/interfaces';\ntype ChampionSelectProps = {\n\tchampions: Array<ChampionInterface>;\n\tchampionSelected: ChampionInterface;\n\thandleChampSelectChange(e: React.ChangeEvent<HTMLSelectElement>): void;\n\tformControl: string;\n};\n\nconst ChampionSelect = (props: ChampionSelectProps) => {\n\tconst {\n\t\tchampions,\n\t\tchampionSelected,\n\t\thandleChampSelectChange,\n\t\tformControl,\n\t} = props;\n\n\treturn (\n\t\t<Box>\n\t\t\t<p>3. Champion</p>\n\n\t\t\t<Box className={styles.championSelectContainer}>\n\t\t\t\t{/* Display Champion Image */}\n\t\t\t\t{championSelected ? (\n\t\t\t\t\t<LazyLoadImage\n\t\t\t\t\t\tsrc={`/images/wildriftchampions/${championSelected.id}.png`}\n\t\t\t\t\t\tclassName={styles.championImage}\n\t\t\t\t\t/>\n\t\t\t\t) : (\n\t\t\t\t\t// Defaults to \"Ahri\"'s image if no champion selected\n\t\t\t\t\t<LazyLoadImage\n\t\t\t\t\t\tsrc={`/images/wildriftchampions/48ca031a-d92e-44e6-b7b6-f3eb1dbe644c.png`}\n\t\t\t\t\t\tclassName={styles.championImage}\n\t\t\t\t\t/>\n\t\t\t\t)}\n\n\t\t\t\t{\n\t\t\t\t\t<FormControl className={formControl}>\n\t\t\t\t\t\t<InputLabel shrink htmlFor='champion-select'>\n\t\t\t\t\t\t\tChampion\n\t\t\t\t\t\t</InputLabel>\n\t\t\t\t\t\t<NativeSelect\n\t\t\t\t\t\t\tvalue={championSelected.id}\n\t\t\t\t\t\t\tonChange={handleChampSelectChange}\n\t\t\t\t\t\t\tinputProps={{\n\t\t\t\t\t\t\t\tname: 'champion',\n\t\t\t\t\t\t\t\tid: 'champion-select',\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{champions.map(\n\t\t\t\t\t\t\t\t({ id, championName }: ChampionInterface, index) => {\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t<option key={index} value={id}>\n\t\t\t\t\t\t\t\t\t\t\t{championName}\n\t\t\t\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</NativeSelect>\n\t\t\t\t\t\t<FormHelperText>Select a champion</FormHelperText>\n\t\t\t\t\t</FormControl>\n\t\t\t\t}\n\t\t\t</Box>\n\t\t</Box>\n\t);\n};\n\nexport default ChampionSelect;\n","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\components\\BuildSelection\\components\\ItemsSelect\\ItemsSelect.tsx",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\components\\BuildSelection\\components\\ItemsSelected\\ItemsSelected.tsx",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\components\\BuildSelection\\components\\RunesSelect\\RunesSelect.tsx",["183","184","185","186","187","188"],"import React from 'react';\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\n\n// MaterialUI\nimport Box from '@material-ui/core/Box';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport Grid from '@material-ui/core/Grid';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport NativeSelect from '@material-ui/core/NativeSelect';\n// Components\nimport Domination from './components/Domination';\nimport Inspiration from './components/Inspiration';\nimport Keystone from './components/Keystone';\nimport Resolve from './components/Resolve';\n// CSS\nimport styles from './runesselect.module.css';\n// Types\nimport {\n\tRuneInterface,\n\tRunesSelectedType,\n} from '../../../../../../../utils/interfaces';\ntype RunesSelectProps = {\n\tformControl: string;\n\trunes: Array<RuneInterface>;\n\trunesSelected: RunesSelectedType;\n\thandleRuneSelectChange(\n\t\te: React.ChangeEvent<HTMLSelectElement>,\n\t\truneType: string,\n\t\trunePath?: string\n\t): void;\n\thandleRuneExplanationChange(\n\t\te: React.ChangeEvent<HTMLTextAreaElement>,\n\t\truneType: string\n\t): void;\n};\n\nconst RunesSelect = (props: RunesSelectProps) => {\n\tconst {\n\t\tformControl,\n\t\trunes,\n\t\trunesSelected,\n\t\thandleRuneSelectChange,\n\t\thandleRuneExplanationChange,\n\t} = props;\n\n\treturn (\n\t\t<Box>\n\t\t\t<p>5. Runes</p>\n\n\t\t\t<Grid container item xs={12}>\n\t\t\t\t{/* KEYSTONE Rune */}\n\t\t\t\t<Keystone\n\t\t\t\t\tformControl={formControl}\n\t\t\t\t\trunes={runes}\n\t\t\t\t\trunesSelected={runesSelected}\n\t\t\t\t\thandleRuneSelectChange={handleRuneSelectChange}\n\t\t\t\t\thandleRuneExplanationChange={handleRuneExplanationChange}\n\t\t\t\t/>\n\n\t\t\t\t{/* Secondary: Domination */}\n\t\t\t\t<Domination\n\t\t\t\t\tformControl={formControl}\n\t\t\t\t\trunes={runes}\n\t\t\t\t\trunesSelected={runesSelected}\n\t\t\t\t\thandleRuneSelectChange={handleRuneSelectChange}\n\t\t\t\t\thandleRuneExplanationChange={handleRuneExplanationChange}\n\t\t\t\t/>\n\n\t\t\t\t{/* Secondary: Resolve */}\n\t\t\t\t<Resolve\n\t\t\t\t\tformControl={formControl}\n\t\t\t\t\trunes={runes}\n\t\t\t\t\trunesSelected={runesSelected}\n\t\t\t\t\thandleRuneSelectChange={handleRuneSelectChange}\n\t\t\t\t\thandleRuneExplanationChange={handleRuneExplanationChange}\n\t\t\t\t/>\n\n\t\t\t\t{/* Secondary: Inspiration */}\n\t\t\t\t<Inspiration\n\t\t\t\t\tformControl={formControl}\n\t\t\t\t\trunes={runes}\n\t\t\t\t\trunesSelected={runesSelected}\n\t\t\t\t\thandleRuneSelectChange={handleRuneSelectChange}\n\t\t\t\t\thandleRuneExplanationChange={handleRuneExplanationChange}\n\t\t\t\t/>\n\t\t\t</Grid>\n\t\t</Box>\n\t);\n};\n\nexport default RunesSelect;\n","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\components\\BuildSelection\\components\\RunesSelect\\components\\Keystone.tsx",["189"],"import React from 'react';\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\n\n// MaterialUI\nimport Box from '@material-ui/core/Box';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport Grid from '@material-ui/core/Grid';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport NativeSelect from '@material-ui/core/NativeSelect';\n// Components\n// CSS\nimport styles from './rune.module.css';\n// Types\nimport {\n\tRuneInterface,\n\tRunesSelectedType,\n} from '../../../../../../../../utils/interfaces';\ntype KeystoneProps = {\n\tformControl: string;\n\trunes: Array<RuneInterface>;\n\trunesSelected: RunesSelectedType;\n\thandleRuneSelectChange(\n\t\te: React.ChangeEvent<HTMLSelectElement>,\n\t\truneType: string,\n\t\trunePath?: string\n\t): void;\n\thandleRuneExplanationChange(\n\t\te: React.ChangeEvent<HTMLTextAreaElement>,\n\t\truneType: string\n\t): void;\n};\n\nconst Keystone = (props: KeystoneProps) => {\n\tconst {\n\t\tformControl,\n\t\trunes,\n\t\trunesSelected,\n\t\thandleRuneSelectChange,\n\t\thandleRuneExplanationChange,\n\t} = props;\n\n\treturn (\n\t\t<>\n\t\t\t<Grid item xs={12} sm={6}>\n\t\t\t\t<LazyLoadImage\n\t\t\t\t\tsrc={`/images/wildriftrunes/${runesSelected.keystone.id}.png`}\n\t\t\t\t\tclassName={styles.runeImage}\n\t\t\t\t/>\n\n\t\t\t\t{\n\t\t\t\t\t<FormControl className={formControl}>\n\t\t\t\t\t\t<InputLabel shrink htmlFor='rune-select'>\n\t\t\t\t\t\t\tKeystone\n\t\t\t\t\t\t</InputLabel>\n\t\t\t\t\t\t<NativeSelect\n\t\t\t\t\t\t\tonChange={(e) => handleRuneSelectChange(e, 'keystone')}\n\t\t\t\t\t\t\tinputProps={{\n\t\t\t\t\t\t\t\tname: 'rune',\n\t\t\t\t\t\t\t\tid: 'rune-select',\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{runes\n\t\t\t\t\t\t\t\t.filter((rune) => rune.type === 'keystone')\n\t\t\t\t\t\t\t\t.map(({ id, runeName, url }: RuneInterface, index) => {\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t<option key={index} value={id}>\n\t\t\t\t\t\t\t\t\t\t\t{runeName}\n\t\t\t\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t</NativeSelect>\n\t\t\t\t\t\t<FormHelperText>Select a Keystone Rune</FormHelperText>\n\t\t\t\t\t</FormControl>\n\t\t\t\t}\n\t\t\t</Grid>\n\t\t\t<Grid item xs={12} sm={6}>\n\t\t\t\t<textarea\n\t\t\t\t\tid='runeKeystone'\n\t\t\t\t\tname='runeKeystone'\n\t\t\t\t\trows={6}\n\t\t\t\t\tplaceholder='Add an explanation for this rune'\n\t\t\t\t\tclassName={styles.explanationTextArea}\n\t\t\t\t\t// value={itemReason}\n\t\t\t\t\tonChange={(e) => handleRuneExplanationChange(e, 'keystone')}\n\t\t\t\t></textarea>\n\t\t\t</Grid>\n\t\t</>\n\t);\n};\n\nexport default Keystone;\n","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\components\\BuildSelection\\components\\RunesSelect\\components\\Domination.tsx",["190"],"import React from 'react';\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\n\n// MaterialUI\nimport Box from '@material-ui/core/Box';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport Grid from '@material-ui/core/Grid';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport NativeSelect from '@material-ui/core/NativeSelect';\n// Components\n// CSS\nimport styles from './rune.module.css';\n// Types\nimport {\n\tRuneInterface,\n\tRunesSelectedType,\n} from '../../../../../../../../utils/interfaces';\ntype DominationProps = {\n\tformControl: string;\n\trunes: Array<RuneInterface>;\n\trunesSelected: RunesSelectedType;\n\thandleRuneSelectChange(\n\t\te: React.ChangeEvent<HTMLSelectElement>,\n\t\truneType: string,\n\t\trunePath?: string\n\t): void;\n\thandleRuneExplanationChange(\n\t\te: React.ChangeEvent<HTMLTextAreaElement>,\n\t\truneType: string\n\t): void;\n};\n\nconst Domination = (props: DominationProps) => {\n\tconst {\n\t\tformControl,\n\t\trunes,\n\t\trunesSelected,\n\t\thandleRuneSelectChange,\n\t\thandleRuneExplanationChange,\n\t} = props;\n\n\treturn (\n\t\t<>\n\t\t\t<Grid item xs={12} sm={6}>\n\t\t\t\t<LazyLoadImage\n\t\t\t\t\tsrc={`/images/wildriftrunes/${runesSelected.domination.id}.png`}\n\t\t\t\t\tclassName={styles.runeImage}\n\t\t\t\t/>\n\n\t\t\t\t{\n\t\t\t\t\t<FormControl className={formControl}>\n\t\t\t\t\t\t<InputLabel shrink htmlFor='rune-select'>\n\t\t\t\t\t\t\tDomination (Slot 1)\n\t\t\t\t\t\t</InputLabel>\n\t\t\t\t\t\t<NativeSelect\n\t\t\t\t\t\t\tonChange={(e) =>\n\t\t\t\t\t\t\t\thandleRuneSelectChange(e, 'secondary', 'domination')\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tinputProps={{\n\t\t\t\t\t\t\t\tname: 'rune',\n\t\t\t\t\t\t\t\tid: 'rune-select',\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{runes\n\t\t\t\t\t\t\t\t.filter(\n\t\t\t\t\t\t\t\t\t(rune) =>\n\t\t\t\t\t\t\t\t\t\trune.type === 'secondary' && rune.path === 'domination'\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t.map(({ id, runeName, url }: RuneInterface, index) => {\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t<option key={index} value={id}>\n\t\t\t\t\t\t\t\t\t\t\t{runeName}\n\t\t\t\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t</NativeSelect>\n\t\t\t\t\t\t<FormHelperText>Select a Domination Rune</FormHelperText>\n\t\t\t\t\t</FormControl>\n\t\t\t\t}\n\t\t\t</Grid>\n\t\t\t<Grid item xs={12} sm={6}>\n\t\t\t\t<textarea\n\t\t\t\t\tid='runeDomination'\n\t\t\t\t\tname='runeDomination'\n\t\t\t\t\trows={6}\n\t\t\t\t\tplaceholder='Add an explanation for this rune'\n\t\t\t\t\tclassName={styles.explanationTextArea}\n\t\t\t\t\t// value={itemReason}\n\t\t\t\t\tonChange={(e) => handleRuneExplanationChange(e, 'domination')}\n\t\t\t\t></textarea>\n\t\t\t</Grid>\n\t\t</>\n\t);\n};\n\nexport default Domination;\n","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\components\\BuildSelection\\components\\RunesSelect\\components\\Resolve.tsx",["191"],"import React from 'react';\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\n\n// MaterialUI\nimport Box from '@material-ui/core/Box';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport Grid from '@material-ui/core/Grid';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport NativeSelect from '@material-ui/core/NativeSelect';\n// Components\n// CSS\nimport styles from './rune.module.css';\n// Types\nimport {\n\tRuneInterface,\n\tRunesSelectedType,\n} from '../../../../../../../../utils/interfaces';\ntype ResolveProps = {\n\tformControl: string;\n\trunes: Array<RuneInterface>;\n\trunesSelected: RunesSelectedType;\n\thandleRuneSelectChange(\n\t\te: React.ChangeEvent<HTMLSelectElement>,\n\t\truneType: string,\n\t\trunePath?: string\n\t): void;\n\thandleRuneExplanationChange(\n\t\te: React.ChangeEvent<HTMLTextAreaElement>,\n\t\truneType: string\n\t): void;\n};\n\nconst Resolve = (props: ResolveProps) => {\n\tconst {\n\t\tformControl,\n\t\trunes,\n\t\trunesSelected,\n\t\thandleRuneSelectChange,\n\t\thandleRuneExplanationChange,\n\t} = props;\n\n\treturn (\n\t\t<>\n\t\t\t<Grid item xs={12} sm={6}>\n\t\t\t\t<LazyLoadImage\n\t\t\t\t\tsrc={`/images/wildriftrunes/${runesSelected.resolve.id}.png`}\n\t\t\t\t\tclassName={styles.runeImage}\n\t\t\t\t/>\n\n\t\t\t\t{\n\t\t\t\t\t<FormControl className={formControl}>\n\t\t\t\t\t\t<InputLabel shrink htmlFor='rune-select'>\n\t\t\t\t\t\t\tResolve (Slot 2)\n\t\t\t\t\t\t</InputLabel>\n\t\t\t\t\t\t<NativeSelect\n\t\t\t\t\t\t\tonChange={(e) =>\n\t\t\t\t\t\t\t\thandleRuneSelectChange(e, 'secondary', 'resolve')\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tinputProps={{\n\t\t\t\t\t\t\t\tname: 'rune',\n\t\t\t\t\t\t\t\tid: 'rune-select',\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{runes\n\t\t\t\t\t\t\t\t.filter(\n\t\t\t\t\t\t\t\t\t(rune) => rune.type === 'secondary' && rune.path === 'resolve'\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t.map(({ id, runeName, url }: RuneInterface, index) => {\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t<option key={index} value={id}>\n\t\t\t\t\t\t\t\t\t\t\t{runeName}\n\t\t\t\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t</NativeSelect>\n\t\t\t\t\t\t<FormHelperText>Select a Resolve Rune</FormHelperText>\n\t\t\t\t\t</FormControl>\n\t\t\t\t}\n\t\t\t</Grid>\n\t\t\t<Grid item xs={12} sm={6}>\n\t\t\t\t<textarea\n\t\t\t\t\tid='runeResolve'\n\t\t\t\t\tname='runeResolve'\n\t\t\t\t\trows={6}\n\t\t\t\t\tplaceholder='Add an explanation for this rune'\n\t\t\t\t\tclassName={styles.explanationTextArea}\n\t\t\t\t\t// value={itemReason}\n\t\t\t\t\tonChange={(e) => handleRuneExplanationChange(e, 'resolve')}\n\t\t\t\t></textarea>\n\t\t\t</Grid>\n\t\t</>\n\t);\n};\n\nexport default Resolve;\n","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\components\\BuildSelection\\components\\RunesSelect\\components\\Inspiration.tsx",["192"],"import React from 'react';\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\n\n// MaterialUI\nimport Box from '@material-ui/core/Box';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport Grid from '@material-ui/core/Grid';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport NativeSelect from '@material-ui/core/NativeSelect';\n// Components\n// CSS\nimport styles from './rune.module.css';\n// Types\nimport {\n\tRuneInterface,\n\tRunesSelectedType,\n} from '../../../../../../../../utils/interfaces';\ntype InspirationProps = {\n\tformControl: string;\n\trunes: Array<RuneInterface>;\n\trunesSelected: RunesSelectedType;\n\thandleRuneSelectChange(\n\t\te: React.ChangeEvent<HTMLSelectElement>,\n\t\truneType: string,\n\t\trunePath?: string\n\t): void;\n\thandleRuneExplanationChange(\n\t\te: React.ChangeEvent<HTMLTextAreaElement>,\n\t\truneType: string\n\t): void;\n};\n\nconst Inspiration = (props: InspirationProps) => {\n\tconst {\n\t\tformControl,\n\t\trunes,\n\t\trunesSelected,\n\t\thandleRuneSelectChange,\n\t\thandleRuneExplanationChange,\n\t} = props;\n\n\treturn (\n\t\t<>\n\t\t\t<Grid item xs={12} sm={6}>\n\t\t\t\t<LazyLoadImage\n\t\t\t\t\tsrc={`/images/wildriftrunes/${runesSelected.inspiration.id}.png`}\n\t\t\t\t\tclassName={styles.runeImage}\n\t\t\t\t/>\n\n\t\t\t\t{\n\t\t\t\t\t<FormControl className={formControl}>\n\t\t\t\t\t\t<InputLabel shrink htmlFor='rune-select'>\n\t\t\t\t\t\t\tInspiration (Slot 3)\n\t\t\t\t\t\t</InputLabel>\n\t\t\t\t\t\t<NativeSelect\n\t\t\t\t\t\t\tonChange={(e) =>\n\t\t\t\t\t\t\t\thandleRuneSelectChange(e, 'secondary', 'inspiration')\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tinputProps={{\n\t\t\t\t\t\t\t\tname: 'rune',\n\t\t\t\t\t\t\t\tid: 'rune-select',\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{runes\n\t\t\t\t\t\t\t\t.filter(\n\t\t\t\t\t\t\t\t\t(rune) =>\n\t\t\t\t\t\t\t\t\t\trune.type === 'secondary' && rune.path === 'inspiration'\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t.map(({ id, runeName, url }: RuneInterface, index) => {\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t<option key={index} value={id}>\n\t\t\t\t\t\t\t\t\t\t\t{runeName}\n\t\t\t\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t</NativeSelect>\n\t\t\t\t\t\t<FormHelperText>Select a Inspiration Rune</FormHelperText>\n\t\t\t\t\t</FormControl>\n\t\t\t\t}\n\t\t\t</Grid>\n\t\t\t<Grid item xs={12} sm={6}>\n\t\t\t\t<textarea\n\t\t\t\t\tid='runeInspiration'\n\t\t\t\t\tname='runeInspiration'\n\t\t\t\t\trows={6}\n\t\t\t\t\tplaceholder='Add an explanation for this rune'\n\t\t\t\t\tclassName={styles.explanationTextArea}\n\t\t\t\t\t// value={itemReason}\n\t\t\t\t\tonChange={(e) => handleRuneExplanationChange(e, 'inspiration')}\n\t\t\t\t></textarea>\n\t\t\t</Grid>\n\t\t</>\n\t);\n};\n\nexport default Inspiration;\n","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\components\\BuildSelection\\components\\SpellsSelect\\SpellsSelect.tsx",["193","194","195","196","197","198","199","200","201","202"],"import React from 'react';\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\n\n// MaterialUI\nimport Box from '@material-ui/core/Box';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport Grid from '@material-ui/core/Grid';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport NativeSelect from '@material-ui/core/NativeSelect';\nimport Typography from '@material-ui/core/Typography';\n// Components\nimport Spell from './components/Spell';\n// CSS\nimport styles from './spellsselect.module.css';\n// Types\nimport {\n\tSpellInterface,\n\tSpellsSelectedType,\n} from '../../../../../../../utils/interfaces';\ntype SpellsSelectProps = {\n\tformControl: string;\n\tspells: Array<SpellInterface>;\n\tspellsSelected: SpellsSelectedType;\n\thandleSpellSelectChange(\n\t\te: React.ChangeEvent<HTMLSelectElement>,\n\t\tspellNumber: string\n\t): void;\n};\n\nconst SpellsSelect = (props: SpellsSelectProps) => {\n\tconst {\n\t\tformControl,\n\t\tspells,\n\t\tspellsSelected,\n\t\thandleSpellSelectChange,\n\t} = props;\n\tconst { spellOne, spellTwo } = spellsSelected;\n\n\treturn (\n\t\t<Box>\n\t\t\t<p>6. Summoner Spells</p>\n\n\t\t\t<Grid container item xs={12}>\n\t\t\t\t{/* Spell One */}\n\t\t\t\t<Spell\n\t\t\t\t\tformControl={formControl}\n\t\t\t\t\tspells={spells}\n\t\t\t\t\tspellNumber={1}\n\t\t\t\t\tspellsSelected={spellsSelected}\n\t\t\t\t\thandleSpellSelectChange={handleSpellSelectChange}\n\t\t\t\t/>\n\n\t\t\t\t{/* Spell Two */}\n\t\t\t\t<Spell\n\t\t\t\t\tformControl={formControl}\n\t\t\t\t\tspells={spells}\n\t\t\t\t\tspellNumber={2}\n\t\t\t\t\tspellsSelected={spellsSelected}\n\t\t\t\t\thandleSpellSelectChange={handleSpellSelectChange}\n\t\t\t\t/>\n\t\t\t</Grid>\n\t\t</Box>\n\t);\n};\n\nexport default SpellsSelect;\n","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\components\\BuildSelection\\components\\SpellsSelect\\components\\Spell.tsx",["203","204","205","206"],"import React from 'react';\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\n\n// MaterialUI\nimport Box from '@material-ui/core/Box';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport Grid from '@material-ui/core/Grid';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport NativeSelect from '@material-ui/core/NativeSelect';\nimport Typography from '@material-ui/core/Typography';\n// Components\n// CSS\nimport styles from './spell.module.css';\n// Types\nimport {\n\tSpellInterface,\n\tSpellsSelectedType,\n} from '../../../../../../../../utils/interfaces';\ntype SpellProps = {\n\tformControl: string;\n\tspells: Array<SpellInterface>;\n\tspellNumber: number;\n\tspellsSelected: SpellsSelectedType;\n\thandleSpellSelectChange(\n\t\te: React.ChangeEvent<HTMLSelectElement>,\n\t\tspellNumber: string\n\t): void;\n};\n\nconst Spell = (props: SpellProps) => {\n\tconst {\n\t\tformControl,\n\t\tspells,\n\t\tspellNumber,\n\t\tspellsSelected,\n\t\thandleSpellSelectChange,\n\t} = props;\n\tconst { spellOne, spellTwo } = spellsSelected;\n\n\treturn (\n\t\t<Grid item xs={12} sm={3} style={{ marginTop: '10px' }}>\n\t\t\t<LazyLoadImage\n\t\t\t\tsrc={`/images/wildriftspells/${\n\t\t\t\t\tspellNumber === 1 ? spellOne.id : spellTwo.id\n\t\t\t\t}.jpg`}\n\t\t\t\tstyle={{ width: '90px' }}\n\t\t\t/>\n\n\t\t\t{\n\t\t\t\t<FormControl className={formControl}>\n\t\t\t\t\t<InputLabel shrink htmlFor='spell-select'>\n\t\t\t\t\t\t{spellNumber === 1 ? 'Spell One' : 'Spell Two'}\n\t\t\t\t\t</InputLabel>\n\t\t\t\t\t<NativeSelect\n\t\t\t\t\t\tdefaultValue={`${spellNumber === 1 ? spellOne.id : spellTwo.id}`}\n\t\t\t\t\t\tonChange={(e) =>\n\t\t\t\t\t\t\thandleSpellSelectChange(\n\t\t\t\t\t\t\t\te,\n\t\t\t\t\t\t\t\t`${spellNumber === 1 ? 'spellOne' : 'spellTwo'}`\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t}\n\t\t\t\t\t\tinputProps={{\n\t\t\t\t\t\t\tname: 'spell',\n\t\t\t\t\t\t\tid: 'spell-select',\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t{spells.map(({ id, spellName, url }: SpellInterface, index) => {\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<option key={index} value={id}>\n\t\t\t\t\t\t\t\t\t{spellName}\n\t\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t})}\n\t\t\t\t\t</NativeSelect>\n\t\t\t\t\t<FormHelperText>Select a Spell</FormHelperText>\n\t\t\t\t</FormControl>\n\t\t\t}\n\t\t</Grid>\n\t);\n};\n\nexport default Spell;\n","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\components\\Loading\\Backdrop.tsx",[],{"ruleId":"207","replacedBy":"208"},{"ruleId":"209","replacedBy":"210"},{"ruleId":"211","severity":1,"message":"212","line":51,"column":5,"nodeType":"213","endLine":51,"endColumn":7,"suggestions":"214"},{"ruleId":"215","severity":1,"message":"216","line":55,"column":70,"nodeType":"217","messageId":"218","endLine":55,"endColumn":72},{"ruleId":"211","severity":1,"message":"219","line":73,"column":5,"nodeType":"213","endLine":73,"endColumn":17,"suggestions":"220"},{"ruleId":"211","severity":1,"message":"219","line":82,"column":5,"nodeType":"213","endLine":82,"endColumn":21,"suggestions":"221"},{"ruleId":"222","severity":1,"message":"223","line":4,"column":8,"nodeType":"224","messageId":"225","endLine":4,"endColumn":18},{"ruleId":"222","severity":1,"message":"223","line":5,"column":8,"nodeType":"224","messageId":"225","endLine":5,"endColumn":18},{"ruleId":"226","severity":1,"message":"227","line":58,"column":8,"nodeType":"228","endLine":58,"endColumn":74},{"ruleId":"222","severity":1,"message":"229","line":16,"column":8,"nodeType":"224","messageId":"225","endLine":16,"endColumn":14},{"ruleId":"222","severity":1,"message":"230","line":19,"column":2,"nodeType":"224","messageId":"225","endLine":19,"endColumn":16},{"ruleId":"222","severity":1,"message":"231","line":20,"column":2,"nodeType":"224","messageId":"225","endLine":20,"endColumn":19},{"ruleId":"222","severity":1,"message":"232","line":100,"column":10,"nodeType":"224","messageId":"225","endLine":100,"endColumn":24},{"ruleId":"222","severity":1,"message":"233","line":1,"column":17,"nodeType":"224","messageId":"225","endLine":1,"endColumn":25},{"ruleId":"222","severity":1,"message":"223","line":7,"column":8,"nodeType":"224","messageId":"225","endLine":7,"endColumn":18},{"ruleId":"222","severity":1,"message":"234","line":54,"column":8,"nodeType":"224","messageId":"225","endLine":54,"endColumn":19},{"ruleId":"222","severity":1,"message":"235","line":5,"column":8,"nodeType":"224","messageId":"225","endLine":5,"endColumn":19},{"ruleId":"222","severity":1,"message":"236","line":6,"column":8,"nodeType":"224","messageId":"225","endLine":6,"endColumn":24},{"ruleId":"222","severity":1,"message":"237","line":7,"column":8,"nodeType":"224","messageId":"225","endLine":7,"endColumn":22},{"ruleId":"222","severity":1,"message":"238","line":9,"column":8,"nodeType":"224","messageId":"225","endLine":9,"endColumn":18},{"ruleId":"222","severity":1,"message":"239","line":10,"column":8,"nodeType":"224","messageId":"225","endLine":10,"endColumn":20},{"ruleId":"222","severity":1,"message":"240","line":11,"column":8,"nodeType":"224","messageId":"225","endLine":11,"endColumn":14},{"ruleId":"222","severity":1,"message":"229","line":14,"column":8,"nodeType":"224","messageId":"225","endLine":14,"endColumn":14},{"ruleId":"222","severity":1,"message":"230","line":17,"column":2,"nodeType":"224","messageId":"225","endLine":17,"endColumn":16},{"ruleId":"222","severity":1,"message":"231","line":18,"column":2,"nodeType":"224","messageId":"225","endLine":18,"endColumn":19},{"ruleId":"222","severity":1,"message":"241","line":19,"column":2,"nodeType":"224","messageId":"225","endLine":19,"endColumn":19},{"ruleId":"222","severity":1,"message":"242","line":20,"column":2,"nodeType":"224","messageId":"225","endLine":20,"endColumn":15},{"ruleId":"222","severity":1,"message":"243","line":21,"column":2,"nodeType":"224","messageId":"225","endLine":21,"endColumn":15},{"ruleId":"222","severity":1,"message":"244","line":22,"column":2,"nodeType":"224","messageId":"225","endLine":22,"endColumn":15},{"ruleId":"222","severity":1,"message":"245","line":23,"column":2,"nodeType":"224","messageId":"225","endLine":23,"endColumn":16},{"ruleId":"222","severity":1,"message":"246","line":31,"column":10,"nodeType":"224","messageId":"225","endLine":31,"endColumn":21},{"ruleId":"211","severity":1,"message":"247","line":56,"column":5,"nodeType":"213","endLine":56,"endColumn":28,"suggestions":"248"},{"ruleId":"222","severity":1,"message":"249","line":1,"column":38,"nodeType":"224","messageId":"225","endLine":1,"endColumn":52},{"ruleId":"222","severity":1,"message":"250","line":4,"column":8,"nodeType":"224","messageId":"225","endLine":4,"endColumn":11},{"ruleId":"222","severity":1,"message":"229","line":12,"column":8,"nodeType":"224","messageId":"225","endLine":12,"endColumn":14},{"ruleId":"222","severity":1,"message":"230","line":15,"column":2,"nodeType":"224","messageId":"225","endLine":15,"endColumn":16},{"ruleId":"222","severity":1,"message":"231","line":16,"column":2,"nodeType":"224","messageId":"225","endLine":16,"endColumn":19},{"ruleId":"222","severity":1,"message":"243","line":19,"column":2,"nodeType":"224","messageId":"225","endLine":19,"endColumn":15},{"ruleId":"251","severity":1,"message":"252","line":334,"column":35,"nodeType":"253","messageId":"254","endLine":334,"endColumn":37},{"ruleId":"211","severity":1,"message":"247","line":370,"column":5,"nodeType":"213","endLine":370,"endColumn":70,"suggestions":"255"},{"ruleId":"222","severity":1,"message":"230","line":13,"column":10,"nodeType":"224","messageId":"225","endLine":13,"endColumn":24},{"ruleId":"222","severity":1,"message":"229","line":15,"column":8,"nodeType":"224","messageId":"225","endLine":15,"endColumn":14},{"ruleId":"211","severity":1,"message":"247","line":60,"column":5,"nodeType":"213","endLine":60,"endColumn":29,"suggestions":"256"},{"ruleId":"222","severity":1,"message":"230","line":9,"column":2,"nodeType":"224","messageId":"225","endLine":9,"endColumn":16},{"ruleId":"222","severity":1,"message":"231","line":10,"column":2,"nodeType":"224","messageId":"225","endLine":10,"endColumn":19},{"ruleId":"222","severity":1,"message":"241","line":11,"column":2,"nodeType":"224","messageId":"225","endLine":11,"endColumn":19},{"ruleId":"222","severity":1,"message":"242","line":12,"column":2,"nodeType":"224","messageId":"225","endLine":12,"endColumn":15},{"ruleId":"222","severity":1,"message":"243","line":13,"column":2,"nodeType":"224","messageId":"225","endLine":13,"endColumn":15},{"ruleId":"222","severity":1,"message":"244","line":14,"column":2,"nodeType":"224","messageId":"225","endLine":14,"endColumn":15},{"ruleId":"222","severity":1,"message":"245","line":15,"column":2,"nodeType":"224","messageId":"225","endLine":15,"endColumn":16},{"ruleId":"222","severity":1,"message":"233","line":1,"column":17,"nodeType":"224","messageId":"225","endLine":1,"endColumn":25},{"ruleId":"222","severity":1,"message":"257","line":2,"column":10,"nodeType":"224","messageId":"225","endLine":2,"endColumn":23},{"ruleId":"222","severity":1,"message":"235","line":6,"column":8,"nodeType":"224","messageId":"225","endLine":6,"endColumn":19},{"ruleId":"222","severity":1,"message":"237","line":7,"column":8,"nodeType":"224","messageId":"225","endLine":7,"endColumn":22},{"ruleId":"222","severity":1,"message":"238","line":9,"column":8,"nodeType":"224","messageId":"225","endLine":9,"endColumn":18},{"ruleId":"222","severity":1,"message":"239","line":10,"column":8,"nodeType":"224","messageId":"225","endLine":10,"endColumn":20},{"ruleId":"222","severity":1,"message":"229","line":17,"column":8,"nodeType":"224","messageId":"225","endLine":17,"endColumn":14},{"ruleId":"222","severity":1,"message":"250","line":5,"column":8,"nodeType":"224","messageId":"225","endLine":5,"endColumn":11},{"ruleId":"222","severity":1,"message":"250","line":5,"column":8,"nodeType":"224","messageId":"225","endLine":5,"endColumn":11},{"ruleId":"222","severity":1,"message":"250","line":5,"column":8,"nodeType":"224","messageId":"225","endLine":5,"endColumn":11},{"ruleId":"222","severity":1,"message":"250","line":5,"column":8,"nodeType":"224","messageId":"225","endLine":5,"endColumn":11},{"ruleId":"222","severity":1,"message":"257","line":2,"column":10,"nodeType":"224","messageId":"225","endLine":2,"endColumn":23},{"ruleId":"222","severity":1,"message":"235","line":6,"column":8,"nodeType":"224","messageId":"225","endLine":6,"endColumn":19},{"ruleId":"222","severity":1,"message":"236","line":7,"column":8,"nodeType":"224","messageId":"225","endLine":7,"endColumn":24},{"ruleId":"222","severity":1,"message":"237","line":8,"column":8,"nodeType":"224","messageId":"225","endLine":8,"endColumn":22},{"ruleId":"222","severity":1,"message":"238","line":10,"column":8,"nodeType":"224","messageId":"225","endLine":10,"endColumn":18},{"ruleId":"222","severity":1,"message":"239","line":11,"column":8,"nodeType":"224","messageId":"225","endLine":11,"endColumn":20},{"ruleId":"222","severity":1,"message":"223","line":12,"column":8,"nodeType":"224","messageId":"225","endLine":12,"endColumn":18},{"ruleId":"222","severity":1,"message":"229","line":16,"column":8,"nodeType":"224","messageId":"225","endLine":16,"endColumn":14},{"ruleId":"222","severity":1,"message":"258","line":39,"column":10,"nodeType":"224","messageId":"225","endLine":39,"endColumn":18},{"ruleId":"222","severity":1,"message":"259","line":39,"column":20,"nodeType":"224","messageId":"225","endLine":39,"endColumn":28},{"ruleId":"222","severity":1,"message":"250","line":5,"column":8,"nodeType":"224","messageId":"225","endLine":5,"endColumn":11},{"ruleId":"222","severity":1,"message":"236","line":7,"column":8,"nodeType":"224","messageId":"225","endLine":7,"endColumn":24},{"ruleId":"222","severity":1,"message":"223","line":12,"column":8,"nodeType":"224","messageId":"225","endLine":12,"endColumn":18},{"ruleId":"222","severity":1,"message":"229","line":15,"column":8,"nodeType":"224","messageId":"225","endLine":15,"endColumn":14},"no-native-reassign",["260"],"no-negated-in-lhs",["261"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setChampions'. Either include it or remove the dependency array.","ArrayExpression",["262"],"array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","React Hook useEffect has a missing dependency: 'champions'. Either include it or remove the dependency array.",["263"],["264"],"@typescript-eslint/no-unused-vars","'Typography' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'styles' is defined but never used.","'BuildInterface' is defined but never used.","'CountersInterface' is defined but never used.","'saveToDatabase' is assigned a value but never used.","'useState' is defined but never used.","'handleReset' is assigned a value but never used.","'FormControl' is defined but never used.","'FormControlLabel' is defined but never used.","'FormHelperText' is defined but never used.","'InputLabel' is defined but never used.","'NativeSelect' is defined but never used.","'Select' is defined but never used.","'ChampionInterface' is defined but never used.","'ItemInterface' is defined but never used.","'RankInterface' is defined but never used.","'RuneInterface' is defined but never used.","'SpellInterface' is defined but never used.","'formControl' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'setBuild'. Either include it or remove the dependency array.",["265"],"'SetStateAction' is defined but never used.","'Box' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected",["266"],["267"],"'LazyLoadImage' is defined but never used.","'spellOne' is assigned a value but never used.","'spellTwo' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"268","fix":"269"},{"desc":"270","fix":"271"},{"desc":"272","fix":"273"},{"desc":"274","fix":"275"},{"desc":"276","fix":"277"},{"desc":"278","fix":"279"},"Update the dependencies array to be: [setChampions]",{"range":"280","text":"281"},"Update the dependencies array to be: [champions, roleFilter]",{"range":"282","text":"283"},"Update the dependencies array to be: [championSearch, champions]",{"range":"284","text":"285"},"Update the dependencies array to be: [buildTitle, buildRole, setBuild]",{"range":"286","text":"287"},"Update the dependencies array to be: [championSelected, itemsConfirmed, runesSelected, setBuild, spellsSelected]",{"range":"288","text":"289"},"Update the dependencies array to be: [username, rankSelected, setBuild]",{"range":"290","text":"291"},[1349,1351],"[setChampions]",[1874,1886],"[champions, roleFilter]",[2156,2172],"[championSearch, champions]",[1632,1655],"[buildTitle, buildRole, setBuild]",[10800,10865],"[championSelected, itemsConfirmed, runesSelected, setBuild, spellsSelected]",[1881,1905],"[username, rankSelected, setBuild]"]