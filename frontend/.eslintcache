[{"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\index.tsx":"1","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\reportWebVitals.ts":"2","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\components\\Layout.tsx":"3","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\components\\Header\\Header.tsx":"4","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\components\\Footer\\Footer.tsx":"5","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Landing\\Landing.tsx":"6","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\App\\App.tsx":"7","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Landing\\components\\FilterBy\\FilterBy.tsx":"8","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Landing\\components\\Champions\\Champions.tsx":"9","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\components\\Error\\404\\PageNotFound.tsx":"10","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\components\\Header\\components\\AppBar.tsx":"11","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\CreateBuild.tsx":"12","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\components\\Stepper\\Stepper.tsx":"13","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\components\\BuildInformation\\BuildInformation.tsx":"14","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\components\\BuildSelection\\BuildSelection.tsx":"15","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\components\\PlayerInformation\\PlayerInformation.tsx":"16","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\components\\CreateBuildHeader\\CreateBuildHeader.tsx":"17","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\components\\BuildSelection\\components\\ChampionSelect\\ChampionSelect.tsx":"18","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\components\\BuildSelection\\components\\ItemsSelect\\ItemsSelect.tsx":"19","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\components\\BuildSelection\\components\\ItemsSelected\\ItemsSelected.tsx":"20","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\components\\BuildSelection\\components\\RunesSelect\\RunesSelect.tsx":"21","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\components\\BuildSelection\\components\\RunesSelect\\components\\Keystone.tsx":"22","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\components\\BuildSelection\\components\\RunesSelect\\components\\Domination.tsx":"23","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\components\\BuildSelection\\components\\RunesSelect\\components\\Resolve.tsx":"24","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\components\\BuildSelection\\components\\RunesSelect\\components\\Inspiration.tsx":"25","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\components\\BuildSelection\\components\\SpellsSelect\\SpellsSelect.tsx":"26","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\components\\BuildSelection\\components\\SpellsSelect\\components\\Spell.tsx":"27","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\components\\Loading\\Backdrop.tsx":"28","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\store\\actions.js":"29","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\store\\reducers\\gameData.js":"30","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\store\\reducers\\build.js":"31","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\utils\\interfaces.ts":"32"},{"size":887,"mtime":1613962743071,"results":"33","hashOfConfig":"34"},{"size":425,"mtime":499162500000,"results":"35","hashOfConfig":"34"},{"size":643,"mtime":1613515741251,"results":"36","hashOfConfig":"34"},{"size":278,"mtime":1613392509686,"results":"37","hashOfConfig":"34"},{"size":1616,"mtime":1613521382916,"results":"38","hashOfConfig":"34"},{"size":2792,"mtime":1614009865090,"results":"39","hashOfConfig":"34"},{"size":5240,"mtime":1614009056606,"results":"40","hashOfConfig":"34"},{"size":1718,"mtime":1613388995743,"results":"41","hashOfConfig":"34"},{"size":1280,"mtime":1614008705912,"results":"42","hashOfConfig":"34"},{"size":121,"mtime":1613391402398,"results":"43","hashOfConfig":"34"},{"size":1863,"mtime":1613392497376,"results":"44","hashOfConfig":"34"},{"size":3609,"mtime":1614014375721,"results":"45","hashOfConfig":"34"},{"size":1941,"mtime":1614013650075,"results":"46","hashOfConfig":"34"},{"size":2379,"mtime":1614010773404,"results":"47","hashOfConfig":"34"},{"size":1243,"mtime":1614012043788,"results":"48","hashOfConfig":"34"},{"size":3345,"mtime":1614006023288,"results":"49","hashOfConfig":"34"},{"size":954,"mtime":1613396524964,"results":"50","hashOfConfig":"34"},{"size":2779,"mtime":1613975100360,"results":"51","hashOfConfig":"34"},{"size":6388,"mtime":1614011234841,"results":"52","hashOfConfig":"34"},{"size":4629,"mtime":1614012335220,"results":"53","hashOfConfig":"34"},{"size":4397,"mtime":1614009728846,"results":"54","hashOfConfig":"34"},{"size":2765,"mtime":1613984850043,"results":"55","hashOfConfig":"34"},{"size":2807,"mtime":1613985232156,"results":"56","hashOfConfig":"34"},{"size":2752,"mtime":1613986536189,"results":"57","hashOfConfig":"34"},{"size":2822,"mtime":1613986453175,"results":"58","hashOfConfig":"34"},{"size":2549,"mtime":1614005013603,"results":"59","hashOfConfig":"34"},{"size":2163,"mtime":1614004851831,"results":"60","hashOfConfig":"34"},{"size":614,"mtime":1613638537382,"results":"61","hashOfConfig":"34"},{"size":1176,"mtime":1614010226889,"results":"62","hashOfConfig":"34"},{"size":864,"mtime":1614007449463,"results":"63","hashOfConfig":"34"},{"size":5248,"mtime":1614011431375,"results":"64","hashOfConfig":"34"},{"size":1771,"mtime":1613986751089,"results":"65","hashOfConfig":"34"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},"q16prs",{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"68"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"68"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"93","messages":"94","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"68"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"68"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"68"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"68"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"68"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"68"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"68"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"68"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"68"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"68"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"68"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"68"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"68"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"68"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\index.tsx",[],["147","148"],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\reportWebVitals.ts",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\components\\Layout.tsx",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\components\\Header\\Header.tsx",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\components\\Footer\\Footer.tsx",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Landing\\Landing.tsx",["149","150","151","152","153"],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\App\\App.tsx",["154","155","156","157"],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Landing\\components\\FilterBy\\FilterBy.tsx",["158"],"import React from 'react';\n\n// MaterialUI\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\n// Components\n// CSS\nimport styles from './filterby.module.css';\n// Types\ntype FilterByProps = {\n\tchampionSearch: string;\n\thandleChampionSearchChange(e: React.ChangeEvent<HTMLInputElement>): void;\n\tsetRoleFilter(role: string): void;\n};\n\nconst FilterBy = (props: FilterByProps) => {\n\tconst { championSearch, handleChampionSearchChange, setRoleFilter } = props;\n\n\treturn (\n\t\t<Box className={styles.filterContainer}>\n\t\t\t<Grid container>\n\t\t\t\t<Grid item xs={12} sm={10}>\n\t\t\t\t\t<Box className={styles.rolesListContainer}>\n\t\t\t\t\t\t<ul className={styles.rolesList}>\n\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t<span onClick={() => setRoleFilter('all')}>All</span>\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t<span onClick={() => setRoleFilter('top')}>Top</span>\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t<span onClick={() => setRoleFilter('jungle')}>Jungle</span>\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t<span onClick={() => setRoleFilter('middle')}>Middle</span>\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t<span onClick={() => setRoleFilter('bottom')}>Bottom</span>\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t<span onClick={() => setRoleFilter('support')}>Support</span>\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t</Box>\n\t\t\t\t</Grid>\n\t\t\t\t<Grid item xs={12} sm={2}>\n\t\t\t\t\t<Box className={styles.searchForChampionContainer}>\n\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\tvalue={championSearch}\n\t\t\t\t\t\t\tonChange={handleChampionSearchChange}\n\t\t\t\t\t\t\tlabel='Search a Champion'\n\t\t\t\t\t\t\tvariant='outlined'\n\t\t\t\t\t\t\tsize='small'\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Box>\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t</Box>\n\t);\n};\n\nexport default FilterBy;\n","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Landing\\components\\Champions\\Champions.tsx",["159"],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\components\\Error\\404\\PageNotFound.tsx",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\components\\Header\\components\\AppBar.tsx",["160"],"import React from 'react';\n\n// MaterialUI\nimport { makeStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport useScrollTrigger from '@material-ui/core/useScrollTrigger';\nimport Slide from '@material-ui/core/Slide';\n// Components\n// CSS\nimport styles from './appbar.module.css';\nconst useStyles = makeStyles((theme) => ({\n\troot: {\n\t\tflexGrow: 1,\n\t},\n\tmenuLinks: {\n\t\tmarginRight: theme.spacing(2),\n\t},\n\ttitle: {\n\t\tflexGrow: 1,\n\t},\n}));\n//Types\n\nfunction HideOnScroll(props: any) {\n\tconst { children, window } = props;\n\t// Note that you normally won't need to set the window ref as useScrollTrigger\n\t// will default to window.\n\t// This is only being set here because the demo is in an iframe.\n\tconst trigger = useScrollTrigger({ target: window ? window() : undefined });\n\n\treturn (\n\t\t<Slide appear={false} direction='down' in={!trigger}>\n\t\t\t{children}\n\t\t</Slide>\n\t);\n}\n\nHideOnScroll.propTypes = {\n\tchildren: PropTypes.element.isRequired,\n\t/**\n\t * Injected by the documentation to work in an iframe.\n\t * You won't need it on your project.\n\t */\n\twindow: PropTypes.func,\n};\n\nconst AppBarComponent = (props: any) => {\n\tconst classes = useStyles();\n\n\treturn (\n\t\t<div className={classes.root}>\n\t\t\t<HideOnScroll {...props}>\n\t\t\t\t<AppBar className={styles.header}>\n\t\t\t\t\t<Toolbar>\n\t\t\t\t\t\t<a href='/' className={classes.title}>\n\t\t\t\t\t\t\t<img src='/images/riftbuilds.png' className={styles.headerLogo} />\n\t\t\t\t\t\t</a>\n\t\t\t\t\t\t<a href='/' className={styles.headerLink}>\n\t\t\t\t\t\t\t<p className={classes.menuLinks}>Home</p>\n\t\t\t\t\t\t</a>\n\t\t\t\t\t\t<a href='/create' className={styles.headerLink}>\n\t\t\t\t\t\t\t<p className={classes.menuLinks}>Create</p>\n\t\t\t\t\t\t</a>\n\t\t\t\t\t</Toolbar>\n\t\t\t\t</AppBar>\n\t\t\t</HideOnScroll>\n\t\t\t<Toolbar />\n\t\t</div>\n\t);\n};\n\nexport default AppBarComponent;\n","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\CreateBuild.tsx",["161","162","163"],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\components\\Stepper\\Stepper.tsx",["164","165","166"],"import React, { useState } from 'react';\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\n\n// MaterialUI\nimport Box from '@material-ui/core/Box';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\n// Types\ntype StepperProps = {\n\tactiveStep: number;\n\tcomponentToDisplay: React.ReactNode;\n\tsetActiveStep: (step: any) => void;\n\tsubmitBuild: () => void;\n};\n// CSS\nconst useStyles = makeStyles((theme: Theme) =>\n\tcreateStyles({\n\t\troot: {\n\t\t\twidth: '100%',\n\t\t},\n\t\tbackButton: {\n\t\t\tmarginRight: theme.spacing(1),\n\t\t},\n\t\tinstructions: {\n\t\t\tmarginTop: theme.spacing(1),\n\t\t\tmarginBottom: theme.spacing(1),\n\t\t},\n\t})\n);\n\nfunction getSteps() {\n\treturn ['Build Information', 'Create Build', 'Player Information'];\n}\n\nconst HorizontalLabelPositionBelowStepper = (props: StepperProps) => {\n\tconst { activeStep, setActiveStep, componentToDisplay, submitBuild } = props;\n\n\tconst classes = useStyles();\n\tconst steps = getSteps();\n\n\tconst handleNext = () => {\n\t\tif (activeStep === steps.length - 1) {\n\t\t\tsubmitBuild();\n\t\t}\n\t\tsetActiveStep((prevActiveStep: number) => prevActiveStep + 1);\n\t};\n\n\tconst handleBack = () => {\n\t\tsetActiveStep((prevActiveStep: number) => prevActiveStep - 1);\n\t};\n\n\tconst handleReset = () => {\n\t\tsetActiveStep(0);\n\t};\n\n\treturn (\n\t\t<div className={classes.root}>\n\t\t\t<Box style={{ padding: '10px 0' }}>{componentToDisplay}</Box>\n\t\t\t<Box display='flex' flexDirection='row-reverse'>\n\t\t\t\t{activeStep === steps.length - 1 ? (\n\t\t\t\t\t<Button variant='contained' color='primary' onClick={submitBuild}>\n\t\t\t\t\t\tCreate Build\n\t\t\t\t\t</Button>\n\t\t\t\t) : (\n\t\t\t\t\t<Button variant='contained' color='primary' onClick={handleNext}>\n\t\t\t\t\t\tNext\n\t\t\t\t\t</Button>\n\t\t\t\t)}\n\n\t\t\t\t<Button\n\t\t\t\t\tdisabled={activeStep === 0}\n\t\t\t\t\tonClick={handleBack}\n\t\t\t\t\tclassName={classes.backButton}\n\t\t\t\t>\n\t\t\t\t\tBack\n\t\t\t\t</Button>\n\t\t\t</Box>\n\t\t</div>\n\t);\n};\n\nexport default HorizontalLabelPositionBelowStepper;\n","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\components\\BuildInformation\\BuildInformation.tsx",["167","168"],"import React from 'react';\n\n// Redux\nimport { connect, ConnectedProps } from 'react-redux';\nimport actionTypes from '../../../../../store/actions';\n\n// MaterialUI\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\n// Components\n// CSS\nimport styles from './createbuild.module.css';\n// Types\nimport { RootState } from '../../../../../utils/interfaces';\n\nconst BuildInformation = (props: BuildInformationProps) => {\n\t// Build PROPS\n\tconst { buildTitle, buildRole, setBuildTitle, setBuildRole } = props;\n\n\tconst roles = ['Top', 'Jungle', 'Middle', 'Bottom', 'Support'];\n\n\t// =============== Build Title =============== //\n\tconst handleBuildTitleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n\t\tconst { value } = e.target;\n\n\t\tsetBuildTitle(value);\n\t};\n\n\t// =============== Build Role =============== //\n\tconst handleBuildRoleChange = (e: React.ChangeEvent<HTMLSelectElement>) => {\n\t\tconst { value } = e.target;\n\n\t\tsetBuildRole(value as string);\n\t};\n\n\treturn (\n\t\t<Grid container spacing={3}>\n\t\t\t<Grid item xs={12} sm={6}>\n\t\t\t\t<Box>\n\t\t\t\t\t<p>1. Build Title</p>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\tplaceholder='Build title'\n\t\t\t\t\t\tstyle={{ width: '100%' }}\n\t\t\t\t\t\tonChange={(e) => handleBuildTitleChange(e)}\n\t\t\t\t\t/>\n\t\t\t\t</Box>\n\t\t\t</Grid>\n\t\t\t<Grid item xs={12} sm={6}>\n\t\t\t\t<Box>\n\t\t\t\t\t<p>2. Role</p>\n\t\t\t\t\t{\n\t\t\t\t\t\t<select\n\t\t\t\t\t\t\tdefaultValue='Top'\n\t\t\t\t\t\t\tvalue={buildRole}\n\t\t\t\t\t\t\tonChange={handleBuildRoleChange}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{roles.map((role, index) => {\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<option key={index} value={role}>\n\t\t\t\t\t\t\t\t\t\t{role}\n\t\t\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t</select>\n\t\t\t\t\t}\n\t\t\t\t</Box>\n\t\t\t</Grid>\n\t\t</Grid>\n\t);\n};\n\n// https://redux.js.org/recipes/usage-with-typescript\nconst mapStateToProps = (state: RootState) => {\n\treturn {\n\t\tbuildTitle: state.build.buildTitle,\n\t\tbuildRole: state.build.buildRole,\n\t};\n};\n\nconst mapDispatchToProps = (dispatch: any) => {\n\treturn {\n\t\tsetBuildTitle: (newBuildTitle: string) =>\n\t\t\tdispatch({ type: actionTypes.BUILD_SET_BUILDTITLE, data: newBuildTitle }),\n\t\tsetBuildRole: (newBuildRole: string) =>\n\t\t\tdispatch({ type: actionTypes.BUILD_SET_BUILDROLE, data: newBuildRole }),\n\t};\n};\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\n\ntype PropsFromRedux = ConnectedProps<typeof connector>;\n\ntype BuildInformationProps = PropsFromRedux;\n\nexport default connector(BuildInformation);\n","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\components\\BuildSelection\\BuildSelection.tsx",["169","170","171","172","173","174","175","176","177","178","179","180"],"import React, { useState, useEffect } from 'react';\n\n// MaterialUI\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\n// Components\nimport ChampionSelect from './components/ChampionSelect/ChampionSelect';\nimport ItemsSelect from './components/ItemsSelect/ItemsSelect';\nimport RunesSelect from './components/RunesSelect/RunesSelect';\nimport SpellsSelect from './components/SpellsSelect/SpellsSelect';\n// CSS\nimport styles from './buildselection.module.css';\n// Types\nimport {\n\tBuildInterface,\n\tCountersInterface,\n\tChampionInterface,\n\tItemInterface,\n\tRankInterface,\n\tRuneInterface,\n\tSpellInterface,\n\tRootState,\n} from '../../../../../utils/interfaces';\ntype BuildSelectionProps = {\n\tformControl: string;\n};\n\nconst BuildSelection = (props: BuildSelectionProps) => {\n\tconst { formControl } = props;\n\n\treturn (\n\t\t<Grid container spacing={3}>\n\t\t\t<Grid item xs={12}>\n\t\t\t\t<ChampionSelect formControl={formControl} />\n\t\t\t</Grid>\n\t\t\t<Grid item xs={12}>\n\t\t\t\t<ItemsSelect formControl={formControl} />\n\t\t\t</Grid>\n\t\t\t<Grid item xs={12}>\n\t\t\t\t<RunesSelect formControl={formControl} />\n\t\t\t</Grid>\n\t\t\t<Grid item xs={12}>\n\t\t\t\t<SpellsSelect formControl={formControl} />\n\t\t\t</Grid>\n\t\t</Grid>\n\t);\n};\n\nexport default BuildSelection;\n","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\components\\PlayerInformation\\PlayerInformation.tsx",["181","182","183","184","185"],"import React, { useState, useEffect } from 'react';\n// @ts-ignore - No types for this module\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\n\n// Redux\nimport { connect, ConnectedProps } from 'react-redux';\nimport actionTypes from '../../../../../store/actions';\n\n// MaterialUI\nimport Box from '@material-ui/core/Box';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport Grid from '@material-ui/core/Grid';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport NativeSelect from '@material-ui/core/NativeSelect';\n// Components\n// Types\nimport {\n\tBuildInterface,\n\tRankInterface,\n\tRootState,\n} from '../../../../../utils/interfaces';\n// CSS\nimport styles from './playerinformation.module.css';\n\nconst PlayerInformation = (props: PlayerInformationProps) => {\n\tconst { formControl } = props;\n\t// Game Data PROPS\n\tconst { ranks } = props;\n\t// Build PROPS\n\tconst { username, rankSelected, setRankSelected, setUsername } = props;\n\n\t// =============== Username =============== //\n\tconst handleUsernameChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n\t\tconst { value } = e.target;\n\n\t\tsetUsername(value);\n\t};\n\n\t// =============== Rank =============== //\n\tconst handleRankSelectChange = (e: React.ChangeEvent<HTMLSelectElement>) => {\n\t\tconst getRank = ranks.find(\n\t\t\t(rank: RankInterface) => rank.id === e.target.value\n\t\t);\n\n\t\tif (!getRank) {\n\t\t\treturn;\n\t\t} else {\n\t\t\tsetRankSelected(getRank);\n\t\t}\n\t};\n\n\treturn (\n\t\t<Grid container spacing={3}>\n\t\t\t<Grid item xs={12} sm={6}>\n\t\t\t\t<Box>\n\t\t\t\t\t<p>7. Username</p>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\tplaceholder='Username'\n\t\t\t\t\t\tonChange={(e) => handleUsernameChange(e)}\n\t\t\t\t\t\tstyle={{ width: '100%' }}\n\t\t\t\t\t/>\n\t\t\t\t</Box>\n\t\t\t</Grid>\n\t\t\t<Grid item xs={12} sm={6}>\n\t\t\t\t<Box>\n\t\t\t\t\t<p>8. Rank</p>\n\n\t\t\t\t\t<Box>\n\t\t\t\t\t\t<LazyLoadImage\n\t\t\t\t\t\t\tsrc={`/images/wildriftranks/${rankSelected.id}.png`}\n\t\t\t\t\t\t\tstyle={{ width: '100px' }}\n\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t<FormControl className={formControl}>\n\t\t\t\t\t\t\t\t<InputLabel shrink htmlFor='rank-select'>\n\t\t\t\t\t\t\t\t\tRank\n\t\t\t\t\t\t\t\t</InputLabel>\n\t\t\t\t\t\t\t\t<NativeSelect\n\t\t\t\t\t\t\t\t\tonChange={handleRankSelectChange}\n\t\t\t\t\t\t\t\t\tinputProps={{\n\t\t\t\t\t\t\t\t\t\tname: 'rank',\n\t\t\t\t\t\t\t\t\t\tid: 'rank-select',\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{ranks.map(({ id, rankName, url }: RankInterface, index) => {\n\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t<option key={index} value={id}>\n\t\t\t\t\t\t\t\t\t\t\t\t{rankName}\n\t\t\t\t\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t</NativeSelect>\n\t\t\t\t\t\t\t\t<FormHelperText>Select your rank</FormHelperText>\n\t\t\t\t\t\t\t</FormControl>\n\t\t\t\t\t\t}\n\t\t\t\t\t</Box>\n\t\t\t\t</Box>\n\t\t\t</Grid>\n\t\t</Grid>\n\t);\n};\n\nconst mapStateToProps = (state: RootState) => {\n\treturn {\n\t\tusername: state.build.username,\n\t\trankSelected: state.build.rank,\n\t\tranks: state.gameData.ranks,\n\t};\n};\n\nconst mapDispatchToProps = (dispatch: any) => {\n\treturn {\n\t\tsetRankSelected: (newRank: RankInterface) =>\n\t\t\tdispatch({ type: actionTypes.BUILD_SET_RANKSELECTED, data: newRank }),\n\t\tsetUsername: (newUsername: string) =>\n\t\t\tdispatch({ type: actionTypes.BUILD_SET_USERNAME, data: newUsername }),\n\t};\n};\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\n\ntype PropsFromRedux = ConnectedProps<typeof connector>;\n\ntype PlayerInformationProps = PropsFromRedux & {\n\tformControl: string;\n};\n\nexport default connector(PlayerInformation);\n","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\components\\CreateBuildHeader\\CreateBuildHeader.tsx",["186","187","188","189","190","191","192"],"import React from 'react';\n\n// MaterialUI\nimport Box from '@material-ui/core/Box';\nimport Typography from '@material-ui/core/Typography';\n// Components\n// Types\nimport {\n\tBuildInterface,\n\tCountersInterface,\n\tChampionInterface,\n\tItemInterface,\n\tRankInterface,\n\tRuneInterface,\n\tSpellInterface,\n} from '../../../../../utils/interfaces';\n// CSS\n\nconst CreateBuildHeader = () => {\n\treturn (\n\t\t<Box>\n\t\t\t<Box style={{ padding: '20px 0', marginTop: '20px' }}>\n\t\t\t\t<Typography variant='h6' style={{ fontWeight: 'bold' }} gutterBottom>\n\t\t\t\t\tCreate your build\n\t\t\t\t</Typography>\n\t\t\t\t<Typography variant='body2' style={{ color: '#666666' }} gutterBottom>\n\t\t\t\t\tPlease note that you can only create up to 5 builds every 30 minutes.\n\t\t\t\t</Typography>\n\t\t\t</Box>\n\t\t\t<Box\n\t\t\t\tstyle={{\n\t\t\t\t\twidth: '150px',\n\t\t\t\t\theight: '1px',\n\t\t\t\t\tmargin: '10px 0 20px 0',\n\t\t\t\t\tbackgroundColor: '#000000',\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t&nbsp;\n\t\t\t</Box>\n\t\t</Box>\n\t);\n};\n\nexport default CreateBuildHeader;\n","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\components\\BuildSelection\\components\\ChampionSelect\\ChampionSelect.tsx",["193"],"import React, { useState } from 'react';\n// @ts-ignore - No types for this module\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\n\n// Redux\nimport { connect, ConnectedProps } from 'react-redux';\nimport actionTypes from '../../../../../../../store/actions';\n\n// MaterialUI\nimport Box from '@material-ui/core/Box';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport NativeSelect from '@material-ui/core/NativeSelect';\n// Components\n// CSS\nimport styles from './championselect.module.css';\n// Types\nimport {\n\tChampionInterface,\n\tRootState,\n} from '../../../../../../../utils/interfaces';\n\nconst ChampionSelect = (props: ChampionSelectProps) => {\n\tconst { formControl } = props;\n\t// Game Data PROPS\n\tconst { champions } = props;\n\t// Build PROPS\n\tconst { championSelected, setChampionSelected } = props;\n\n\tconst handleChampSelectChange = (e: React.ChangeEvent<HTMLSelectElement>) => {\n\t\tconst { value: championId } = e.target;\n\n\t\tconst getChampion = champions.find(\n\t\t\t(champ: ChampionInterface) => champ.id === championId\n\t\t);\n\n\t\tif (getChampion) {\n\t\t\tsetChampionSelected(getChampion);\n\t\t}\n\t};\n\n\treturn (\n\t\t<Box>\n\t\t\t<p>3. Champion</p>\n\n\t\t\t<Box className={styles.championSelectContainer}>\n\t\t\t\t{/* Display Champion Image */}\n\t\t\t\t<LazyLoadImage\n\t\t\t\t\tsrc={`/images/wildriftchampions/${championSelected.id}.png`}\n\t\t\t\t\tclassName={styles.championImage}\n\t\t\t\t/>\n\n\t\t\t\t{\n\t\t\t\t\t<FormControl className={formControl}>\n\t\t\t\t\t\t<InputLabel shrink htmlFor='champion-select'>\n\t\t\t\t\t\t\tChampion\n\t\t\t\t\t\t</InputLabel>\n\t\t\t\t\t\t<NativeSelect\n\t\t\t\t\t\t\tvalue={championSelected.id}\n\t\t\t\t\t\t\tonChange={handleChampSelectChange}\n\t\t\t\t\t\t\tinputProps={{\n\t\t\t\t\t\t\t\tname: 'champion',\n\t\t\t\t\t\t\t\tid: 'champion-select',\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{champions.map(\n\t\t\t\t\t\t\t\t({ id, championName }: ChampionInterface, index) => {\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t<option key={index} value={id}>\n\t\t\t\t\t\t\t\t\t\t\t{championName}\n\t\t\t\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</NativeSelect>\n\t\t\t\t\t\t<FormHelperText>Select a champion</FormHelperText>\n\t\t\t\t\t</FormControl>\n\t\t\t\t}\n\t\t\t</Box>\n\t\t</Box>\n\t);\n};\n\nconst mapStateToProps = (state: RootState) => {\n\treturn {\n\t\tchampionSelected: state.build.champion,\n\t\tchampions: state.gameData.champions,\n\t};\n};\n\nconst mapDispatchToProps = (dispatch: any) => {\n\treturn {\n\t\tsetChampionSelected: (champion: ChampionInterface) =>\n\t\t\tdispatch({\n\t\t\t\ttype: actionTypes.BUILD_SET_CHAMPIONSELECTED,\n\t\t\t\tdata: champion,\n\t\t\t}),\n\t};\n};\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\n\ntype PropsFromRedux = ConnectedProps<typeof connector>;\n\ntype ChampionSelectProps = PropsFromRedux & {\n\tformControl: string;\n};\n\nexport default connector(ChampionSelect);\n","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\components\\BuildSelection\\components\\ItemsSelect\\ItemsSelect.tsx",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\components\\BuildSelection\\components\\ItemsSelected\\ItemsSelected.tsx",["194","195"],"import React, { useEffect } from 'react';\n// @ts-ignore - No types for this module\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\n\n// Redux\nimport { connect, ConnectedProps } from 'react-redux';\nimport actionTypes from '../../../../../../../store/actions';\n\n// MaterialUI\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport Grow from '@material-ui/core/Grow';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\n// Components\n// CSS\nimport styles from './itemsselected.module.css';\n// Types\nimport {\n\tItemInterface,\n\tRootState,\n} from '../../../../../../../utils/interfaces';\n\nconst ItemsSelected = (props: ItemsSelectedProps) => {\n\tconst { handleDeleteItemClick } = props;\n\t// Build PROPS\n\tconst { itemsConfirmed, setItemsConfirmed } = props;\n\n\t// Check for duplicate items selected\n\t// Check for primary items limit\n\tuseEffect(() => {\n\t\tconst primaryItems = itemsConfirmed.filter(\n\t\t\t(item) => item.type === 'primary'\n\t\t);\n\n\t\tvar itemArray = itemsConfirmed.map((item) => {\n\t\t\treturn item.id;\n\t\t});\n\t\tvar isDuplicate = itemArray.some((item, index) => {\n\t\t\treturn itemArray.indexOf(item) != index;\n\t\t});\n\n\t\t// Remove duplicates from itemsConfirmed Array\n\t\tconst filteredItemsConfirmed = itemsConfirmed.filter(\n\t\t\t(item, index, arr) => arr.findIndex((t) => t.id === item.id) === index\n\t\t);\n\n\t\tif (isDuplicate) {\n\t\t\talert('Duplicate');\n\t\t\tsetItemsConfirmed(filteredItemsConfirmed);\n\t\t\t// errorItemDuplicate();\n\t\t} else if (primaryItems.length > 6) {\n\t\t\t// errorPrimaryItemsLimit();\n\t\t\talert('Limit');\n\n\t\t\tconst itemsConfirmedCopy = [...itemsConfirmed];\n\n\t\t\titemsConfirmedCopy.pop();\n\n\t\t\tsetItemsConfirmed(itemsConfirmedCopy);\n\t\t}\n\t}, [itemsConfirmed]);\n\n\treturn (\n\t\t<Box>\n\t\t\t<Typography gutterBottom>Items List</Typography>\n\t\t\t<i>Click on an item to delete it from your list</i>\n\n\t\t\t<Box className={styles.itemsSelectedContainer}>\n\t\t\t\t{itemsConfirmed.length !== 0 ? (\n\t\t\t\t\t<>\n\t\t\t\t\t\t{/* TYPE: MAIN */}\n\t\t\t\t\t\t<p>Primary Items</p>\n\t\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t\t{itemsConfirmed\n\t\t\t\t\t\t\t\t.filter((item: ItemInterface) => item.type !== 'optional')\n\t\t\t\t\t\t\t\t.map((currentItem, index) => {\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t<Grow\n\t\t\t\t\t\t\t\t\t\t\tkey={index}\n\t\t\t\t\t\t\t\t\t\t\tin={true}\n\t\t\t\t\t\t\t\t\t\t\tstyle={{ transformOrigin: '0 0 0' }}\n\t\t\t\t\t\t\t\t\t\t\t{...(true ? { timeout: 200 } : {})}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t<Tooltip title='Delete'>\n\t\t\t\t\t\t\t\t\t\t\t\t<Box className={styles.itemContainer}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Box className={styles.itemImageContainer}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<LazyLoadImage\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttitle={currentItem.itemName}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={styles.itemHover}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsrc={`/images/wildriftitems/${currentItem.id}.png`}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() =>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleDeleteItemClick(currentItem.id)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t\t\t\t\t</Tooltip>\n\t\t\t\t\t\t\t\t\t\t</Grow>\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t</Grid>\n\n\t\t\t\t\t\t{/* TYPE: OPTIONAL */}\n\t\t\t\t\t\t<p>Optional Items</p>\n\t\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t\t{itemsConfirmed\n\t\t\t\t\t\t\t\t.filter((item: ItemInterface) => item.type !== 'primary')\n\t\t\t\t\t\t\t\t.map((currentItem: ItemInterface, index) => {\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t<Grow\n\t\t\t\t\t\t\t\t\t\t\tkey={index}\n\t\t\t\t\t\t\t\t\t\t\tin={true}\n\t\t\t\t\t\t\t\t\t\t\tstyle={{ transformOrigin: '0 0 0' }}\n\t\t\t\t\t\t\t\t\t\t\t{...(true ? { timeout: 200 } : {})}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t<Tooltip title='Delete'>\n\t\t\t\t\t\t\t\t\t\t\t\t<Box className={styles.itemContainer}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Box className={styles.itemImageContainer}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<LazyLoadImage\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttitle={currentItem.itemName}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={styles.itemHover}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsrc={`/images/wildriftitems/${currentItem.id}.png`}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() =>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleDeleteItemClick(currentItem.id)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t\t\t\t\t</Tooltip>\n\t\t\t\t\t\t\t\t\t\t</Grow>\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</>\n\t\t\t\t) : (\n\t\t\t\t\t<p>You haven't added any items to your build yet.</p>\n\t\t\t\t)}\n\t\t\t</Box>\n\t\t</Box>\n\t);\n};\n\nconst mapStateToProps = (state: RootState) => {\n\treturn {\n\t\titemsConfirmed: state.build.itemsConfirmed,\n\t};\n};\n\nconst mapDispatchToProps = (dispatch: any) => {\n\treturn {\n\t\tsetItemsConfirmed: (newItemsConfirmed: Array<ItemInterface>) =>\n\t\t\tdispatch({\n\t\t\t\ttype: actionTypes.BUILD_SET_ITEMSCONFIRMED,\n\t\t\t\tdata: newItemsConfirmed,\n\t\t\t}),\n\t};\n};\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\n\ntype PropsFromRedux = ConnectedProps<typeof connector>;\n\ntype ItemsSelectedProps = PropsFromRedux & {\n\thandleDeleteItemClick: (itemId: string) => void;\n};\n\nexport default connector(ItemsSelected);\n","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\components\\BuildSelection\\components\\RunesSelect\\RunesSelect.tsx",["196","197","198","199","200"],"import React from 'react';\n\n// Redux\nimport { connect, ConnectedProps } from 'react-redux';\nimport actionTypes from '../../../../../../../store/actions';\n\n// MaterialUI\nimport Box from '@material-ui/core/Box';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport Grid from '@material-ui/core/Grid';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport NativeSelect from '@material-ui/core/NativeSelect';\n// Components\nimport Domination from './components/Domination';\nimport Inspiration from './components/Inspiration';\nimport Keystone from './components/Keystone';\nimport Resolve from './components/Resolve';\n// CSS\nimport styles from './runesselect.module.css';\n// Types\nimport {\n\tRuneInterface,\n\tRootState,\n} from '../../../../../../../utils/interfaces';\n\nconst RunesSelect = (props: RunesSelectProps) => {\n\tconst { formControl } = props;\n\t// Game Data PROPS\n\tconst { runes } = props;\n\t// Build PROPS\n\tconst { runesSelected, setRunesSelected } = props;\n\n\t// Everytime user changes a rune, this function gets executed\n\t// - sets new rune\n\t// - sets reason property\n\tconst handleRuneSelectChange = (\n\t\te: React.ChangeEvent<HTMLSelectElement>,\n\t\truneType: string,\n\t\trunePath?: string\n\t) => {\n\t\tconst getRune = runes.find(\n\t\t\t(rune: RuneInterface) => rune.id === e.target.value\n\t\t);\n\n\t\tif (getRune) {\n\t\t\t/*\n\n\t\t\t\t\t- \"{...getRune}\" spreads the previous state\n\t\t\t\t\t- \"reason: prev.keystone.reason\" gets the 'reason' property of the previous rune and sets it to the new rune\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\t...prev,\n\t\t\t\t\t\tkeystone: { ...getRune, reason: prev.keystone.reason || '' },\n\t\t\t\t\t};\n\n\t\t\t*/\n\n\t\t\tconst runesSelectStateHandler = (runeName: string) => {\n\t\t\t\tconst prevRunesSelected: { [key: string]: RuneInterface } = {\n\t\t\t\t\t...runesSelected,\n\t\t\t\t};\n\n\t\t\t\tconst modifiedRunesSelected = {\n\t\t\t\t\t...prevRunesSelected,\n\t\t\t\t\t[runeName]: {\n\t\t\t\t\t\t...getRune,\n\t\t\t\t\t\treason: prevRunesSelected[runeName].reason || '',\n\t\t\t\t\t},\n\t\t\t\t};\n\n\t\t\t\tsetRunesSelected(runeName, modifiedRunesSelected);\n\t\t\t};\n\n\t\t\tif (runeType === 'keystone') {\n\t\t\t\trunesSelectStateHandler('keystone');\n\t\t\t}\n\t\t\tif (runeType === 'secondary') {\n\t\t\t\tswitch (runePath) {\n\t\t\t\t\tcase 'domination':\n\t\t\t\t\t\trunesSelectStateHandler('domination');\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'resolve':\n\t\t\t\t\t\trunesSelectStateHandler('resolve');\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'inspiration':\n\t\t\t\t\t\trunesSelectStateHandler('inspiration');\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\tconst handleRuneExplanationChange = (\n\t\te: React.ChangeEvent<HTMLTextAreaElement>,\n\t\truneName: string\n\t) => {\n\t\tconst prevRunesSelected: { [key: string]: RuneInterface } = {\n\t\t\t...runesSelected,\n\t\t};\n\n\t\tlet getRune = prevRunesSelected[runeName];\n\n\t\tconst modifiedRunesSelected = {\n\t\t\t...prevRunesSelected,\n\t\t\t[runeName]: {\n\t\t\t\t...getRune,\n\t\t\t\treason: e.target.value,\n\t\t\t},\n\t\t};\n\n\t\tsetRunesSelected(runeName, modifiedRunesSelected);\n\t};\n\n\treturn (\n\t\t<Box>\n\t\t\t<p>5. Runes</p>\n\n\t\t\t<Grid container item xs={12}>\n\t\t\t\t{/* KEYSTONE Rune */}\n\t\t\t\t<Keystone\n\t\t\t\t\tformControl={formControl}\n\t\t\t\t\thandleRuneSelectChange={handleRuneSelectChange}\n\t\t\t\t\thandleRuneExplanationChange={handleRuneExplanationChange}\n\t\t\t\t/>\n\n\t\t\t\t{/* Secondary: Domination */}\n\t\t\t\t<Domination\n\t\t\t\t\tformControl={formControl}\n\t\t\t\t\thandleRuneSelectChange={handleRuneSelectChange}\n\t\t\t\t\thandleRuneExplanationChange={handleRuneExplanationChange}\n\t\t\t\t/>\n\n\t\t\t\t{/* Secondary: Resolve */}\n\t\t\t\t<Resolve\n\t\t\t\t\tformControl={formControl}\n\t\t\t\t\thandleRuneSelectChange={handleRuneSelectChange}\n\t\t\t\t\thandleRuneExplanationChange={handleRuneExplanationChange}\n\t\t\t\t/>\n\n\t\t\t\t{/* Secondary: Inspiration */}\n\t\t\t\t<Inspiration\n\t\t\t\t\tformControl={formControl}\n\t\t\t\t\thandleRuneSelectChange={handleRuneSelectChange}\n\t\t\t\t\thandleRuneExplanationChange={handleRuneExplanationChange}\n\t\t\t\t/>\n\t\t\t</Grid>\n\t\t</Box>\n\t);\n};\n\nconst mapStateToProps = (state: RootState) => {\n\treturn {\n\t\trunesSelected: state.build.runes,\n\t\trunes: state.gameData.runes,\n\t};\n};\n\nconst mapDispatchToprops = (dispatch: any) => {\n\treturn {\n\t\tsetRunesSelected: (\n\t\t\truneName: string,\n\t\t\tdata: { [key: string]: RuneInterface }\n\t\t) =>\n\t\t\tdispatch({ type: actionTypes.BUILD_SET_RUNESSELECTED, runeName, data }),\n\t};\n};\n\nconst connector = connect(mapStateToProps, mapDispatchToprops);\n\ntype PropsFromRedux = ConnectedProps<typeof connector>;\n\ntype RunesSelectProps = PropsFromRedux & {\n\tformControl: string;\n};\n\nexport default connector(RunesSelect);\n","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\components\\BuildSelection\\components\\RunesSelect\\components\\Keystone.tsx",["201"],"import React from 'react';\n// @ts-ignore - No types for this module\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\n\n// Redux\nimport { connect, ConnectedProps } from 'react-redux';\n\n// MaterialUI\nimport Box from '@material-ui/core/Box';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport Grid from '@material-ui/core/Grid';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport NativeSelect from '@material-ui/core/NativeSelect';\n// Components\n// CSS\nimport styles from './rune.module.css';\n// Types\nimport {\n\tRuneInterface,\n\tRootState,\n} from '../../../../../../../../utils/interfaces';\n\nconst Keystone = (props: KeystoneProps) => {\n\tconst {\n\t\tformControl,\n\t\thandleRuneSelectChange,\n\t\thandleRuneExplanationChange,\n\t} = props;\n\t// Game Data PROPS\n\tconst { runes } = props;\n\t// Build PROPS\n\tconst { runeKeystone } = props;\n\n\treturn (\n\t\t<>\n\t\t\t<Grid item xs={12} sm={6}>\n\t\t\t\t<LazyLoadImage\n\t\t\t\t\tsrc={`/images/wildriftrunes/${runeKeystone.id}.png`}\n\t\t\t\t\tclassName={styles.runeImage}\n\t\t\t\t/>\n\n\t\t\t\t{\n\t\t\t\t\t<FormControl className={formControl}>\n\t\t\t\t\t\t<InputLabel shrink htmlFor='rune-select'>\n\t\t\t\t\t\t\tKeystone\n\t\t\t\t\t\t</InputLabel>\n\t\t\t\t\t\t<NativeSelect\n\t\t\t\t\t\t\tonChange={(e) => handleRuneSelectChange(e, 'keystone')}\n\t\t\t\t\t\t\tinputProps={{\n\t\t\t\t\t\t\t\tname: 'rune',\n\t\t\t\t\t\t\t\tid: 'rune-select',\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{runes\n\t\t\t\t\t\t\t\t.filter((rune) => rune.type === 'keystone')\n\t\t\t\t\t\t\t\t.map(({ id, runeName, url }: RuneInterface, index) => {\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t<option key={index} value={id}>\n\t\t\t\t\t\t\t\t\t\t\t{runeName}\n\t\t\t\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t</NativeSelect>\n\t\t\t\t\t\t<FormHelperText>Select a Keystone Rune</FormHelperText>\n\t\t\t\t\t</FormControl>\n\t\t\t\t}\n\t\t\t</Grid>\n\t\t\t<Grid item xs={12} sm={6}>\n\t\t\t\t<textarea\n\t\t\t\t\tid='runeKeystone'\n\t\t\t\t\tname='runeKeystone'\n\t\t\t\t\trows={6}\n\t\t\t\t\tplaceholder='Add an explanation for this rune'\n\t\t\t\t\tclassName={styles.explanationTextArea}\n\t\t\t\t\t// value={itemReason}\n\t\t\t\t\tonChange={(e) => handleRuneExplanationChange(e, 'keystone')}\n\t\t\t\t></textarea>\n\t\t\t</Grid>\n\t\t</>\n\t);\n};\n\nconst mapStateToProps = (state: RootState) => {\n\treturn {\n\t\truneKeystone: state.build.runes.keystone,\n\t\trunes: state.gameData.runes,\n\t};\n};\n\nconst mapDispatchToProps = (dispatch: any) => {\n\treturn {};\n};\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\n\ntype PropsFromRedux = ConnectedProps<typeof connector>;\n\ntype KeystoneProps = PropsFromRedux & {\n\tformControl: string;\n\thandleRuneSelectChange: (\n\t\te: React.ChangeEvent<HTMLSelectElement>,\n\t\truneType: string,\n\t\trunePath?: string\n\t) => void;\n\thandleRuneExplanationChange: (\n\t\te: React.ChangeEvent<HTMLTextAreaElement>,\n\t\truneName: string\n\t) => void;\n};\n\nexport default connector(Keystone);\n","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\components\\BuildSelection\\components\\RunesSelect\\components\\Domination.tsx",["202"],"import React from 'react';\n// @ts-ignore - No types for this module\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\n\n// Redux\nimport { connect, ConnectedProps } from 'react-redux';\n\n// MaterialUI\nimport Box from '@material-ui/core/Box';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport Grid from '@material-ui/core/Grid';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport NativeSelect from '@material-ui/core/NativeSelect';\n// Components\n// CSS\nimport styles from './rune.module.css';\n// Types\nimport {\n\tRuneInterface,\n\tRootState,\n} from '../../../../../../../../utils/interfaces';\n\nconst Domination = (props: DominationProps) => {\n\tconst {\n\t\tformControl,\n\t\thandleRuneSelectChange,\n\t\thandleRuneExplanationChange,\n\t} = props;\n\t// Game Data PROPS\n\tconst { runes } = props;\n\t// Build PROPS\n\tconst { runeDomination } = props;\n\n\treturn (\n\t\t<>\n\t\t\t<Grid item xs={12} sm={6}>\n\t\t\t\t<LazyLoadImage\n\t\t\t\t\tsrc={`/images/wildriftrunes/${runeDomination.id}.png`}\n\t\t\t\t\tclassName={styles.runeImage}\n\t\t\t\t/>\n\n\t\t\t\t{\n\t\t\t\t\t<FormControl className={formControl}>\n\t\t\t\t\t\t<InputLabel shrink htmlFor='rune-select'>\n\t\t\t\t\t\t\tDomination (Slot 1)\n\t\t\t\t\t\t</InputLabel>\n\t\t\t\t\t\t<NativeSelect\n\t\t\t\t\t\t\tonChange={(e) =>\n\t\t\t\t\t\t\t\thandleRuneSelectChange(e, 'secondary', 'domination')\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tinputProps={{\n\t\t\t\t\t\t\t\tname: 'rune',\n\t\t\t\t\t\t\t\tid: 'rune-select',\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{runes\n\t\t\t\t\t\t\t\t.filter(\n\t\t\t\t\t\t\t\t\t(rune) =>\n\t\t\t\t\t\t\t\t\t\trune.type === 'secondary' && rune.path === 'domination'\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t.map(({ id, runeName, url }: RuneInterface, index) => {\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t<option key={index} value={id}>\n\t\t\t\t\t\t\t\t\t\t\t{runeName}\n\t\t\t\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t</NativeSelect>\n\t\t\t\t\t\t<FormHelperText>Select a Domination Rune</FormHelperText>\n\t\t\t\t\t</FormControl>\n\t\t\t\t}\n\t\t\t</Grid>\n\t\t\t<Grid item xs={12} sm={6}>\n\t\t\t\t<textarea\n\t\t\t\t\tid='runeDomination'\n\t\t\t\t\tname='runeDomination'\n\t\t\t\t\trows={6}\n\t\t\t\t\tplaceholder='Add an explanation for this rune'\n\t\t\t\t\tclassName={styles.explanationTextArea}\n\t\t\t\t\t// value={itemReason}\n\t\t\t\t\tonChange={(e) => handleRuneExplanationChange(e, 'domination')}\n\t\t\t\t></textarea>\n\t\t\t</Grid>\n\t\t</>\n\t);\n};\n\nconst mapStateToProps = (state: RootState) => {\n\treturn {\n\t\truneDomination: state.build.runes.domination,\n\t\trunes: state.gameData.runes,\n\t};\n};\n\nconst connector = connect(mapStateToProps);\n\ntype PropsFromRedux = ConnectedProps<typeof connector>;\n\ntype DominationProps = PropsFromRedux & {\n\tformControl: string;\n\thandleRuneSelectChange: (\n\t\te: React.ChangeEvent<HTMLSelectElement>,\n\t\truneType: string,\n\t\trunePath?: string\n\t) => void;\n\thandleRuneExplanationChange: (\n\t\te: React.ChangeEvent<HTMLTextAreaElement>,\n\t\truneName: string\n\t) => void;\n};\n\nexport default connector(Domination);\n","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\components\\BuildSelection\\components\\RunesSelect\\components\\Resolve.tsx",["203"],"import React from 'react';\n// @ts-ignore - No types for this module\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\n\n// Redux\nimport { connect, ConnectedProps } from 'react-redux';\n\n// MaterialUI\nimport Box from '@material-ui/core/Box';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport Grid from '@material-ui/core/Grid';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport NativeSelect from '@material-ui/core/NativeSelect';\n// Components\n// CSS\nimport styles from './rune.module.css';\n// Types\nimport {\n\tRuneInterface,\n\tRootState,\n} from '../../../../../../../../utils/interfaces';\n\nconst Resolve = (props: ResolveProps) => {\n\tconst {\n\t\tformControl,\n\t\thandleRuneSelectChange,\n\t\thandleRuneExplanationChange,\n\t} = props;\n\t// Game Data PROPS\n\tconst { runes } = props;\n\t// Build PROPS\n\tconst { runeResolve } = props;\n\n\treturn (\n\t\t<>\n\t\t\t<Grid item xs={12} sm={6}>\n\t\t\t\t<LazyLoadImage\n\t\t\t\t\tsrc={`/images/wildriftrunes/${runeResolve.id}.png`}\n\t\t\t\t\tclassName={styles.runeImage}\n\t\t\t\t/>\n\n\t\t\t\t{\n\t\t\t\t\t<FormControl className={formControl}>\n\t\t\t\t\t\t<InputLabel shrink htmlFor='rune-select'>\n\t\t\t\t\t\t\tResolve (Slot 2)\n\t\t\t\t\t\t</InputLabel>\n\t\t\t\t\t\t<NativeSelect\n\t\t\t\t\t\t\tonChange={(e) =>\n\t\t\t\t\t\t\t\thandleRuneSelectChange(e, 'secondary', 'resolve')\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tinputProps={{\n\t\t\t\t\t\t\t\tname: 'rune',\n\t\t\t\t\t\t\t\tid: 'rune-select',\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{runes\n\t\t\t\t\t\t\t\t.filter(\n\t\t\t\t\t\t\t\t\t(rune) => rune.type === 'secondary' && rune.path === 'resolve'\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t.map(({ id, runeName, url }: RuneInterface, index) => {\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t<option key={index} value={id}>\n\t\t\t\t\t\t\t\t\t\t\t{runeName}\n\t\t\t\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t</NativeSelect>\n\t\t\t\t\t\t<FormHelperText>Select a Resolve Rune</FormHelperText>\n\t\t\t\t\t</FormControl>\n\t\t\t\t}\n\t\t\t</Grid>\n\t\t\t<Grid item xs={12} sm={6}>\n\t\t\t\t<textarea\n\t\t\t\t\tid='runeResolve'\n\t\t\t\t\tname='runeResolve'\n\t\t\t\t\trows={6}\n\t\t\t\t\tplaceholder='Add an explanation for this rune'\n\t\t\t\t\tclassName={styles.explanationTextArea}\n\t\t\t\t\t// value={itemReason}\n\t\t\t\t\tonChange={(e) => handleRuneExplanationChange(e, 'resolve')}\n\t\t\t\t></textarea>\n\t\t\t</Grid>\n\t\t</>\n\t);\n};\n\nconst mapStateToProps = (state: RootState) => {\n\treturn {\n\t\truneResolve: state.build.runes.resolve,\n\t\trunes: state.gameData.runes,\n\t};\n};\n\nconst connector = connect(mapStateToProps);\n\ntype PropsFromRedux = ConnectedProps<typeof connector>;\n\ntype ResolveProps = PropsFromRedux & {\n\tformControl: string;\n\thandleRuneSelectChange: (\n\t\te: React.ChangeEvent<HTMLSelectElement>,\n\t\truneType: string,\n\t\trunePath?: string\n\t) => void;\n\thandleRuneExplanationChange: (\n\t\te: React.ChangeEvent<HTMLTextAreaElement>,\n\t\truneName: string\n\t) => void;\n};\n\nexport default connector(Resolve);\n","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\components\\BuildSelection\\components\\RunesSelect\\components\\Inspiration.tsx",["204"],"import React from 'react';\n// @ts-ignore - No types for this module\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\n\n// Redux\nimport { connect, ConnectedProps } from 'react-redux';\n\n// MaterialUI\nimport Box from '@material-ui/core/Box';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport Grid from '@material-ui/core/Grid';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport NativeSelect from '@material-ui/core/NativeSelect';\n// Components\n// CSS\nimport styles from './rune.module.css';\n// Types\nimport {\n\tRuneInterface,\n\tRootState,\n} from '../../../../../../../../utils/interfaces';\n\nconst Inspiration = (props: InspirationProps) => {\n\tconst {\n\t\tformControl,\n\t\thandleRuneSelectChange,\n\t\thandleRuneExplanationChange,\n\t} = props;\n\t// Game Data PROPS\n\tconst { runes } = props;\n\t// Build PROPS\n\tconst { runeInspiration } = props;\n\n\treturn (\n\t\t<>\n\t\t\t<Grid item xs={12} sm={6}>\n\t\t\t\t<LazyLoadImage\n\t\t\t\t\tsrc={`/images/wildriftrunes/${runeInspiration.id}.png`}\n\t\t\t\t\tclassName={styles.runeImage}\n\t\t\t\t/>\n\n\t\t\t\t{\n\t\t\t\t\t<FormControl className={formControl}>\n\t\t\t\t\t\t<InputLabel shrink htmlFor='rune-select'>\n\t\t\t\t\t\t\tInspiration (Slot 3)\n\t\t\t\t\t\t</InputLabel>\n\t\t\t\t\t\t<NativeSelect\n\t\t\t\t\t\t\tonChange={(e) =>\n\t\t\t\t\t\t\t\thandleRuneSelectChange(e, 'secondary', 'inspiration')\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tinputProps={{\n\t\t\t\t\t\t\t\tname: 'rune',\n\t\t\t\t\t\t\t\tid: 'rune-select',\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{runes\n\t\t\t\t\t\t\t\t.filter(\n\t\t\t\t\t\t\t\t\t(rune) =>\n\t\t\t\t\t\t\t\t\t\trune.type === 'secondary' && rune.path === 'inspiration'\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t.map(({ id, runeName, url }: RuneInterface, index) => {\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t<option key={index} value={id}>\n\t\t\t\t\t\t\t\t\t\t\t{runeName}\n\t\t\t\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t</NativeSelect>\n\t\t\t\t\t\t<FormHelperText>Select a Inspiration Rune</FormHelperText>\n\t\t\t\t\t</FormControl>\n\t\t\t\t}\n\t\t\t</Grid>\n\t\t\t<Grid item xs={12} sm={6}>\n\t\t\t\t<textarea\n\t\t\t\t\tid='runeInspiration'\n\t\t\t\t\tname='runeInspiration'\n\t\t\t\t\trows={6}\n\t\t\t\t\tplaceholder='Add an explanation for this rune'\n\t\t\t\t\tclassName={styles.explanationTextArea}\n\t\t\t\t\t// value={itemReason}\n\t\t\t\t\tonChange={(e) => handleRuneExplanationChange(e, 'inspiration')}\n\t\t\t\t></textarea>\n\t\t\t</Grid>\n\t\t</>\n\t);\n};\n\nconst mapStateToProps = (state: RootState) => {\n\treturn {\n\t\truneInspiration: state.build.runes.inspiration,\n\t\trunes: state.gameData.runes,\n\t};\n};\n\nconst connector = connect(mapStateToProps);\n\ntype PropsFromRedux = ConnectedProps<typeof connector>;\n\ntype InspirationProps = PropsFromRedux & {\n\tformControl: string;\n\thandleRuneSelectChange: (\n\t\te: React.ChangeEvent<HTMLSelectElement>,\n\t\truneType: string,\n\t\trunePath?: string\n\t) => void;\n\thandleRuneExplanationChange: (\n\t\te: React.ChangeEvent<HTMLTextAreaElement>,\n\t\truneName: string\n\t) => void;\n};\n\nexport default connector(Inspiration);\n","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\components\\BuildSelection\\components\\SpellsSelect\\SpellsSelect.tsx",["205","206","207","208","209","210","211"],"import React from 'react';\n\n// Redux\nimport { connect, ConnectedProps } from 'react-redux';\nimport actionTypes from '../../../../../../../store/actions';\n\n// MaterialUI\nimport Box from '@material-ui/core/Box';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport Grid from '@material-ui/core/Grid';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport NativeSelect from '@material-ui/core/NativeSelect';\nimport Typography from '@material-ui/core/Typography';\n// Components\nimport Spell from './components/Spell';\n// CSS\nimport styles from './spellsselect.module.css';\n// Types\nimport {\n\tSpellInterface,\n\tRootState,\n} from '../../../../../../../utils/interfaces';\n\nconst SpellsSelect = (props: SpellsSelectProps) => {\n\tconst { formControl } = props;\n\t// Game Data PROPS\n\tconst { spells } = props;\n\t// Build PROPS\n\tconst { spellsSelected, setSpellsSelected } = props;\n\n\tconst handleSpellSelectChange = (\n\t\te: React.ChangeEvent<HTMLSelectElement>,\n\t\tspellNumber: number\n\t) => {\n\t\tconst { value: spellId } = e.target;\n\n\t\tconst getSpell = spells.find(\n\t\t\t(spell: SpellInterface) => spell.id === spellId\n\t\t);\n\n\t\tif (getSpell) {\n\t\t\tswitch (spellNumber) {\n\t\t\t\tcase 1:\n\t\t\t\t\tsetSpellsSelected('spellOne', getSpell);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 2:\n\t\t\t\t\tsetSpellsSelected('spellTwo', getSpell);\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t};\n\n\treturn (\n\t\t<Box>\n\t\t\t<p>6. Summoner Spells</p>\n\n\t\t\t<Grid container item xs={12}>\n\t\t\t\t{/* Spell One */}\n\t\t\t\t<Spell\n\t\t\t\t\tformControl={formControl}\n\t\t\t\t\tspells={spells}\n\t\t\t\t\tspellNumber={1}\n\t\t\t\t\tspellsSelected={spellsSelected}\n\t\t\t\t\thandleSpellSelectChange={handleSpellSelectChange}\n\t\t\t\t/>\n\n\t\t\t\t{/* Spell Two */}\n\t\t\t\t<Spell\n\t\t\t\t\tformControl={formControl}\n\t\t\t\t\tspells={spells}\n\t\t\t\t\tspellNumber={2}\n\t\t\t\t\tspellsSelected={spellsSelected}\n\t\t\t\t\thandleSpellSelectChange={handleSpellSelectChange}\n\t\t\t\t/>\n\t\t\t</Grid>\n\t\t</Box>\n\t);\n};\n\nconst mapStateToProps = (state: RootState) => {\n\treturn {\n\t\tspellsSelected: state.build.spells,\n\t\tspells: state.gameData.spells,\n\t};\n};\n\nconst mapDispatchToprops = (dispatch: any) => {\n\treturn {\n\t\tsetSpellsSelected: (spellKey: string, data: SpellInterface) =>\n\t\t\tdispatch({ type: actionTypes.BUILD_SET_SPELLSSELECTED, spellKey, data }),\n\t};\n};\n\nconst connector = connect(mapStateToProps, mapDispatchToprops);\n\ntype PropsFromRedux = ConnectedProps<typeof connector>;\n\ntype SpellsSelectProps = PropsFromRedux & {\n\tformControl: string;\n};\n\nexport default connector(SpellsSelect);\n","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\components\\BuildSelection\\components\\SpellsSelect\\components\\Spell.tsx",["212","213","214","215"],"import React from 'react';\n// @ts-ignore - No types for this module\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\n\n// MaterialUI\nimport Box from '@material-ui/core/Box';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport Grid from '@material-ui/core/Grid';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport NativeSelect from '@material-ui/core/NativeSelect';\nimport Typography from '@material-ui/core/Typography';\n// Components\n// CSS\nimport styles from './spell.module.css';\n// Types\nimport { SpellInterface } from '../../../../../../../../utils/interfaces';\ntype SpellProps = {\n\tformControl: string;\n\tspells: Array<SpellInterface>;\n\tspellNumber: number;\n\tspellsSelected: {\n\t\tspellOne: SpellInterface;\n\t\tspellTwo: SpellInterface;\n\t};\n\thandleSpellSelectChange(\n\t\te: React.ChangeEvent<HTMLSelectElement>,\n\t\tspellNumber: number\n\t): void;\n};\n\nconst Spell = (props: SpellProps) => {\n\tconst {\n\t\tformControl,\n\t\tspells,\n\t\tspellNumber,\n\t\tspellsSelected,\n\t\thandleSpellSelectChange,\n\t} = props;\n\tconst { spellOne, spellTwo } = spellsSelected;\n\n\treturn (\n\t\t<Grid item xs={12} sm={3} style={{ marginTop: '10px' }}>\n\t\t\t<LazyLoadImage\n\t\t\t\tsrc={`/images/wildriftspells/${\n\t\t\t\t\tspellNumber === 1 ? spellOne.id : spellTwo.id\n\t\t\t\t}.jpg`}\n\t\t\t\tstyle={{ width: '90px' }}\n\t\t\t/>\n\n\t\t\t{\n\t\t\t\t<FormControl className={formControl}>\n\t\t\t\t\t<InputLabel shrink htmlFor='spell-select'>\n\t\t\t\t\t\t{spellNumber === 1 ? 'Spell One' : 'Spell Two'}\n\t\t\t\t\t</InputLabel>\n\t\t\t\t\t<NativeSelect\n\t\t\t\t\t\tdefaultValue={`${spellNumber === 1 ? spellOne.id : spellTwo.id}`}\n\t\t\t\t\t\tonChange={(e) => handleSpellSelectChange(e, spellNumber)}\n\t\t\t\t\t\tinputProps={{\n\t\t\t\t\t\t\tname: 'spell',\n\t\t\t\t\t\t\tid: 'spell-select',\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t{spells.map(({ id, spellName, url }: SpellInterface, index) => {\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<option key={index} value={id}>\n\t\t\t\t\t\t\t\t\t{spellName}\n\t\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t})}\n\t\t\t\t\t</NativeSelect>\n\t\t\t\t\t<FormHelperText>Select a Spell</FormHelperText>\n\t\t\t\t</FormControl>\n\t\t\t}\n\t\t</Grid>\n\t);\n};\n\nexport default Spell;\n","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\components\\Loading\\Backdrop.tsx",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\store\\actions.js",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\store\\reducers\\gameData.js",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\store\\reducers\\build.js",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\utils\\interfaces.ts",[],{"ruleId":"216","replacedBy":"217"},{"ruleId":"218","replacedBy":"219"},{"ruleId":"220","severity":1,"message":"221","line":2,"column":8,"nodeType":"222","messageId":"223","endLine":2,"endColumn":13},{"ruleId":"224","severity":1,"message":"225","line":34,"column":70,"nodeType":"226","messageId":"227","endLine":34,"endColumn":72},{"ruleId":"228","severity":1,"message":"229","line":52,"column":5,"nodeType":"230","endLine":52,"endColumn":17,"suggestions":"231"},{"ruleId":"228","severity":1,"message":"229","line":61,"column":5,"nodeType":"230","endLine":61,"endColumn":21,"suggestions":"232"},{"ruleId":"220","severity":1,"message":"233","line":96,"column":7,"nodeType":"222","messageId":"223","endLine":96,"endColumn":25},{"ruleId":"220","severity":1,"message":"234","line":1,"column":17,"nodeType":"222","messageId":"223","endLine":1,"endColumn":25},{"ruleId":"220","severity":1,"message":"235","line":20,"column":2,"nodeType":"222","messageId":"223","endLine":20,"endColumn":16},{"ruleId":"220","severity":1,"message":"236","line":26,"column":2,"nodeType":"222","messageId":"223","endLine":26,"endColumn":19},{"ruleId":"228","severity":1,"message":"237","line":157,"column":5,"nodeType":"230","endLine":157,"endColumn":7,"suggestions":"238"},{"ruleId":"220","severity":1,"message":"239","line":4,"column":8,"nodeType":"222","messageId":"223","endLine":4,"endColumn":18},{"ruleId":"220","severity":1,"message":"239","line":6,"column":8,"nodeType":"222","messageId":"223","endLine":6,"endColumn":18},{"ruleId":"240","severity":1,"message":"241","line":58,"column":8,"nodeType":"242","endLine":58,"endColumn":74},{"ruleId":"220","severity":1,"message":"243","line":7,"column":8,"nodeType":"222","messageId":"223","endLine":7,"endColumn":19},{"ruleId":"220","severity":1,"message":"244","line":20,"column":8,"nodeType":"222","messageId":"223","endLine":20,"endColumn":14},{"ruleId":"220","severity":1,"message":"245","line":57,"column":10,"nodeType":"222","messageId":"223","endLine":57,"endColumn":24},{"ruleId":"220","severity":1,"message":"234","line":1,"column":17,"nodeType":"222","messageId":"223","endLine":1,"endColumn":25},{"ruleId":"220","severity":1,"message":"239","line":7,"column":8,"nodeType":"222","messageId":"223","endLine":7,"endColumn":18},{"ruleId":"220","severity":1,"message":"246","line":52,"column":8,"nodeType":"222","messageId":"223","endLine":52,"endColumn":19},{"ruleId":"220","severity":1,"message":"244","line":12,"column":8,"nodeType":"222","messageId":"223","endLine":12,"endColumn":14},{"ruleId":"220","severity":1,"message":"247","line":18,"column":10,"nodeType":"222","messageId":"223","endLine":18,"endColumn":20},{"ruleId":"220","severity":1,"message":"234","line":1,"column":17,"nodeType":"222","messageId":"223","endLine":1,"endColumn":25},{"ruleId":"220","severity":1,"message":"248","line":1,"column":27,"nodeType":"222","messageId":"223","endLine":1,"endColumn":36},{"ruleId":"220","severity":1,"message":"249","line":4,"column":8,"nodeType":"222","messageId":"223","endLine":4,"endColumn":11},{"ruleId":"220","severity":1,"message":"244","line":12,"column":8,"nodeType":"222","messageId":"223","endLine":12,"endColumn":14},{"ruleId":"220","severity":1,"message":"235","line":15,"column":2,"nodeType":"222","messageId":"223","endLine":15,"endColumn":16},{"ruleId":"220","severity":1,"message":"250","line":16,"column":2,"nodeType":"222","messageId":"223","endLine":16,"endColumn":19},{"ruleId":"220","severity":1,"message":"251","line":17,"column":2,"nodeType":"222","messageId":"223","endLine":17,"endColumn":19},{"ruleId":"220","severity":1,"message":"252","line":18,"column":2,"nodeType":"222","messageId":"223","endLine":18,"endColumn":15},{"ruleId":"220","severity":1,"message":"253","line":19,"column":2,"nodeType":"222","messageId":"223","endLine":19,"endColumn":15},{"ruleId":"220","severity":1,"message":"254","line":20,"column":2,"nodeType":"222","messageId":"223","endLine":20,"endColumn":15},{"ruleId":"220","severity":1,"message":"255","line":21,"column":2,"nodeType":"222","messageId":"223","endLine":21,"endColumn":16},{"ruleId":"220","severity":1,"message":"256","line":22,"column":2,"nodeType":"222","messageId":"223","endLine":22,"endColumn":11},{"ruleId":"220","severity":1,"message":"234","line":1,"column":17,"nodeType":"222","messageId":"223","endLine":1,"endColumn":25},{"ruleId":"220","severity":1,"message":"248","line":1,"column":27,"nodeType":"222","messageId":"223","endLine":1,"endColumn":36},{"ruleId":"220","severity":1,"message":"235","line":19,"column":2,"nodeType":"222","messageId":"223","endLine":19,"endColumn":16},{"ruleId":"220","severity":1,"message":"244","line":24,"column":8,"nodeType":"222","messageId":"223","endLine":24,"endColumn":14},{"ruleId":"220","severity":1,"message":"257","line":31,"column":10,"nodeType":"222","messageId":"223","endLine":31,"endColumn":18},{"ruleId":"220","severity":1,"message":"235","line":9,"column":2,"nodeType":"222","messageId":"223","endLine":9,"endColumn":16},{"ruleId":"220","severity":1,"message":"250","line":10,"column":2,"nodeType":"222","messageId":"223","endLine":10,"endColumn":19},{"ruleId":"220","severity":1,"message":"251","line":11,"column":2,"nodeType":"222","messageId":"223","endLine":11,"endColumn":19},{"ruleId":"220","severity":1,"message":"252","line":12,"column":2,"nodeType":"222","messageId":"223","endLine":12,"endColumn":15},{"ruleId":"220","severity":1,"message":"253","line":13,"column":2,"nodeType":"222","messageId":"223","endLine":13,"endColumn":15},{"ruleId":"220","severity":1,"message":"254","line":14,"column":2,"nodeType":"222","messageId":"223","endLine":14,"endColumn":15},{"ruleId":"220","severity":1,"message":"255","line":15,"column":2,"nodeType":"222","messageId":"223","endLine":15,"endColumn":16},{"ruleId":"220","severity":1,"message":"234","line":1,"column":17,"nodeType":"222","messageId":"223","endLine":1,"endColumn":25},{"ruleId":"258","severity":1,"message":"259","line":40,"column":35,"nodeType":"260","messageId":"261","endLine":40,"endColumn":37},{"ruleId":"228","severity":1,"message":"262","line":62,"column":5,"nodeType":"230","endLine":62,"endColumn":21,"suggestions":"263"},{"ruleId":"220","severity":1,"message":"264","line":9,"column":8,"nodeType":"222","messageId":"223","endLine":9,"endColumn":19},{"ruleId":"220","severity":1,"message":"265","line":10,"column":8,"nodeType":"222","messageId":"223","endLine":10,"endColumn":22},{"ruleId":"220","severity":1,"message":"266","line":12,"column":8,"nodeType":"222","messageId":"223","endLine":12,"endColumn":18},{"ruleId":"220","severity":1,"message":"267","line":13,"column":8,"nodeType":"222","messageId":"223","endLine":13,"endColumn":20},{"ruleId":"220","severity":1,"message":"244","line":20,"column":8,"nodeType":"222","messageId":"223","endLine":20,"endColumn":14},{"ruleId":"220","severity":1,"message":"249","line":9,"column":8,"nodeType":"222","messageId":"223","endLine":9,"endColumn":11},{"ruleId":"220","severity":1,"message":"249","line":9,"column":8,"nodeType":"222","messageId":"223","endLine":9,"endColumn":11},{"ruleId":"220","severity":1,"message":"249","line":9,"column":8,"nodeType":"222","messageId":"223","endLine":9,"endColumn":11},{"ruleId":"220","severity":1,"message":"249","line":9,"column":8,"nodeType":"222","messageId":"223","endLine":9,"endColumn":11},{"ruleId":"220","severity":1,"message":"264","line":9,"column":8,"nodeType":"222","messageId":"223","endLine":9,"endColumn":19},{"ruleId":"220","severity":1,"message":"268","line":10,"column":8,"nodeType":"222","messageId":"223","endLine":10,"endColumn":24},{"ruleId":"220","severity":1,"message":"265","line":11,"column":8,"nodeType":"222","messageId":"223","endLine":11,"endColumn":22},{"ruleId":"220","severity":1,"message":"266","line":13,"column":8,"nodeType":"222","messageId":"223","endLine":13,"endColumn":18},{"ruleId":"220","severity":1,"message":"267","line":14,"column":8,"nodeType":"222","messageId":"223","endLine":14,"endColumn":20},{"ruleId":"220","severity":1,"message":"239","line":15,"column":8,"nodeType":"222","messageId":"223","endLine":15,"endColumn":18},{"ruleId":"220","severity":1,"message":"244","line":19,"column":8,"nodeType":"222","messageId":"223","endLine":19,"endColumn":14},{"ruleId":"220","severity":1,"message":"249","line":6,"column":8,"nodeType":"222","messageId":"223","endLine":6,"endColumn":11},{"ruleId":"220","severity":1,"message":"268","line":8,"column":8,"nodeType":"222","messageId":"223","endLine":8,"endColumn":24},{"ruleId":"220","severity":1,"message":"239","line":13,"column":8,"nodeType":"222","messageId":"223","endLine":13,"endColumn":18},{"ruleId":"220","severity":1,"message":"244","line":16,"column":8,"nodeType":"222","messageId":"223","endLine":16,"endColumn":14},"no-native-reassign",["269"],"no-negated-in-lhs",["270"],"@typescript-eslint/no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar","array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'champions'. Either include it or remove the dependency array.","ArrayExpression",["271"],["272"],"'mapDispatchToProps' is assigned a value but never used.","'useState' is defined but never used.","'BuildInterface' is defined but never used.","'gameDataInterface' is defined but never used.","React Hook useEffect has missing dependencies: 'setChampions', 'setItems', 'setRanks', 'setRunes', and 'setSpells'. Either include them or remove the dependency array.",["273"],"'Typography' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'actionTypes' is defined but never used.","'styles' is defined but never used.","'saveToDatabase' is assigned a value but never used.","'handleReset' is assigned a value but never used.","'buildTitle' is assigned a value but never used.","'useEffect' is defined but never used.","'Box' is defined but never used.","'CountersInterface' is defined but never used.","'ChampionInterface' is defined but never used.","'ItemInterface' is defined but never used.","'RankInterface' is defined but never used.","'RuneInterface' is defined but never used.","'SpellInterface' is defined but never used.","'RootState' is defined but never used.","'username' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","React Hook useEffect has a missing dependency: 'setItemsConfirmed'. Either include it or remove the dependency array.",["274"],"'FormControl' is defined but never used.","'FormHelperText' is defined but never used.","'InputLabel' is defined but never used.","'NativeSelect' is defined but never used.","'FormControlLabel' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"275","fix":"276"},{"desc":"277","fix":"278"},{"desc":"279","fix":"280"},{"desc":"281","fix":"282"},"Update the dependencies array to be: [champions, roleFilter]",{"range":"283","text":"284"},"Update the dependencies array to be: [championSearch, champions]",{"range":"285","text":"286"},"Update the dependencies array to be: [setChampions, setItems, setRanks, setRunes, setSpells]",{"range":"287","text":"288"},"Update the dependencies array to be: [itemsConfirmed, setItemsConfirmed]",{"range":"289","text":"290"},[1401,1413],"[champions, roleFilter]",[1683,1699],"[championSearch, champions]",[4015,4017],"[setChampions, setItems, setRanks, setRunes, setSpells]",[1741,1757],"[itemsConfirmed, setItemsConfirmed]"]