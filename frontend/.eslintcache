[{"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\index.tsx":"1","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\reportWebVitals.ts":"2","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\components\\Layout.tsx":"3","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\components\\Header\\Header.tsx":"4","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\components\\Footer\\Footer.tsx":"5","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Landing\\Landing.tsx":"6","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\App\\App.tsx":"7","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Landing\\components\\FilterBy\\FilterBy.tsx":"8","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Landing\\components\\Champions\\Champions.tsx":"9","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\components\\Error\\404\\PageNotFound.tsx":"10","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\components\\Header\\components\\AppBar.tsx":"11","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\CreateBuild.tsx":"12","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\components\\Stepper\\Stepper.tsx":"13","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\components\\BuildInformation\\BuildInformation.tsx":"14","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\components\\BuildSelection\\BuildSelection.tsx":"15","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\components\\PlayerInformation\\PlayerInformation.tsx":"16","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\components\\CreateBuildHeader\\CreateBuildHeader.tsx":"17","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\components\\BuildSelection\\components\\ChampionSelect\\ChampionSelect.tsx":"18","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\components\\BuildSelection\\components\\ItemsSelect\\ItemsSelect.tsx":"19","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\components\\BuildSelection\\components\\ItemsSelected\\ItemsSelected.tsx":"20","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\components\\BuildSelection\\components\\RunesSelect\\RunesSelect.tsx":"21","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\components\\BuildSelection\\components\\RunesSelect\\components\\Keystone.tsx":"22","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\components\\BuildSelection\\components\\RunesSelect\\components\\Domination.tsx":"23","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\components\\BuildSelection\\components\\RunesSelect\\components\\Resolve.tsx":"24","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\components\\BuildSelection\\components\\RunesSelect\\components\\Inspiration.tsx":"25","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\components\\BuildSelection\\components\\SpellsSelect\\SpellsSelect.tsx":"26","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\components\\BuildSelection\\components\\SpellsSelect\\components\\Spell.tsx":"27","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\components\\Loading\\Backdrop.tsx":"28","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\store\\actions.js":"29","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\store\\reducers\\gameData.js":"30","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\store\\reducers\\build.js":"31","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\utils\\interfaces.ts":"32","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\utils\\alertpopups.js":"33","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Builds\\Champion\\ChampionBuilds.tsx":"34","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Builds\\Player\\PlayerBuild.tsx":"35","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Builds\\Player\\components\\PlayerBuildHeader\\PlayerBuildHeader.tsx":"36","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Builds\\Player\\components\\SectionDivider\\SectionDivider.tsx":"37","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Builds\\Player\\components\\RuneItem\\RuneItem.tsx":"38","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Builds\\Player\\components\\Spellitem\\SpellItem.tsx":"39","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Builds\\Player\\components\\PlayerBuildFooter\\PlayerBuildFooter.tsx":"40","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\components\\Popover\\ItemPopover.tsx":"41","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Builds\\Player\\components\\BuildItem\\BuildItem.tsx":"42","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\components\\Popover\\RunePopover.tsx":"43","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\components\\Popover\\SpellPopover.tsx":"44","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Builds\\Champion\\components\\ChampionData\\ChampionData.tsx":"45","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Builds\\Champion\\components\\BuildsList\\BuildsList.tsx":"46","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Builds\\Champion\\components\\BuildsList\\components\\NoBuilds\\NoBuilds.tsx":"47","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Builds\\Champion\\components\\BuildsList\\components\\BuildBox\\BuildBox.tsx":"48","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Builds\\Champion\\components\\BuildsList\\components\\BuildBox\\components\\BuildDate\\BuildDate.tsx":"49","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Builds\\Champion\\components\\BuildsList\\components\\BuildBox\\components\\BuildSpell\\BuildSpell.tsx":"50","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Builds\\Champion\\components\\BuildsList\\components\\BuildBox\\components\\BuildRune\\BuildRune.tsx":"51","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Builds\\Champion\\components\\BuildsList\\components\\BuildBox\\components\\BuildRankUser\\BuildRankUser.tsx":"52","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Builds\\Champion\\components\\BuildsList\\components\\BuildBox\\components\\BuildLearnMoreButton\\BuildLearnMoreButton.tsx":"53","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Builds\\Champion\\components\\ChampionData\\components\\Lanes\\Lanes.tsx":"54","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Builds\\Champion\\components\\ChampionData\\components\\Counters\\Counters.tsx":"55","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\FAQ\\FAQ.tsx":"56","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\FAQ\\components\\AccordionFAQ.tsx":"57","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Builds\\Champion\\components\\BuildsList\\components\\BuildBox\\components\\BuildItem\\BuildItem.tsx":"58","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\utils\\globalvars.js":"59"},{"size":1313,"mtime":1614060803734,"results":"60","hashOfConfig":"61"},{"size":425,"mtime":499162500000,"results":"62","hashOfConfig":"61"},{"size":886,"mtime":1614769422065,"results":"63","hashOfConfig":"61"},{"size":278,"mtime":1613392509686,"results":"64","hashOfConfig":"61"},{"size":1710,"mtime":1615022685602,"results":"65","hashOfConfig":"61"},{"size":2565,"mtime":1615024033446,"results":"66","hashOfConfig":"61"},{"size":6033,"mtime":1615024297688,"results":"67","hashOfConfig":"61"},{"size":1634,"mtime":1615022644102,"results":"68","hashOfConfig":"61"},{"size":1432,"mtime":1614957240428,"results":"69","hashOfConfig":"61"},{"size":293,"mtime":1615025682646,"results":"70","hashOfConfig":"61"},{"size":1931,"mtime":1615014761621,"results":"71","hashOfConfig":"61"},{"size":4083,"mtime":1615025713816,"results":"72","hashOfConfig":"61"},{"size":1818,"mtime":1614073934430,"results":"73","hashOfConfig":"61"},{"size":2386,"mtime":1614074780047,"results":"74","hashOfConfig":"61"},{"size":1021,"mtime":1614333846561,"results":"75","hashOfConfig":"61"},{"size":3385,"mtime":1614957224073,"results":"76","hashOfConfig":"61"},{"size":795,"mtime":1614073704465,"results":"77","hashOfConfig":"61"},{"size":2773,"mtime":1614957163101,"results":"78","hashOfConfig":"61"},{"size":6155,"mtime":1614957185632,"results":"79","hashOfConfig":"61"},{"size":4587,"mtime":1614957206943,"results":"80","hashOfConfig":"61"},{"size":4163,"mtime":1614074939071,"results":"81","hashOfConfig":"61"},{"size":2788,"mtime":1614957133471,"results":"82","hashOfConfig":"61"},{"size":2857,"mtime":1614957116898,"results":"83","hashOfConfig":"61"},{"size":2773,"mtime":1614957137017,"results":"84","hashOfConfig":"61"},{"size":2851,"mtime":1614957128496,"results":"85","hashOfConfig":"61"},{"size":2193,"mtime":1614074956316,"results":"86","hashOfConfig":"61"},{"size":2000,"mtime":1614957143659,"results":"87","hashOfConfig":"61"},{"size":614,"mtime":1613638537382,"results":"88","hashOfConfig":"61"},{"size":1300,"mtime":1614222908092,"results":"89","hashOfConfig":"61"},{"size":970,"mtime":1614942900771,"results":"90","hashOfConfig":"61"},{"size":5305,"mtime":1614059755570,"results":"91","hashOfConfig":"61"},{"size":1781,"mtime":1614059430891,"results":"92","hashOfConfig":"61"},{"size":758,"mtime":1614043562167,"results":"93","hashOfConfig":"61"},{"size":2219,"mtime":1615025245044,"results":"94","hashOfConfig":"61"},{"size":3794,"mtime":1615025567709,"results":"95","hashOfConfig":"61"},{"size":2793,"mtime":1614957274045,"results":"96","hashOfConfig":"61"},{"size":477,"mtime":1614783336555,"results":"97","hashOfConfig":"61"},{"size":1940,"mtime":1614957287913,"results":"98","hashOfConfig":"61"},{"size":1752,"mtime":1614957296406,"results":"99","hashOfConfig":"61"},{"size":871,"mtime":1614235227081,"results":"100","hashOfConfig":"61"},{"size":2603,"mtime":1614957309249,"results":"101","hashOfConfig":"61"},{"size":2131,"mtime":1614957258667,"results":"102","hashOfConfig":"61"},{"size":2216,"mtime":1614336322853,"results":"103","hashOfConfig":"61"},{"size":2239,"mtime":1614584824412,"results":"104","hashOfConfig":"61"},{"size":1991,"mtime":1614957347780,"results":"105","hashOfConfig":"61"},{"size":710,"mtime":1614960348463,"results":"106","hashOfConfig":"61"},{"size":785,"mtime":1614960406661,"results":"107","hashOfConfig":"61"},{"size":2834,"mtime":1615022721068,"results":"108","hashOfConfig":"61"},{"size":502,"mtime":1614960350837,"results":"109","hashOfConfig":"61"},{"size":1178,"mtime":1614960378200,"results":"110","hashOfConfig":"61"},{"size":1161,"mtime":1614960372513,"results":"111","hashOfConfig":"61"},{"size":743,"mtime":1614960368159,"results":"112","hashOfConfig":"61"},{"size":908,"mtime":1614960364721,"results":"113","hashOfConfig":"61"},{"size":1645,"mtime":1615022839983,"results":"114","hashOfConfig":"61"},{"size":3811,"mtime":1614942480926,"results":"115","hashOfConfig":"61"},{"size":1414,"mtime":1615026065085,"results":"116","hashOfConfig":"61"},{"size":5798,"mtime":1615015146671,"results":"117","hashOfConfig":"61"},{"size":1165,"mtime":1614960433313,"results":"118","hashOfConfig":"61"},{"size":639,"mtime":1615015999860,"results":"119","hashOfConfig":"61"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"123"},"q16prs",{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"132","messages":"133","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"134","messages":"135","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"144","messages":"145","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"123"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"123"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"123"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"123"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"123"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"123"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"123"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"198","messages":"199","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"200","messages":"201","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"202","usedDeprecatedRules":"123"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"219","usedDeprecatedRules":"123"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"240","messages":"241","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"242","usedDeprecatedRules":"123"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"247","messages":"248","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\index.tsx",["251","252","253"],"import React from 'react';\nimport ReactDOM from 'react-dom';\n\n// Redux\nimport { createStore, combineReducers } from 'redux';\nimport { Provider } from 'react-redux';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport storage from 'redux-persist/lib/storage';\nimport buildReducer from './store/reducers/build';\nimport gameDataReducer from './store/reducers/gameData';\n\nimport './index.css';\nimport App from './App/App';\nimport reportWebVitals from './reportWebVitals';\n\nconst persistConfig = {\n\tkey: 'root',\n\tstorage: storage,\n};\n\nconst rootReducer = combineReducers({\n\tbuild: buildReducer,\n\tgameData: gameDataReducer,\n});\n\nconst pReducer = persistReducer(persistConfig, rootReducer);\n\nconst store = createStore(rootReducer);\n\nconst persistor = persistStore(store);\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<Provider store={store}>\n\t\t\t{/* <PersistGate loading={null} persistor={persistor}> */}\n\t\t\t<App />\n\t\t\t{/* </PersistGate> */}\n\t\t</Provider>\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["254","255"],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\reportWebVitals.ts",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\components\\Layout.tsx",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\components\\Header\\Header.tsx",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\components\\Footer\\Footer.tsx",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Landing\\Landing.tsx",["256","257","258"],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\App\\App.tsx",["259"],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Landing\\components\\FilterBy\\FilterBy.tsx",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Landing\\components\\Champions\\Champions.tsx",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\components\\Error\\404\\PageNotFound.tsx",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\components\\Header\\components\\AppBar.tsx",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\CreateBuild.tsx",["260","261","262"],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\components\\Stepper\\Stepper.tsx",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\components\\BuildInformation\\BuildInformation.tsx",["263"],"import React from 'react';\n\n// Redux\nimport { connect, ConnectedProps } from 'react-redux';\nimport actionTypes from '../../../../../store/actions';\n\n// MaterialUI\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\n// Components\n// CSS\nimport styles from './createbuild.module.css';\n// Types\nimport { RootState } from '../../../../../utils/interfaces';\n\nconst BuildInformation = (props: BuildInformationProps) => {\n\t// Build PROPS\n\tconst { buildTitle, buildRole, setBuildTitle, setBuildRole } = props;\n\n\tconst roles = ['Top', 'Jungle', 'Middle', 'Bottom', 'Support'];\n\n\t// =============== Build Title =============== //\n\tconst handleBuildTitleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n\t\tconst { value } = e.target;\n\n\t\tsetBuildTitle(value);\n\t};\n\n\t// =============== Build Role =============== //\n\tconst handleBuildRoleChange = (e: React.ChangeEvent<HTMLSelectElement>) => {\n\t\tconst { value } = e.target;\n\n\t\tsetBuildRole(value as string);\n\t};\n\n\treturn (\n\t\t<Grid container spacing={3} style={{ color: '#EBEBEB' }}>\n\t\t\t<Grid item xs={12} sm={6}>\n\t\t\t\t<Box>\n\t\t\t\t\t<p>1. Build Title</p>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\tvalue={buildTitle}\n\t\t\t\t\t\tplaceholder='Build title'\n\t\t\t\t\t\tstyle={{ width: '100%' }}\n\t\t\t\t\t\tonChange={(e) => handleBuildTitleChange(e)}\n\t\t\t\t\t/>\n\t\t\t\t</Box>\n\t\t\t</Grid>\n\t\t\t<Grid item xs={12} sm={6}>\n\t\t\t\t<Box>\n\t\t\t\t\t<p>2. Role</p>\n\t\t\t\t\t{\n\t\t\t\t\t\t<select value={buildRole} onChange={handleBuildRoleChange}>\n\t\t\t\t\t\t\t{roles.map((role, index) => {\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<option key={index} value={role}>\n\t\t\t\t\t\t\t\t\t\t{role}\n\t\t\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t</select>\n\t\t\t\t\t}\n\t\t\t\t</Box>\n\t\t\t</Grid>\n\t\t</Grid>\n\t);\n};\n\n// https://redux.js.org/recipes/usage-with-typescript\nconst mapStateToProps = (state: RootState) => {\n\treturn {\n\t\tbuildTitle: state.build.buildTitle,\n\t\tbuildRole: state.build.buildRole,\n\t};\n};\n\nconst mapDispatchToProps = (dispatch: any) => {\n\treturn {\n\t\tsetBuildTitle: (newBuildTitle: string) =>\n\t\t\tdispatch({ type: actionTypes.BUILD_SET_BUILDTITLE, data: newBuildTitle }),\n\t\tsetBuildRole: (newBuildRole: string) =>\n\t\t\tdispatch({ type: actionTypes.BUILD_SET_BUILDROLE, data: newBuildRole }),\n\t};\n};\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\n\ntype PropsFromRedux = ConnectedProps<typeof connector>;\n\ntype BuildInformationProps = PropsFromRedux;\n\nexport default connector(BuildInformation);\n","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\components\\BuildSelection\\BuildSelection.tsx",["264"],"import React from 'react';\n\n// MaterialUI\nimport Grid from '@material-ui/core/Grid';\n// Components\nimport ChampionSelect from './components/ChampionSelect/ChampionSelect';\nimport ItemsSelect from './components/ItemsSelect/ItemsSelect';\nimport RunesSelect from './components/RunesSelect/RunesSelect';\nimport SpellsSelect from './components/SpellsSelect/SpellsSelect';\n// CSS\nimport styles from './buildselection.module.css';\n// Types\ntype BuildSelectionProps = {\n\tformControl: string;\n};\n\nconst BuildSelection = (props: BuildSelectionProps) => {\n\tconst { formControl } = props;\n\n\treturn (\n\t\t<Grid container spacing={3} style={{ color: '#EBEBEB' }}>\n\t\t\t<Grid item xs={12}>\n\t\t\t\t<ChampionSelect formControl={formControl} />\n\t\t\t</Grid>\n\t\t\t<Grid item xs={12}>\n\t\t\t\t<ItemsSelect formControl={formControl} />\n\t\t\t</Grid>\n\t\t\t<Grid item xs={12}>\n\t\t\t\t<RunesSelect formControl={formControl} />\n\t\t\t</Grid>\n\t\t\t<Grid item xs={12}>\n\t\t\t\t<SpellsSelect formControl={formControl} />\n\t\t\t</Grid>\n\t\t</Grid>\n\t);\n};\n\nexport default BuildSelection;\n","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\components\\PlayerInformation\\PlayerInformation.tsx",["265"],"import React from 'react';\n// @ts-ignore - No types for this module\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\n\n// Redux\nimport { connect, ConnectedProps } from 'react-redux';\nimport actionTypes from '../../../../../store/actions';\n\n// MaterialUI\nimport Box from '@material-ui/core/Box';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport Grid from '@material-ui/core/Grid';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport NativeSelect from '@material-ui/core/NativeSelect';\n// Components\n// Types\nimport { RankInterface, RootState } from '../../../../../utils/interfaces';\n// CSS\nimport styles from './playerinformation.module.css';\n\nconst PlayerInformation = (props: PlayerInformationProps) => {\n\tconst { formControl } = props;\n\t// Game Data PROPS\n\tconst { ranks } = props;\n\t// Build PROPS\n\tconst { rankSelected, setRankSelected, username, setUsername } = props;\n\n\t// =============== Username =============== //\n\tconst handleUsernameChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n\t\tconst { value } = e.target;\n\n\t\tsetUsername(value);\n\t};\n\n\t// =============== Rank =============== //\n\tconst handleRankSelectChange = (e: React.ChangeEvent<HTMLSelectElement>) => {\n\t\tconst getRank = ranks.find(\n\t\t\t(rank: RankInterface) => rank.id === e.target.value\n\t\t);\n\n\t\tif (!getRank) {\n\t\t\treturn;\n\t\t} else {\n\t\t\tsetRankSelected(getRank);\n\t\t}\n\t};\n\n\treturn (\n\t\t<Grid container spacing={3} style={{ color: '#EBEBEB' }}>\n\t\t\t<Grid item xs={12} sm={6}>\n\t\t\t\t<Box>\n\t\t\t\t\t<p>7. Username</p>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\tvalue={username}\n\t\t\t\t\t\tplaceholder='Username'\n\t\t\t\t\t\tonChange={(e) => handleUsernameChange(e)}\n\t\t\t\t\t\tstyle={{ width: '100%' }}\n\t\t\t\t\t/>\n\t\t\t\t</Box>\n\t\t\t</Grid>\n\t\t\t<Grid item xs={12} sm={6}>\n\t\t\t\t<Box>\n\t\t\t\t\t<p>8. Rank</p>\n\n\t\t\t\t\t<Box>\n\t\t\t\t\t\t<LazyLoadImage\n\t\t\t\t\t\t\tsrc={`/images/wildriftranks/${rankSelected.id}.png`}\n\t\t\t\t\t\t\tstyle={{ width: '100px' }}\n\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t<FormControl className={formControl}>\n\t\t\t\t\t\t\t\t<InputLabel shrink htmlFor='rank-select'>\n\t\t\t\t\t\t\t\t\tRank\n\t\t\t\t\t\t\t\t</InputLabel>\n\t\t\t\t\t\t\t\t<NativeSelect\n\t\t\t\t\t\t\t\t\tvalue={rankSelected.id}\n\t\t\t\t\t\t\t\t\tonChange={handleRankSelectChange}\n\t\t\t\t\t\t\t\t\tinputProps={{\n\t\t\t\t\t\t\t\t\t\tname: 'rank',\n\t\t\t\t\t\t\t\t\t\tid: 'rank-select',\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{ranks.map(({ id, rankName, url }: RankInterface, index) => {\n\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t<option key={index} value={id}>\n\t\t\t\t\t\t\t\t\t\t\t\t{rankName}\n\t\t\t\t\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t</NativeSelect>\n\t\t\t\t\t\t\t\t<FormHelperText>Select your rank</FormHelperText>\n\t\t\t\t\t\t\t</FormControl>\n\t\t\t\t\t\t}\n\t\t\t\t\t</Box>\n\t\t\t\t</Box>\n\t\t\t</Grid>\n\t\t</Grid>\n\t);\n};\n\nconst mapStateToProps = (state: RootState) => {\n\treturn {\n\t\trankSelected: state.build.rank,\n\t\tranks: state.gameData.ranks,\n\t\tusername: state.build.username,\n\t};\n};\n\nconst mapDispatchToProps = (dispatch: any) => {\n\treturn {\n\t\tsetRankSelected: (newRank: RankInterface) =>\n\t\t\tdispatch({ type: actionTypes.BUILD_SET_RANKSELECTED, data: newRank }),\n\t\tsetUsername: (newUsername: string) =>\n\t\t\tdispatch({ type: actionTypes.BUILD_SET_USERNAME, data: newUsername }),\n\t};\n};\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\n\ntype PropsFromRedux = ConnectedProps<typeof connector>;\n\ntype PlayerInformationProps = PropsFromRedux & {\n\tformControl: string;\n};\n\nexport default connector(PlayerInformation);\n","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\components\\CreateBuildHeader\\CreateBuildHeader.tsx",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\components\\BuildSelection\\components\\ChampionSelect\\ChampionSelect.tsx",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\components\\BuildSelection\\components\\ItemsSelect\\ItemsSelect.tsx",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\components\\BuildSelection\\components\\ItemsSelected\\ItemsSelected.tsx",["266","267","268"],"import React, { useState, useEffect } from 'react';\n// @ts-ignore - No types for this module\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\n\nimport {\n\terrorItemDuplicate,\n\terrorPrimaryItemsLimit,\n} from '../../../../../../../utils/alertpopups';\n\n// Redux\nimport { connect, ConnectedProps } from 'react-redux';\nimport actionTypes from '../../../../../../../store/actions';\n\n// MaterialUI\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport Grow from '@material-ui/core/Grow';\nimport Typography from '@material-ui/core/Typography';\n// Components\nimport ItemPopover from '../../../../../../../components/Popover/ItemPopover';\n// CSS\nimport styles from './itemsselected.module.css';\n// Types\nimport {\n\tItemInterface,\n\tRootState,\n} from '../../../../../../../utils/interfaces';\n\nconst ItemsSelected = (props: ItemsSelectedProps) => {\n\tconst { handleDeleteItemClick } = props;\n\t// Build PROPS\n\tconst { itemsConfirmed, setItemsConfirmed } = props;\n\n\t// Check for duplicate items selected\n\t// Check for primary items limit\n\tuseEffect(() => {\n\t\tconst primaryItems = itemsConfirmed.filter(\n\t\t\t(item) => item.type === 'primary'\n\t\t);\n\n\t\tvar itemArray = itemsConfirmed.map((item) => {\n\t\t\treturn item.id;\n\t\t});\n\t\tvar isDuplicate = itemArray.some((item, index) => {\n\t\t\treturn itemArray.indexOf(item) !== index;\n\t\t});\n\n\t\t// Remove duplicates from itemsConfirmed Array\n\t\tconst filteredItemsConfirmed = itemsConfirmed.filter(\n\t\t\t(item, index, arr) => arr.findIndex((t) => t.id === item.id) === index\n\t\t);\n\n\t\tif (isDuplicate) {\n\t\t\tsetItemsConfirmed(filteredItemsConfirmed);\n\t\t\terrorItemDuplicate();\n\t\t} else if (primaryItems.length > 6) {\n\t\t\terrorPrimaryItemsLimit();\n\n\t\t\tconst itemsConfirmedCopy = [...itemsConfirmed];\n\n\t\t\titemsConfirmedCopy.pop();\n\n\t\t\tsetItemsConfirmed(itemsConfirmedCopy);\n\t\t}\n\t}, [itemsConfirmed]);\n\n\treturn (\n\t\t<Box>\n\t\t\t<Typography gutterBottom>Items List</Typography>\n\t\t\t<i>Click on an item to delete it from your list</i>\n\n\t\t\t<Box className={styles.itemsSelectedContainer}>\n\t\t\t\t{itemsConfirmed.length !== 0 ? (\n\t\t\t\t\t<>\n\t\t\t\t\t\t{/* TYPE: MAIN */}\n\t\t\t\t\t\t<p>Primary Items</p>\n\t\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t\t{itemsConfirmed\n\t\t\t\t\t\t\t\t.filter((item: ItemInterface) => item.type !== 'optional')\n\t\t\t\t\t\t\t\t.map((currentItem, index) => {\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t<Grow\n\t\t\t\t\t\t\t\t\t\t\tkey={index}\n\t\t\t\t\t\t\t\t\t\t\tin={true}\n\t\t\t\t\t\t\t\t\t\t\tstyle={{ transformOrigin: '0 0 0' }}\n\t\t\t\t\t\t\t\t\t\t\t{...(true ? { timeout: 200 } : {})}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t<Box className={styles.itemContainer}>\n\t\t\t\t\t\t\t\t\t\t\t\t<Box className={styles.itemImageContainer}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<LazyLoadImage\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttitle={currentItem.itemName}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={styles.itemHover}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsrc={`/images/wildriftitems/${currentItem.id}.png`}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() =>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleDeleteItemClick(currentItem.id)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t\t\t\t</Grow>\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t</Grid>\n\n\t\t\t\t\t\t{/* TYPE: OPTIONAL */}\n\t\t\t\t\t\t<p>Optional Items</p>\n\t\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t\t{itemsConfirmed\n\t\t\t\t\t\t\t\t.filter((item: ItemInterface) => item.type !== 'primary')\n\t\t\t\t\t\t\t\t.map((currentItem: ItemInterface, index) => {\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t<Grow\n\t\t\t\t\t\t\t\t\t\t\tkey={index}\n\t\t\t\t\t\t\t\t\t\t\tin={true}\n\t\t\t\t\t\t\t\t\t\t\tstyle={{ transformOrigin: '0 0 0' }}\n\t\t\t\t\t\t\t\t\t\t\t{...(true ? { timeout: 200 } : {})}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t<Box className={styles.itemContainer}>\n\t\t\t\t\t\t\t\t\t\t\t\t<Box className={styles.itemImageContainer}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<LazyLoadImage\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttitle={currentItem.itemName}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={styles.itemHover}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsrc={`/images/wildriftitems/${currentItem.id}.png`}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() =>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleDeleteItemClick(currentItem.id)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t\t\t\t</Grow>\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</>\n\t\t\t\t) : (\n\t\t\t\t\t<p>You haven't added any items to your build yet.</p>\n\t\t\t\t)}\n\t\t\t</Box>\n\t\t</Box>\n\t);\n};\n\nconst mapStateToProps = (state: RootState) => {\n\treturn {\n\t\titemsConfirmed: state.build.itemsConfirmed,\n\t};\n};\n\nconst mapDispatchToProps = (dispatch: any) => {\n\treturn {\n\t\tsetItemsConfirmed: (newItemsConfirmed: Array<ItemInterface>) =>\n\t\t\tdispatch({\n\t\t\t\ttype: actionTypes.BUILD_SET_ITEMSCONFIRMED,\n\t\t\t\tdata: newItemsConfirmed,\n\t\t\t}),\n\t};\n};\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\n\ntype PropsFromRedux = ConnectedProps<typeof connector>;\n\ntype ItemsSelectedProps = PropsFromRedux & {\n\thandleDeleteItemClick: (itemId: string) => void;\n};\n\nexport default connector(ItemsSelected);\n","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\components\\BuildSelection\\components\\RunesSelect\\RunesSelect.tsx",["269"],"import React from 'react';\n\n// Redux\nimport { connect, ConnectedProps } from 'react-redux';\nimport actionTypes from '../../../../../../../store/actions';\n\n// MaterialUI\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\n// Components\nimport Domination from './components/Domination';\nimport Inspiration from './components/Inspiration';\nimport Keystone from './components/Keystone';\nimport Resolve from './components/Resolve';\n// CSS\nimport styles from './runesselect.module.css';\n// Types\nimport {\n\tRuneInterface,\n\tRootState,\n} from '../../../../../../../utils/interfaces';\n\nconst RunesSelect = (props: RunesSelectProps) => {\n\tconst { formControl } = props;\n\t// Game Data PROPS\n\tconst { runes } = props;\n\t// Build PROPS\n\tconst { runesSelected, setRunesSelected } = props;\n\n\t// Everytime user changes a rune, this function gets executed\n\t// - sets new rune\n\t// - sets reason property\n\tconst handleRuneSelectChange = (\n\t\te: React.ChangeEvent<HTMLSelectElement>,\n\t\truneType: string,\n\t\trunePath?: string\n\t) => {\n\t\tconst getRune = runes.find(\n\t\t\t(rune: RuneInterface) => rune.id === e.target.value\n\t\t);\n\n\t\tif (getRune) {\n\t\t\t/*\n\n\t\t\t\t\t- \"{...getRune}\" spreads the previous state\n\t\t\t\t\t- \"reason: prev.keystone.reason\" gets the 'reason' property of the previous rune and sets it to the new rune\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\t...prev,\n\t\t\t\t\t\tkeystone: { ...getRune, reason: prev.keystone.reason || '' },\n\t\t\t\t\t};\n\n\t\t\t*/\n\n\t\t\tconst runesSelectStateHandler = (runeName: string) => {\n\t\t\t\tconst prevRunesSelected: { [key: string]: RuneInterface } = {\n\t\t\t\t\t...runesSelected,\n\t\t\t\t};\n\n\t\t\t\tconst modifiedRunesSelected = {\n\t\t\t\t\t...prevRunesSelected,\n\t\t\t\t\t[runeName]: {\n\t\t\t\t\t\t...getRune,\n\t\t\t\t\t\treason: prevRunesSelected[runeName].reason || '',\n\t\t\t\t\t},\n\t\t\t\t};\n\n\t\t\t\tsetRunesSelected(runeName, modifiedRunesSelected);\n\t\t\t};\n\n\t\t\tif (runeType === 'keystone') {\n\t\t\t\trunesSelectStateHandler('keystone');\n\t\t\t}\n\t\t\tif (runeType === 'secondary') {\n\t\t\t\tswitch (runePath) {\n\t\t\t\t\tcase 'domination':\n\t\t\t\t\t\trunesSelectStateHandler('domination');\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'resolve':\n\t\t\t\t\t\trunesSelectStateHandler('resolve');\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'inspiration':\n\t\t\t\t\t\trunesSelectStateHandler('inspiration');\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\tconst handleRuneExplanationChange = (\n\t\te: React.ChangeEvent<HTMLTextAreaElement>,\n\t\truneName: string\n\t) => {\n\t\tconst prevRunesSelected: { [key: string]: RuneInterface } = {\n\t\t\t...runesSelected,\n\t\t};\n\n\t\tlet getRune = prevRunesSelected[runeName];\n\n\t\tconst modifiedRunesSelected = {\n\t\t\t...prevRunesSelected,\n\t\t\t[runeName]: {\n\t\t\t\t...getRune,\n\t\t\t\treason: e.target.value,\n\t\t\t},\n\t\t};\n\n\t\tsetRunesSelected(runeName, modifiedRunesSelected);\n\t};\n\n\treturn (\n\t\t<Box>\n\t\t\t<p>5. Runes</p>\n\n\t\t\t<Grid container item xs={12}>\n\t\t\t\t{/* KEYSTONE Rune */}\n\t\t\t\t<Keystone\n\t\t\t\t\tformControl={formControl}\n\t\t\t\t\thandleRuneSelectChange={handleRuneSelectChange}\n\t\t\t\t\thandleRuneExplanationChange={handleRuneExplanationChange}\n\t\t\t\t/>\n\n\t\t\t\t{/* Secondary: Domination */}\n\t\t\t\t<Domination\n\t\t\t\t\tformControl={formControl}\n\t\t\t\t\thandleRuneSelectChange={handleRuneSelectChange}\n\t\t\t\t\thandleRuneExplanationChange={handleRuneExplanationChange}\n\t\t\t\t/>\n\n\t\t\t\t{/* Secondary: Resolve */}\n\t\t\t\t<Resolve\n\t\t\t\t\tformControl={formControl}\n\t\t\t\t\thandleRuneSelectChange={handleRuneSelectChange}\n\t\t\t\t\thandleRuneExplanationChange={handleRuneExplanationChange}\n\t\t\t\t/>\n\n\t\t\t\t{/* Secondary: Inspiration */}\n\t\t\t\t<Inspiration\n\t\t\t\t\tformControl={formControl}\n\t\t\t\t\thandleRuneSelectChange={handleRuneSelectChange}\n\t\t\t\t\thandleRuneExplanationChange={handleRuneExplanationChange}\n\t\t\t\t/>\n\t\t\t</Grid>\n\t\t</Box>\n\t);\n};\n\nconst mapStateToProps = (state: RootState) => {\n\treturn {\n\t\trunesSelected: state.build.runes,\n\t\trunes: state.gameData.runes,\n\t};\n};\n\nconst mapDispatchToprops = (dispatch: any) => {\n\treturn {\n\t\tsetRunesSelected: (\n\t\t\truneName: string,\n\t\t\tdata: { [key: string]: RuneInterface }\n\t\t) =>\n\t\t\tdispatch({ type: actionTypes.BUILD_SET_RUNESSELECTED, runeName, data }),\n\t};\n};\n\nconst connector = connect(mapStateToProps, mapDispatchToprops);\n\ntype PropsFromRedux = ConnectedProps<typeof connector>;\n\ntype RunesSelectProps = PropsFromRedux & {\n\tformControl: string;\n};\n\nexport default connector(RunesSelect);\n","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\components\\BuildSelection\\components\\RunesSelect\\components\\Keystone.tsx",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\components\\BuildSelection\\components\\RunesSelect\\components\\Domination.tsx",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\components\\BuildSelection\\components\\RunesSelect\\components\\Resolve.tsx",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\components\\BuildSelection\\components\\RunesSelect\\components\\Inspiration.tsx",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\components\\BuildSelection\\components\\SpellsSelect\\SpellsSelect.tsx",["270"],"import React from 'react';\n\n// Redux\nimport { connect, ConnectedProps } from 'react-redux';\nimport actionTypes from '../../../../../../../store/actions';\n\n// MaterialUI\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\n// Components\nimport Spell from './components/Spell';\n// CSS\nimport styles from './spellsselect.module.css';\n// Types\nimport {\n\tSpellInterface,\n\tRootState,\n} from '../../../../../../../utils/interfaces';\n\nconst SpellsSelect = (props: SpellsSelectProps) => {\n\tconst { formControl } = props;\n\t// Game Data PROPS\n\tconst { spells } = props;\n\t// Build PROPS\n\tconst { spellsSelected, setSpellsSelected } = props;\n\n\tconst handleSpellSelectChange = (\n\t\te: React.ChangeEvent<HTMLSelectElement>,\n\t\tspellNumber: number\n\t) => {\n\t\tconst { value: spellId } = e.target;\n\n\t\tconst getSpell = spells.find(\n\t\t\t(spell: SpellInterface) => spell.id === spellId\n\t\t);\n\n\t\tif (getSpell) {\n\t\t\tswitch (spellNumber) {\n\t\t\t\tcase 1:\n\t\t\t\t\tsetSpellsSelected('spellOne', getSpell);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 2:\n\t\t\t\t\tsetSpellsSelected('spellTwo', getSpell);\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t};\n\n\treturn (\n\t\t<Box>\n\t\t\t<p>6. Summoner Spells</p>\n\n\t\t\t<Grid container item xs={12}>\n\t\t\t\t{/* Spell One */}\n\t\t\t\t<Spell\n\t\t\t\t\tformControl={formControl}\n\t\t\t\t\tspells={spells}\n\t\t\t\t\tspellNumber={1}\n\t\t\t\t\tspellsSelected={spellsSelected}\n\t\t\t\t\thandleSpellSelectChange={handleSpellSelectChange}\n\t\t\t\t/>\n\n\t\t\t\t{/* Spell Two */}\n\t\t\t\t<Spell\n\t\t\t\t\tformControl={formControl}\n\t\t\t\t\tspells={spells}\n\t\t\t\t\tspellNumber={2}\n\t\t\t\t\tspellsSelected={spellsSelected}\n\t\t\t\t\thandleSpellSelectChange={handleSpellSelectChange}\n\t\t\t\t/>\n\t\t\t</Grid>\n\t\t</Box>\n\t);\n};\n\nconst mapStateToProps = (state: RootState) => {\n\treturn {\n\t\tspellsSelected: state.build.spells,\n\t\tspells: state.gameData.spells,\n\t};\n};\n\nconst mapDispatchToprops = (dispatch: any) => {\n\treturn {\n\t\tsetSpellsSelected: (spellKey: string, data: SpellInterface) =>\n\t\t\tdispatch({ type: actionTypes.BUILD_SET_SPELLSSELECTED, spellKey, data }),\n\t};\n};\n\nconst connector = connect(mapStateToProps, mapDispatchToprops);\n\ntype PropsFromRedux = ConnectedProps<typeof connector>;\n\ntype SpellsSelectProps = PropsFromRedux & {\n\tformControl: string;\n};\n\nexport default connector(SpellsSelect);\n","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\components\\BuildSelection\\components\\SpellsSelect\\components\\Spell.tsx",["271"],"import React from 'react';\n// @ts-ignore - No types for this module\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\n\n// MaterialUI\nimport FormControl from '@material-ui/core/FormControl';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport Grid from '@material-ui/core/Grid';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport NativeSelect from '@material-ui/core/NativeSelect';\n// Components\n// CSS\nimport styles from './spell.module.css';\n// Types\nimport { SpellInterface } from '../../../../../../../../utils/interfaces';\ntype SpellProps = {\n\tformControl: string;\n\tspells: Array<SpellInterface>;\n\tspellNumber: number;\n\tspellsSelected: {\n\t\tspellOne: SpellInterface;\n\t\tspellTwo: SpellInterface;\n\t};\n\thandleSpellSelectChange(\n\t\te: React.ChangeEvent<HTMLSelectElement>,\n\t\tspellNumber: number\n\t): void;\n};\n\nconst Spell = (props: SpellProps) => {\n\tconst {\n\t\tformControl,\n\t\tspells,\n\t\tspellNumber,\n\t\tspellsSelected,\n\t\thandleSpellSelectChange,\n\t} = props;\n\tconst { spellOne, spellTwo } = spellsSelected;\n\n\treturn (\n\t\t<Grid item xs={12} sm={3} style={{ marginTop: '10px' }}>\n\t\t\t<LazyLoadImage\n\t\t\t\tsrc={`/images/wildriftspells/${\n\t\t\t\t\tspellNumber === 1 ? spellOne.id : spellTwo.id\n\t\t\t\t}.jpg`}\n\t\t\t\tstyle={{ width: '90px' }}\n\t\t\t/>\n\n\t\t\t{\n\t\t\t\t<FormControl className={formControl}>\n\t\t\t\t\t<InputLabel shrink htmlFor='spell-select'>\n\t\t\t\t\t\t{spellNumber === 1 ? 'Spell One' : 'Spell Two'}\n\t\t\t\t\t</InputLabel>\n\t\t\t\t\t<NativeSelect\n\t\t\t\t\t\tdefaultValue={`${spellNumber === 1 ? spellOne.id : spellTwo.id}`}\n\t\t\t\t\t\tonChange={(e) => handleSpellSelectChange(e, spellNumber)}\n\t\t\t\t\t\tinputProps={{\n\t\t\t\t\t\t\tname: 'spell',\n\t\t\t\t\t\t\tid: 'spell-select',\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t{spells.map(({ id, spellName, url }: SpellInterface, index) => {\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<option key={index} value={id}>\n\t\t\t\t\t\t\t\t\t{spellName}\n\t\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t})}\n\t\t\t\t\t</NativeSelect>\n\t\t\t\t\t<FormHelperText>Select a Spell</FormHelperText>\n\t\t\t\t</FormControl>\n\t\t\t}\n\t\t</Grid>\n\t);\n};\n\nexport default Spell;\n","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\components\\Loading\\Backdrop.tsx",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\store\\actions.js",[],["272","273"],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\store\\reducers\\gameData.js",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\store\\reducers\\build.js",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\utils\\interfaces.ts",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\utils\\alertpopups.js",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Builds\\Champion\\ChampionBuilds.tsx",["274","275"],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Builds\\Player\\PlayerBuild.tsx",["276","277","278"],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Builds\\Player\\components\\PlayerBuildHeader\\PlayerBuildHeader.tsx",["279","280","281","282"],"import React from 'react';\n// @ts-ignore - No types for this module\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\n\n// MaterialUI\nimport Avatar from '@material-ui/core/Avatar';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\n// CSS\nimport styles from './playerbuildheader.module.css';\n// Types\nimport { BuildInterface } from '../../../../../utils/interfaces';\ntype PlayerBuildHeaderProps = {\n\tbuild: BuildInterface;\n};\n\nconst PlayerBuildHeader = (props: PlayerBuildHeaderProps) => {\n\tconst { build } = props;\n\tconst { buildTitle, buildRole, champion, rank, spells, username } = build;\n\n\tlet roleToDisplay;\n\n\tswitch (buildRole) {\n\t\tcase 'Jungle':\n\t\t\troleToDisplay = 'e4cbdb64-7118-436b-b0c6-89388731aeb5';\n\t\t\tbreak;\n\t\tcase 'Support':\n\t\t\troleToDisplay = '35b924df-6d60-4cc5-82a8-4e5dc85272a0';\n\t\t\tbreak;\n\t\tcase 'Top':\n\t\t\troleToDisplay = '53f90d2a-d970-41ec-8d5c-f8775580ad7e';\n\t\t\tbreak;\n\t\tcase 'Middle':\n\t\t\troleToDisplay = '6b7ca1d8-872a-4c54-b685-720e14251941';\n\t\t\tbreak;\n\t\tcase 'Bottom':\n\t\t\troleToDisplay = 'e3f90603-6452-4c33-afe6-466a69b6095b';\n\t\t\tbreak;\n\t}\n\n\treturn (\n\t\t<Grid\n\t\t\tcontainer\n\t\t\twrap='nowrap'\n\t\t\tspacing={2}\n\t\t\tclassName={styles.playerBuildHeaderContainer}\n\t\t>\n\t\t\t{/* Champion Image */}\n\t\t\t<Grid item>\n\t\t\t\t<Box className={styles.championImageContainer}>\n\t\t\t\t\t<LazyLoadImage\n\t\t\t\t\t\tsrc={`/images/wildriftchampions/${champion.id}.jpg`}\n\t\t\t\t\t\tclassName={styles.championImage}\n\t\t\t\t\t\ttitle={champion.championName}\n\t\t\t\t\t/>\n\t\t\t\t\t{/* <Box\n\t\t\t\t\t\tclassName={styles.buildRoleContainer}\n\t\t\t\t\t\tdisplay='flex'\n\t\t\t\t\t\tjustifyContent='center'\n\t\t\t\t\t> \n\t\t\t\t\t\t<LazyLoadImage\n\t\t\t\t\t\t\tsrc={`/images/wildriftroles/${roleToDisplay}.png`}\n\t\t\t\t\t\t\tclassName={styles.buildRoleImage}\n\t\t\t\t\t\t\ttitle={buildRole}\n\t\t\t\t\t\t/> \n\t\t\t\t\t\t<span className={styles.buildRoleText}>{buildRole}</span>\n\t\t\t\t\t</Box> */}\n\t\t\t\t</Box>\n\t\t\t</Grid>\n\n\t\t\t{/* Champion Name, Build Title, and Username */}\n\t\t\t<Grid item xs>\n\t\t\t\t<Box className={styles.buildInformationContainer}>\n\t\t\t\t\t<span className={styles.buildTitleText}>{buildTitle}</span>\n\t\t\t\t\t<Box>\n\t\t\t\t\t\t<p className={styles.buildByText}>\n\t\t\t\t\t\t\t{champion.championName} build by&nbsp;\n\t\t\t\t\t\t\t<span className={styles.usernameText}>{username}</span>\n\t\t\t\t\t\t</p>\n\n\t\t\t\t\t\t<span className={styles.buildInformationText}>\n\t\t\t\t\t\t\t<span className={styles.buildInformationTitle}>Lane:&nbsp;</span>\n\t\t\t\t\t\t\t{buildRole}\n\t\t\t\t\t\t\t&nbsp;|&nbsp;\n\t\t\t\t\t\t\t<span className={styles.buildInformationTitle}>Rank:&nbsp;</span>\n\t\t\t\t\t\t\t{rank.rankName}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t\t<LazyLoadImage\n\t\t\t\t\t\t\tsrc={`/images/wildriftranks/${build.rank.id}.png`}\n\t\t\t\t\t\t\tclassName={styles.laneImage}\n\t\t\t\t\t\t\ttitle={rank.rankName}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Box>\n\t\t\t\t</Box>\n\t\t\t</Grid>\n\t\t</Grid>\n\t);\n};\nexport default PlayerBuildHeader;\n","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Builds\\Player\\components\\SectionDivider\\SectionDivider.tsx",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Builds\\Player\\components\\RuneItem\\RuneItem.tsx",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Builds\\Player\\components\\Spellitem\\SpellItem.tsx",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Builds\\Player\\components\\PlayerBuildFooter\\PlayerBuildFooter.tsx",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\components\\Popover\\ItemPopover.tsx",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Builds\\Player\\components\\BuildItem\\BuildItem.tsx",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\components\\Popover\\RunePopover.tsx",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\components\\Popover\\SpellPopover.tsx",["283"],"import React from 'react';\n\n// MaterialUI\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\nimport Box from '@material-ui/core/Box';\nimport Popover from '@material-ui/core/Popover';\nimport Typography from '@material-ui/core/Typography';\n// Types\nimport { SpellInterface } from '../../utils/interfaces';\n// CSS\nimport styles from './popover.module.css';\nconst useStyles = makeStyles((theme: Theme) =>\n\tcreateStyles({\n\t\tpopover: {\n\t\t\tpointerEvents: 'none',\n\t\t},\n\t\tpaper: {\n\t\t\tpadding: '20px',\n\t\t\tbackgroundColor: '#171717',\n\t\t\tcolor: '#FFFFFF',\n\t\t\twidth: '400px',\n\t\t\tboxShadow: 'none',\n\t\t\tborder: '1px solid #505C75',\n\t\t},\n\t})\n);\n\ntype SpellPopoverProps = {\n\tanchorEl: HTMLElement | null;\n\thandlePopoverClose: () => void;\n\tspell: SpellInterface;\n\topen: boolean;\n};\n\nconst SpellPopover = (props: SpellPopoverProps) => {\n\tconst { anchorEl, handlePopoverClose, spell, open } = props;\n\tconst { cooldown, description, spellName } = spell;\n\n\tconst classes = useStyles();\n\n\treturn (\n\t\t<Popover\n\t\t\tclassName={classes.popover}\n\t\t\tclasses={{\n\t\t\t\tpaper: classes.paper,\n\t\t\t}}\n\t\t\tid='mouse-over-popover'\n\t\t\topen={open}\n\t\t\tonClose={handlePopoverClose}\n\t\t\tanchorEl={anchorEl}\n\t\t\tanchorOrigin={{\n\t\t\t\tvertical: 'top',\n\t\t\t\thorizontal: 'right',\n\t\t\t}}\n\t\t\ttransformOrigin={{\n\t\t\t\tvertical: 'bottom',\n\t\t\t\thorizontal: 'left',\n\t\t\t}}\n\t\t\tdisableRestoreFocus\n\t\t>\n\t\t\t<Typography className={styles.popoverSpellName}>{spellName}</Typography>\n\n\t\t\t{/* === Description === */}\n\t\t\t<Box className={styles.popoverSectionContainer}>\n\t\t\t\t{description &&\n\t\t\t\t\tdescription.map((desc, index) => {\n\t\t\t\t\t\tconst indexOfColon = desc.indexOf(':');\n\t\t\t\t\t\tconst descTitle = desc.slice(0, indexOfColon);\n\t\t\t\t\t\tconst descDescription = desc.slice(indexOfColon, desc.length);\n\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<Box key={index} className={styles.popoverSpellDescContainer}>\n\t\t\t\t\t\t\t\t{indexOfColon < 0 ? (\n\t\t\t\t\t\t\t\t\t<span>{desc}</span>\n\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t\t<span\n\t\t\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\t\t\tcolor: indexOfColon < 0 ? '#CFCFCF' : '#ffb84d',\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t{descTitle}\n\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t<span>{descDescription}</span>\n\t\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t);\n\t\t\t\t\t})}\n\t\t\t</Box>\n\t\t</Popover>\n\t);\n};\n\nexport default SpellPopover;\n","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Builds\\Champion\\components\\ChampionData\\ChampionData.tsx",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Builds\\Champion\\components\\BuildsList\\BuildsList.tsx",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Builds\\Champion\\components\\BuildsList\\components\\NoBuilds\\NoBuilds.tsx",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Builds\\Champion\\components\\BuildsList\\components\\BuildBox\\BuildBox.tsx",["284","285","286","287","288","289","290"],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Builds\\Champion\\components\\BuildsList\\components\\BuildBox\\components\\BuildDate\\BuildDate.tsx",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Builds\\Champion\\components\\BuildsList\\components\\BuildBox\\components\\BuildSpell\\BuildSpell.tsx",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Builds\\Champion\\components\\BuildsList\\components\\BuildBox\\components\\BuildRune\\BuildRune.tsx",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Builds\\Champion\\components\\BuildsList\\components\\BuildBox\\components\\BuildRankUser\\BuildRankUser.tsx",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Builds\\Champion\\components\\BuildsList\\components\\BuildBox\\components\\BuildLearnMoreButton\\BuildLearnMoreButton.tsx",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Builds\\Champion\\components\\ChampionData\\components\\Lanes\\Lanes.tsx",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Builds\\Champion\\components\\ChampionData\\components\\Counters\\Counters.tsx",["291"],"import React from 'react';\n// @ts-ignore - No types for this module\nimport { Tab, Tabs, TabList, TabPanel } from 'react-tabs';\n\n// react-tabs\nimport 'react-tabs/style/react-tabs.css';\n// MaterialUI\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\nimport Avatar from '@material-ui/core/Avatar';\nimport Box from '@material-ui/core/Box';\n// Components\n// CSS\nimport styles from './counters.module.css';\n// Types\ntype ChampionCounterType = {\n\tid: string;\n\tchampionName: string;\n};\ntype CountersProps = {\n\tcounters: {\n\t\tstrongAgainst: Array<ChampionCounterType>;\n\t\tweakAgainst: Array<ChampionCounterType>;\n\t};\n\tchampionName: string;\n};\n\nconst Counters = (props: CountersProps) => {\n\tconst { counters, championName } = props;\n\tconst { strongAgainst, weakAgainst } = counters;\n\n\t// For path='/builds/champion/:championName'\n\tconst convertChampionNameToAlphabet = (champName: string) => {\n\t\treturn champName\n\t\t\t.toLocaleLowerCase()\n\t\t\t.split(' ')\n\t\t\t.filter((char) => char !== '.' && char !== \"'\")\n\t\t\t.join('')\n\t\t\t.replace('.', '')\n\t\t\t.replace(\"'\", '');\n\t};\n\n\treturn (\n\t\t<div\n\t\t\tstyle={{\n\t\t\t\tdisplay: 'flex',\n\t\t\t\tjustifyContent: 'flex-end',\n\t\t\t}}\n\t\t>\n\t\t\t<Tabs style={{ width: '24rem' }}>\n\t\t\t\t{/* Can't use external CSS on <TabList> and <Tab> because it doesn't overwrite even with !important */}\n\t\t\t\t<TabList\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\tbackgroundColor: '#121212',\n\t\t\t\t\t\tborder: 'none',\n\t\t\t\t\t\tdisplay: 'flex',\n\t\t\t\t\t\tjustifyContent: 'center',\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<Tab\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\tpadding: '5px 10px',\n\t\t\t\t\t\t\tborderRadius: 0,\n\t\t\t\t\t\t\twidth: '100%',\n\t\t\t\t\t\t\ttextAlign: 'center',\n\t\t\t\t\t\t\tcolor: 'rgb(255,255,255, 60%)',\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\tWeak against\n\t\t\t\t\t</Tab>\n\t\t\t\t\t<Tab\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\tpadding: '5px 10px',\n\t\t\t\t\t\t\tborderRadius: 0,\n\t\t\t\t\t\t\twidth: '100%',\n\t\t\t\t\t\t\ttextAlign: 'center',\n\t\t\t\t\t\t\tcolor: 'rgb(255,255,255, 60%)',\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\tStrong against\n\t\t\t\t\t</Tab>\n\t\t\t\t</TabList>\n\n\t\t\t\t{/* Weak against */}\n\t\t\t\t<TabPanel style={{ marginTop: '20px', padding: '0 15px' }}>\n\t\t\t\t\t{weakAgainst.map((champ, index) => {\n\t\t\t\t\t\tconst { id: championId, championName } = champ;\n\t\t\t\t\t\tconst allAlphabetChampionName = convertChampionNameToAlphabet(\n\t\t\t\t\t\t\tchampionName\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<CounterContent\n\t\t\t\t\t\t\t\tkey={index}\n\t\t\t\t\t\t\t\tchampionId={championId}\n\t\t\t\t\t\t\t\tallAlphabetChampionName={allAlphabetChampionName}\n\t\t\t\t\t\t\t\tchampionName={championName}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t);\n\t\t\t\t\t})}\n\t\t\t\t</TabPanel>\n\n\t\t\t\t{/* Strong against */}\n\t\t\t\t<TabPanel style={{ marginTop: '20px', padding: '0 15px' }}>\n\t\t\t\t\t{strongAgainst.map((champ, index) => {\n\t\t\t\t\t\tconst { id: championId, championName } = champ;\n\t\t\t\t\t\tconst allAlphabetChampionName = convertChampionNameToAlphabet(\n\t\t\t\t\t\t\tchampionName\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<CounterContent\n\t\t\t\t\t\t\t\tkey={index}\n\t\t\t\t\t\t\t\tchampionId={championId}\n\t\t\t\t\t\t\t\tallAlphabetChampionName={allAlphabetChampionName}\n\t\t\t\t\t\t\t\tchampionName={championName}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t);\n\t\t\t\t\t})}\n\t\t\t\t</TabPanel>\n\t\t\t</Tabs>\n\t\t</div>\n\t);\n};\n\nconst CounterContent = (props: {\n\tchampionId: string;\n\tallAlphabetChampionName: string;\n\tchampionName: string;\n}) => {\n\tconst { championId, allAlphabetChampionName, championName } = props;\n\n\treturn (\n\t\t<a\n\t\t\thref={`/builds/champion/${allAlphabetChampionName}`}\n\t\t\tclassName={styles.championCounterLink}\n\t\t\ttitle={championName}\n\t\t>\n\t\t\t<Box display='flex' className={styles.championCounterContainer}>\n\t\t\t\t<Box display='flex' flexGrow={1}>\n\t\t\t\t\t<Avatar\n\t\t\t\t\t\tvariant='square'\n\t\t\t\t\t\tsrc={`/images/wildriftchampions/${championId}.jpg`}\n\t\t\t\t\t\tclassName={styles.championCounterImage}\n\t\t\t\t\t/>\n\t\t\t\t\t<span className={styles.championCounterName}>{championName}</span>\n\t\t\t\t</Box>\n\t\t\t\t<span className={styles.goToBuildText}>\n\t\t\t\t\tBuilds\n\t\t\t\t\t<ArrowForwardIosIcon className={styles.goToBuildArrow} />\n\t\t\t\t</span>\n\t\t\t</Box>\n\t\t</a>\n\t);\n};\n\nexport default Counters;\n","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\FAQ\\FAQ.tsx",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\FAQ\\components\\AccordionFAQ.tsx",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Builds\\Champion\\components\\BuildsList\\components\\BuildBox\\components\\BuildItem\\BuildItem.tsx",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\utils\\globalvars.js",[],{"ruleId":"292","severity":1,"message":"293","line":8,"column":10,"nodeType":"294","messageId":"295","endLine":8,"endColumn":21},{"ruleId":"292","severity":1,"message":"296","line":27,"column":7,"nodeType":"294","messageId":"295","endLine":27,"endColumn":15},{"ruleId":"292","severity":1,"message":"297","line":31,"column":7,"nodeType":"294","messageId":"295","endLine":31,"endColumn":16},{"ruleId":"298","replacedBy":"299"},{"ruleId":"300","replacedBy":"301"},{"ruleId":"302","severity":1,"message":"303","line":40,"column":70,"nodeType":"304","messageId":"305","endLine":40,"endColumn":72},{"ruleId":"306","severity":1,"message":"307","line":58,"column":5,"nodeType":"308","endLine":58,"endColumn":17,"suggestions":"309"},{"ruleId":"306","severity":1,"message":"307","line":69,"column":5,"nodeType":"308","endLine":69,"endColumn":21,"suggestions":"310"},{"ruleId":"306","severity":1,"message":"311","line":178,"column":5,"nodeType":"308","endLine":178,"endColumn":7,"suggestions":"312"},{"ruleId":"292","severity":1,"message":"313","line":11,"column":2,"nodeType":"294","messageId":"295","endLine":11,"endColumn":19},{"ruleId":"292","severity":1,"message":"314","line":30,"column":8,"nodeType":"294","messageId":"295","endLine":30,"endColumn":14},{"ruleId":"292","severity":1,"message":"315","line":71,"column":10,"nodeType":"294","messageId":"295","endLine":71,"endColumn":24},{"ruleId":"292","severity":1,"message":"314","line":12,"column":8,"nodeType":"294","messageId":"295","endLine":12,"endColumn":14},{"ruleId":"292","severity":1,"message":"314","line":11,"column":8,"nodeType":"294","messageId":"295","endLine":11,"endColumn":14},{"ruleId":"292","severity":1,"message":"314","line":20,"column":8,"nodeType":"294","messageId":"295","endLine":20,"endColumn":14},{"ruleId":"292","severity":1,"message":"316","line":1,"column":17,"nodeType":"294","messageId":"295","endLine":1,"endColumn":25},{"ruleId":"292","severity":1,"message":"317","line":20,"column":8,"nodeType":"294","messageId":"295","endLine":20,"endColumn":19},{"ruleId":"306","severity":1,"message":"318","line":65,"column":5,"nodeType":"308","endLine":65,"endColumn":21,"suggestions":"319"},{"ruleId":"292","severity":1,"message":"314","line":16,"column":8,"nodeType":"294","messageId":"295","endLine":16,"endColumn":14},{"ruleId":"292","severity":1,"message":"314","line":13,"column":8,"nodeType":"294","messageId":"295","endLine":13,"endColumn":14},{"ruleId":"292","severity":1,"message":"314","line":13,"column":8,"nodeType":"294","messageId":"295","endLine":13,"endColumn":14},{"ruleId":"298","replacedBy":"299"},{"ruleId":"300","replacedBy":"301"},{"ruleId":"292","severity":1,"message":"314","line":13,"column":8,"nodeType":"294","messageId":"295","endLine":13,"endColumn":14},{"ruleId":"306","severity":1,"message":"320","line":60,"column":5,"nodeType":"308","endLine":60,"endColumn":7,"suggestions":"321"},{"ruleId":"292","severity":1,"message":"322","line":9,"column":8,"nodeType":"294","messageId":"295","endLine":9,"endColumn":14},{"ruleId":"292","severity":1,"message":"314","line":23,"column":8,"nodeType":"294","messageId":"295","endLine":23,"endColumn":14},{"ruleId":"306","severity":1,"message":"323","line":52,"column":5,"nodeType":"308","endLine":52,"endColumn":7,"suggestions":"324"},{"ruleId":"292","severity":1,"message":"322","line":6,"column":8,"nodeType":"294","messageId":"295","endLine":6,"endColumn":14},{"ruleId":"292","severity":1,"message":"325","line":9,"column":8,"nodeType":"294","messageId":"295","endLine":9,"endColumn":18},{"ruleId":"292","severity":1,"message":"326","line":20,"column":49,"nodeType":"294","messageId":"295","endLine":20,"endColumn":55},{"ruleId":"292","severity":1,"message":"327","line":38,"column":4,"nodeType":"294","messageId":"295","endLine":38,"endColumn":17},{"ruleId":"292","severity":1,"message":"328","line":37,"column":10,"nodeType":"294","messageId":"295","endLine":37,"endColumn":18},{"ruleId":"292","severity":1,"message":"329","line":24,"column":23,"nodeType":"294","messageId":"295","endLine":24,"endColumn":32},{"ruleId":"292","severity":1,"message":"330","line":24,"column":34,"nodeType":"294","messageId":"295","endLine":24,"endColumn":44},{"ruleId":"292","severity":1,"message":"331","line":27,"column":14,"nodeType":"294","messageId":"295","endLine":27,"endColumn":20},{"ruleId":"292","severity":1,"message":"332","line":27,"column":22,"nodeType":"294","messageId":"295","endLine":27,"endColumn":30},{"ruleId":"292","severity":1,"message":"333","line":28,"column":10,"nodeType":"294","messageId":"295","endLine":28,"endColumn":20},{"ruleId":"292","severity":1,"message":"334","line":28,"column":22,"nodeType":"294","messageId":"295","endLine":28,"endColumn":33},{"ruleId":"292","severity":1,"message":"335","line":28,"column":45,"nodeType":"294","messageId":"295","endLine":28,"endColumn":52},{"ruleId":"292","severity":1,"message":"336","line":28,"column":20,"nodeType":"294","messageId":"295","endLine":28,"endColumn":32},"@typescript-eslint/no-unused-vars","'PersistGate' is defined but never used.","Identifier","unusedVar","'pReducer' is assigned a value but never used.","'persistor' is assigned a value but never used.","no-native-reassign",["337"],"no-negated-in-lhs",["338"],"array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'champions'. Either include it or remove the dependency array.","ArrayExpression",["339"],["340"],"React Hook useEffect has missing dependencies: 'setChampions', 'setItems', 'setRanks', 'setRoles', 'setRunes', and 'setSpells'. Either include them or remove the dependency array.",["341"],"'successBuildSaved' is defined but never used.","'styles' is defined but never used.","'saveToDatabase' is assigned a value but never used.","'useState' is defined but never used.","'ItemPopover' is defined but never used.","React Hook useEffect has a missing dependency: 'setItemsConfirmed'. Either include it or remove the dependency array.",["342"],"React Hook useEffect has missing dependencies: 'championName' and 'isLoading'. Either include them or remove the dependency array. You can also do a functional update 'setIsLoading(i => ...)' if you only need 'isLoading' in the 'setIsLoading' call.",["343"],"'Avatar' is defined but never used.","React Hook useEffect has a missing dependency: 'match.params.buildId'. Either include it or remove the dependency array.",["344"],"'Typography' is defined but never used.","'spells' is assigned a value but never used.","'roleToDisplay' is assigned a value but never used.","'cooldown' is assigned a value but never used.","'buildRole' is assigned a value but never used.","'buildTitle' is assigned a value but never used.","'rankId' is assigned a value but never used.","'rankName' is assigned a value but never used.","'domination' is assigned a value but never used.","'inspiration' is assigned a value but never used.","'resolve' is assigned a value but never used.","'championName' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"345","fix":"346"},{"desc":"347","fix":"348"},{"desc":"349","fix":"350"},{"desc":"351","fix":"352"},{"desc":"353","fix":"354"},{"desc":"355","fix":"356"},"Update the dependencies array to be: [champions, roleFilter]",{"range":"357","text":"358"},"Update the dependencies array to be: [championSearch, champions]",{"range":"359","text":"360"},"Update the dependencies array to be: [setChampions, setItems, setRanks, setRoles, setRunes, setSpells]",{"range":"361","text":"362"},"Update the dependencies array to be: [itemsConfirmed, setItemsConfirmed]",{"range":"363","text":"364"},"Update the dependencies array to be: [championName, isLoading]",{"range":"365","text":"366"},"Update the dependencies array to be: [match.params.buildId]",{"range":"367","text":"368"},[1576,1588],"[champions, roleFilter]",[1888,1904],"[championSearch, champions]",[4402,4404],"[setChampions, setItems, setRanks, setRoles, setRunes, setSpells]",[1839,1855],"[itemsConfirmed, setItemsConfirmed]",[1705,1707],"[championName, isLoading]",[1624,1626],"[match.params.buildId]"]