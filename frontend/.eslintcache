[{"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\index.tsx":"1","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\reportWebVitals.ts":"2","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\components\\Layout.tsx":"3","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\components\\Header\\Header.tsx":"4","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\components\\Footer\\Footer.tsx":"5","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Landing\\Landing.tsx":"6","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\App\\App.tsx":"7","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Landing\\components\\FilterBy\\FilterBy.tsx":"8","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Landing\\components\\Champions\\Champions.tsx":"9","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\components\\Error\\404\\PageNotFound.tsx":"10","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\components\\Header\\components\\AppBar.tsx":"11","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\CreateBuild.tsx":"12","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\components\\Stepper\\Stepper.tsx":"13","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\components\\BuildInformation\\BuildInformation.tsx":"14","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\components\\BuildSelection\\BuildSelection.tsx":"15","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\components\\PlayerInformation\\PlayerInformation.tsx":"16","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\components\\CreateBuildHeader\\CreateBuildHeader.tsx":"17","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\components\\BuildSelection\\components\\ChampionSelect\\ChampionSelect.tsx":"18","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\components\\BuildSelection\\components\\ItemsSelect\\ItemsSelect.tsx":"19","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\components\\BuildSelection\\components\\ItemsSelected\\ItemsSelected.tsx":"20","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\components\\BuildSelection\\components\\RunesSelect\\RunesSelect.tsx":"21","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\components\\BuildSelection\\components\\RunesSelect\\components\\Keystone.tsx":"22","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\components\\BuildSelection\\components\\RunesSelect\\components\\Domination.tsx":"23","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\components\\BuildSelection\\components\\RunesSelect\\components\\Resolve.tsx":"24","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\components\\BuildSelection\\components\\RunesSelect\\components\\Inspiration.tsx":"25","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\components\\BuildSelection\\components\\SpellsSelect\\SpellsSelect.tsx":"26","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\components\\BuildSelection\\components\\SpellsSelect\\components\\Spell.tsx":"27","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\components\\Loading\\Backdrop.tsx":"28","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\store\\actions.js":"29","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\store\\reducers\\gameData.js":"30","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\store\\reducers\\build.js":"31","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Builds\\Champion\\ChampionBuilds.tsx":"32","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Builds\\Player\\PlayerBuild.tsx":"33","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Builds\\Player\\components\\PlayerBuildHeader\\PlayerBuildHeader.tsx":"34","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Builds\\Player\\components\\SectionDivider\\SectionDivider.tsx":"35","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Builds\\Player\\components\\RuneItem\\RuneItem.tsx":"36","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Builds\\Player\\components\\Spellitem\\SpellItem.tsx":"37","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Builds\\Player\\components\\PlayerBuildFooter\\PlayerBuildFooter.tsx":"38","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\components\\Popover\\ItemPopover.tsx":"39","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Builds\\Player\\components\\BuildItem\\BuildItem.tsx":"40","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\components\\Popover\\RunePopover.tsx":"41","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\components\\Popover\\SpellPopover.tsx":"42","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Builds\\Champion\\components\\ChampionData\\ChampionData.tsx":"43","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Builds\\Champion\\components\\BuildsList\\BuildsList.tsx":"44","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Builds\\Champion\\components\\BuildsList\\components\\NoBuilds\\NoBuilds.tsx":"45","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Builds\\Champion\\components\\BuildsList\\components\\BuildBox\\BuildBox.tsx":"46","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Builds\\Champion\\components\\BuildsList\\components\\BuildBox\\components\\BuildDate\\BuildDate.tsx":"47","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Builds\\Champion\\components\\BuildsList\\components\\BuildBox\\components\\BuildSpell\\BuildSpell.tsx":"48","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Builds\\Champion\\components\\BuildsList\\components\\BuildBox\\components\\BuildRune\\BuildRune.tsx":"49","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Builds\\Champion\\components\\BuildsList\\components\\BuildBox\\components\\BuildRankUser\\BuildRankUser.tsx":"50","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Builds\\Champion\\components\\BuildsList\\components\\BuildBox\\components\\BuildLearnMoreButton\\BuildLearnMoreButton.tsx":"51","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Builds\\Champion\\components\\ChampionData\\components\\Lanes\\Lanes.tsx":"52","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Builds\\Champion\\components\\ChampionData\\components\\Counters\\Counters.tsx":"53","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\FAQ\\FAQ.tsx":"54","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\FAQ\\components\\AccordionFAQ.tsx":"55","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Builds\\Champion\\components\\BuildsList\\components\\BuildBox\\components\\BuildItem\\BuildItem.tsx":"56","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\components\\BuildInformation\\components\\BuildTitle.tsx":"57","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\components\\BuildInformation\\components\\BuildRole\\BuildRole.tsx":"58","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\components\\Stepper\\components\\StepperButtons.tsx":"59","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\shared\\constants\\constants.js":"60","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\components\\ReCaptcha\\ReCaptcha.tsx":"61","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\shared\\utils\\validations.ts":"62","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\store\\reducers\\reCaptcha.js":"63","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\components\\Snackbars\\Snackbars.tsx":"64","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\shared\\utils\\messages.js":"65","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\store\\reducers\\snackbarControls.js":"66","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Builds\\Player\\components\\PlayerBuildHeader\\components\\BuildChip\\BuildChip.tsx":"67","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Builds\\Player\\components\\PlayerBuildFooter\\components\\CopyBuildLink\\CopyBuildLink.tsx":"68","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Builds\\Player\\components\\PlayerBuildFooter\\components\\ViewMoreBuilds\\ViewMoreBuilds.tsx":"69"},{"size":1519,"mtime":1616641472990,"results":"70","hashOfConfig":"71"},{"size":425,"mtime":499162500000,"results":"72","hashOfConfig":"71"},{"size":886,"mtime":1614769422065,"results":"73","hashOfConfig":"71"},{"size":278,"mtime":1613392509686,"results":"74","hashOfConfig":"71"},{"size":2064,"mtime":1616651440384,"results":"75","hashOfConfig":"71"},{"size":2579,"mtime":1616498609342,"results":"76","hashOfConfig":"71"},{"size":5829,"mtime":1616648253865,"results":"77","hashOfConfig":"71"},{"size":1634,"mtime":1615022644102,"results":"78","hashOfConfig":"71"},{"size":1443,"mtime":1616498599839,"results":"79","hashOfConfig":"71"},{"size":293,"mtime":1615025682646,"results":"80","hashOfConfig":"71"},{"size":2080,"mtime":1615173610580,"results":"81","hashOfConfig":"71"},{"size":6186,"mtime":1616651218884,"results":"82","hashOfConfig":"71"},{"size":1850,"mtime":1616650552865,"results":"83","hashOfConfig":"71"},{"size":726,"mtime":1615459532808,"results":"84","hashOfConfig":"71"},{"size":1214,"mtime":1615183690858,"results":"85","hashOfConfig":"71"},{"size":3563,"mtime":1616498577760,"results":"86","hashOfConfig":"71"},{"size":706,"mtime":1616496263989,"results":"87","hashOfConfig":"71"},{"size":2473,"mtime":1616498085723,"results":"88","hashOfConfig":"71"},{"size":6294,"mtime":1616594170453,"results":"89","hashOfConfig":"71"},{"size":5655,"mtime":1616648616522,"results":"90","hashOfConfig":"71"},{"size":4262,"mtime":1616498443898,"results":"91","hashOfConfig":"71"},{"size":2393,"mtime":1616593394117,"results":"92","hashOfConfig":"71"},{"size":2404,"mtime":1616593388014,"results":"93","hashOfConfig":"71"},{"size":2359,"mtime":1616593396649,"results":"94","hashOfConfig":"71"},{"size":2431,"mtime":1616593391127,"results":"95","hashOfConfig":"71"},{"size":2397,"mtime":1616498540114,"results":"96","hashOfConfig":"71"},{"size":1898,"mtime":1616498514227,"results":"97","hashOfConfig":"71"},{"size":614,"mtime":1613638537382,"results":"98","hashOfConfig":"71"},{"size":1583,"mtime":1616641436443,"results":"99","hashOfConfig":"71"},{"size":970,"mtime":1614942900771,"results":"100","hashOfConfig":"71"},{"size":5469,"mtime":1616595918296,"results":"101","hashOfConfig":"71"},{"size":3579,"mtime":1616497787633,"results":"102","hashOfConfig":"71"},{"size":3803,"mtime":1616730369051,"results":"103","hashOfConfig":"71"},{"size":2784,"mtime":1616723749893,"results":"104","hashOfConfig":"71"},{"size":477,"mtime":1614783336555,"results":"105","hashOfConfig":"71"},{"size":1951,"mtime":1616497998888,"results":"106","hashOfConfig":"71"},{"size":1763,"mtime":1616498009398,"results":"107","hashOfConfig":"71"},{"size":798,"mtime":1616730348984,"results":"108","hashOfConfig":"71"},{"size":2635,"mtime":1616728126154,"results":"109","hashOfConfig":"71"},{"size":2142,"mtime":1616590511281,"results":"110","hashOfConfig":"71"},{"size":2248,"mtime":1616728132195,"results":"111","hashOfConfig":"71"},{"size":2271,"mtime":1616728135379,"results":"112","hashOfConfig":"71"},{"size":2002,"mtime":1616497946123,"results":"113","hashOfConfig":"71"},{"size":788,"mtime":1616497808863,"results":"114","hashOfConfig":"71"},{"size":700,"mtime":1615470910103,"results":"115","hashOfConfig":"71"},{"size":3021,"mtime":1616497822948,"results":"116","hashOfConfig":"71"},{"size":690,"mtime":1615467438254,"results":"117","hashOfConfig":"71"},{"size":1189,"mtime":1616497865099,"results":"118","hashOfConfig":"71"},{"size":1172,"mtime":1616497914195,"results":"119","hashOfConfig":"71"},{"size":907,"mtime":1616497851744,"results":"120","hashOfConfig":"71"},{"size":925,"mtime":1616727724133,"results":"121","hashOfConfig":"71"},{"size":1639,"mtime":1616080606865,"results":"122","hashOfConfig":"71"},{"size":3811,"mtime":1614942480926,"results":"123","hashOfConfig":"71"},{"size":1383,"mtime":1616729553389,"results":"124","hashOfConfig":"71"},{"size":5736,"mtime":1616729636882,"results":"125","hashOfConfig":"71"},{"size":1176,"mtime":1616497838583,"results":"126","hashOfConfig":"71"},{"size":1942,"mtime":1616498061193,"results":"127","hashOfConfig":"71"},{"size":3479,"mtime":1616596462162,"results":"128","hashOfConfig":"71"},{"size":1269,"mtime":1616506548814,"results":"129","hashOfConfig":"71"},{"size":694,"mtime":1616729480178,"results":"130","hashOfConfig":"71"},{"size":1510,"mtime":1616642149873,"results":"131","hashOfConfig":"71"},{"size":461,"mtime":1616562704124,"results":"132","hashOfConfig":"71"},{"size":520,"mtime":1616638649010,"results":"133","hashOfConfig":"71"},{"size":2161,"mtime":1616650856676,"results":"134","hashOfConfig":"71"},{"size":588,"mtime":1616651209237,"results":"135","hashOfConfig":"71"},{"size":355,"mtime":1616641457362,"results":"136","hashOfConfig":"71"},{"size":525,"mtime":1616722945605,"results":"137","hashOfConfig":"71"},{"size":1396,"mtime":1616728970508,"results":"138","hashOfConfig":"71"},{"size":1103,"mtime":1616734836971,"results":"139","hashOfConfig":"71"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"143"},"q16prs",{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"143"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"143"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"143"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"143"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"143"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"143"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"143"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"143"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"143"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"143"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"143"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"143"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"143"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"143"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"143"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"143"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"143"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"143"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"143"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193","usedDeprecatedRules":"143"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"143"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"143"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"143"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"143"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204","usedDeprecatedRules":"143"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"207","usedDeprecatedRules":"143"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"143"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"219","usedDeprecatedRules":"143"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"222","messages":"223","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"224","usedDeprecatedRules":"143"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"143"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"143"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"143"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"143"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"239","messages":"240","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"143"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"245","usedDeprecatedRules":"143"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"143"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"250","usedDeprecatedRules":"143"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"143"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"143"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"143"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"143"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"261","messages":"262","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"143"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"265","usedDeprecatedRules":"143"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"268","messages":"269","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"270","messages":"271","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"143"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"143"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"143"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"143"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"280","messages":"281","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"282","usedDeprecatedRules":"143"},{"filePath":"283","messages":"284","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"143"},{"filePath":"285","messages":"286","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"287","messages":"288","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"289","usedDeprecatedRules":"143"},{"filePath":"290","messages":"291","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"292","usedDeprecatedRules":"212"},{"filePath":"293","messages":"294","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"295","messages":"296","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"297","usedDeprecatedRules":"143"},{"filePath":"298","messages":"299","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"300","messages":"301","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\index.tsx",["302","303","304"],"import React from 'react';\nimport ReactDOM from 'react-dom';\n\n// Redux\nimport { createStore, combineReducers } from 'redux';\nimport { Provider } from 'react-redux';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport storage from 'redux-persist/lib/storage';\nimport buildReducer from './store/reducers/build';\nimport gameDataReducer from './store/reducers/gameData';\nimport recaptchaReducer from './store/reducers/reCaptcha';\nimport snackbarControlsReducer from './store/reducers/snackbarControls';\n\nimport './index.css';\nimport App from './App/App';\nimport reportWebVitals from './reportWebVitals';\n\nconst persistConfig = {\n\tkey: 'root',\n\tstorage: storage,\n};\n\nconst rootReducer = combineReducers({\n\tbuild: buildReducer,\n\tgameData: gameDataReducer,\n\trecaptcha: recaptchaReducer,\n\tsnackbarControls: snackbarControlsReducer,\n});\n\nconst pReducer = persistReducer(persistConfig, rootReducer);\n\nconst store = createStore(rootReducer);\n\nconst persistor = persistStore(store);\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<Provider store={store}>\n\t\t\t{/* <PersistGate loading={null} persistor={persistor}> */}\n\t\t\t<App />\n\t\t\t{/* </PersistGate> */}\n\t\t</Provider>\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["305","306"],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\reportWebVitals.ts",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\components\\Layout.tsx",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\components\\Header\\Header.tsx",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\components\\Footer\\Footer.tsx",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Landing\\Landing.tsx",["307","308","309"],"import React, { useState, useEffect } from 'react';\n\n// Redux\nimport { connect, ConnectedProps } from 'react-redux';\n\n// MaterialUI\nimport Box from '@material-ui/core/Box';\n// Components\nimport FilterBy from './components/FilterBy/FilterBy';\nimport Champions from './components/Champions/Champions';\n// CSS\nimport styles from './landing.module.css';\n// Types\nimport {\n\tChampionInterface,\n\tRootState,\n} from '../../shared/constants/interfaces';\n\nconst Landing = (props: LandingProps) => {\n\t// Game Data PROPS\n\tconst { champions } = props;\n\n\tconst [championSearch, setChampionSearch] = useState('');\n\tconst [filteredChampions, setFilteredChampions] = useState<\n\t\tArray<ChampionInterface>\n\t>([]);\n\tconst [roleFilter, setRoleFilter] = useState('all');\n\n\t// HANDLER for \"Search for a champion\" input\n\tconst handleChampionSearchChange = (\n\t\te: React.ChangeEvent<HTMLInputElement> // ChangeEvent more suitable for typing form events.\n\t) => {\n\t\tconst { value } = e.target;\n\t\tsetChampionSearch(value);\n\t};\n\n\tuseEffect(() => {\n\t\tsetFilteredChampions(champions);\n\t}, [champions]);\n\n\t// Change state based on \"All, Top, Jungle, Middle, Bottom, Support\"\n\tuseEffect(() => {\n\t\tconst filterRoles = champions.filter((champion: ChampionInterface) => {\n\t\t\tconst { lane } = champion;\n\n\t\t\t// Check if champion has \"lane\" property\n\t\t\tif (lane) {\n\t\t\t\tif (roleFilter === 'all') {\n\t\t\t\t\treturn champion;\n\t\t\t\t} else {\n\t\t\t\t\tfor (let i = 0; i < lane.length; i++) {\n\t\t\t\t\t\tif (lane[i].toLocaleLowerCase() === roleFilter) {\n\t\t\t\t\t\t\treturn champion;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tsetFilteredChampions(filterRoles);\n\t}, [roleFilter]);\n\n\t// Change state based on \"Search for a champion\"\n\tuseEffect(() => {\n\t\tconst filterChampions = champions.filter((champion: ChampionInterface) =>\n\t\t\tchampion.championName\n\t\t\t\t.toLocaleLowerCase()\n\t\t\t\t.includes(championSearch.toLocaleLowerCase())\n\t\t);\n\n\t\tsetFilteredChampions(filterChampions);\n\t}, [championSearch]);\n\n\treturn (\n\t\t<>\n\t\t\t<Box className={styles.landingContainer}>\n\t\t\t\t<FilterBy\n\t\t\t\t\tchampionSearch={championSearch}\n\t\t\t\t\thandleChampionSearchChange={handleChampionSearchChange}\n\t\t\t\t\tsetRoleFilter={setRoleFilter}\n\t\t\t\t/>\n\n\t\t\t\t{champions.length !== 0 ? (\n\t\t\t\t\t<Champions filteredChampions={filteredChampions} />\n\t\t\t\t) : (\n\t\t\t\t\t<p>Loading champions...</p>\n\t\t\t\t)}\n\t\t\t</Box>\n\t\t</>\n\t);\n};\n\nconst mapStateToProps = (state: RootState) => {\n\treturn {\n\t\tchampions: state.gameData.champions,\n\t};\n};\n\nconst connector = connect(mapStateToProps);\n\ntype PropsFromRedux = ConnectedProps<typeof connector>;\n\ntype LandingProps = PropsFromRedux;\n\nexport default connector(Landing);\n","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\App\\App.tsx",["310"],"import React, { useEffect } from 'react';\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\nimport { createMuiTheme } from '@material-ui/core/styles';\r\nimport { ThemeProvider } from '@material-ui/styles';\r\nimport { URL } from '../shared/constants/constants';\r\nimport axios from 'axios';\r\n\r\n// Redux\r\nimport { connect } from 'react-redux';\r\nimport actionTypes from '../store/actions';\r\n\r\n// MaterialUI\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\n// Components\r\nimport CreateBuild from '../pages/Create/Build/CreateBuild';\r\nimport FAQ from '../pages/FAQ/FAQ';\r\nimport Layout from '../components/Layout';\r\nimport Landing from '../pages/Landing/Landing';\r\nimport PageNotFound from '../components/Error/404/PageNotFound';\r\nimport ChampionBuilds from '../pages/Builds/Champion/ChampionBuilds';\r\nimport PlayerBuild from '../pages/Builds/Player/PlayerBuild';\r\n// Types\r\nimport {\r\n\tChampionInterface,\r\n\tItemInterface,\r\n\tRankInterface,\r\n\tRoleInterface,\r\n\tRuneInterface,\r\n\tSpellInterface,\r\n} from '../shared/constants/interfaces';\r\n// CSS\r\nimport styles from './app.module.css';\r\nconst theme = createMuiTheme({\r\n\ttypography: {\r\n\t\tfontFamily: ['Helvetica Neue', 'Helvetica', 'Arial', 'Tahoma'].join(','),\r\n\t},\r\n\tpalette: {\r\n\t\tprimary: {\r\n\t\t\tlight: '#FAFAFA',\r\n\t\t\tmain: '#00A3FE',\r\n\t\t\tdark: '#326CAC',\r\n\t\t},\r\n\t\tsecondary: {\r\n\t\t\tlight: '#292E38',\r\n\t\t\tmain: '#326CAC',\r\n\t\t\tdark: '#171717',\r\n\t\t},\r\n\t},\r\n});\r\ntype AppProps = {\r\n\tsetChampions: (newChampions: Array<ChampionInterface>) => void;\r\n\tsetItems: (newItems: Array<ItemInterface>) => void;\r\n\tsetRanks: (newRanks: Array<RankInterface>) => void;\r\n\tsetRoles: (newRoles: Array<RoleInterface>) => void;\r\n\tsetRunes: (newRunes: Array<RuneInterface>) => void;\r\n\tsetSpells: (newSpells: Array<SpellInterface>) => void;\r\n};\r\n\r\nconst App = (props: AppProps) => {\r\n\tconst {\r\n\t\tsetChampions,\r\n\t\tsetItems,\r\n\t\tsetRanks,\r\n\t\tsetRunes,\r\n\t\tsetRoles,\r\n\t\tsetSpells,\r\n\t} = props;\r\n\r\n\t// Get DATA\r\n\tuseEffect(() => {\r\n\t\tconst getChampions = axios.get(`${URL.SERVER}/api/champion/all`);\r\n\t\tconst getItems = axios.get(`${URL.SERVER}/api/item/all`);\r\n\t\tconst getRunes = axios.get(`${URL.SERVER}/api/rune/all`);\r\n\t\tconst getSpells = axios.get(`${URL.SERVER}/api/spell/all`);\r\n\t\tconst getRanks = axios.get(`${URL.SERVER}/api/rank/all`);\r\n\t\tconst getRoles = axios.get(`${URL.SERVER}/api/role/all`);\r\n\r\n\t\tPromise.all([\r\n\t\t\tgetChampions,\r\n\t\t\tgetItems,\r\n\t\t\tgetRunes,\r\n\t\t\tgetSpells,\r\n\t\t\tgetRanks,\r\n\t\t\tgetRoles,\r\n\t\t])\r\n\t\t\t.then((values) => {\r\n\t\t\t\tconst [\r\n\t\t\t\t\t{ data: championsArray },\r\n\t\t\t\t\t{ data: itemsArray },\r\n\t\t\t\t\t{ data: runesArray },\r\n\t\t\t\t\t{ data: spellsArray },\r\n\t\t\t\t\t{ data: ranksArray },\r\n\t\t\t\t\t{ data: rolesArray },\r\n\t\t\t\t] = values;\r\n\r\n\t\t\t\t// const sortArray = (arrName, interface) => {\r\n\r\n\t\t\t\t// \tswitch(arrName){\r\n\t\t\t\t// \t\tcase 'championsArray':\r\n\t\t\t\t// \t\t\treturn\r\n\t\t\t\t// \t}\r\n\r\n\t\t\t\t// \treturn\r\n\t\t\t\t// }\r\n\r\n\t\t\t\t// Sort Champions Alphabetically\r\n\t\t\t\tchampionsArray.sort(function (\r\n\t\t\t\t\ta: ChampionInterface,\r\n\t\t\t\t\tb: ChampionInterface\r\n\t\t\t\t) {\r\n\t\t\t\t\tif (a.championName < b.championName) {\r\n\t\t\t\t\t\treturn -1;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (a.championName > b.championName) {\r\n\t\t\t\t\t\treturn 1;\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn 0;\r\n\t\t\t\t});\r\n\r\n\t\t\t\t// Sort Items Alphabetically\r\n\t\t\t\titemsArray.sort(function (a: ItemInterface, b: ItemInterface) {\r\n\t\t\t\t\tif (a.itemName < b.itemName) {\r\n\t\t\t\t\t\treturn -1;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (a.itemName > b.itemName) {\r\n\t\t\t\t\t\treturn 1;\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn 0;\r\n\t\t\t\t});\r\n\r\n\t\t\t\t// Sort Runes\r\n\t\t\t\trunesArray.sort(function (a: RuneInterface, b: RuneInterface) {\r\n\t\t\t\t\tif (a.runeName < b.runeName) {\r\n\t\t\t\t\t\treturn -1;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (a.runeName > b.runeName) {\r\n\t\t\t\t\t\treturn 1;\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn 0;\r\n\t\t\t\t});\r\n\r\n\t\t\t\t// Sort Spells\r\n\t\t\t\tspellsArray.sort(function (a: SpellInterface, b: SpellInterface) {\r\n\t\t\t\t\tif (a.spellName < b.spellName) {\r\n\t\t\t\t\t\treturn -1;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (a.spellName > b.spellName) {\r\n\t\t\t\t\t\treturn 1;\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn 0;\r\n\t\t\t\t});\r\n\r\n\t\t\t\tsetItems(itemsArray);\r\n\t\t\t\tsetChampions(championsArray);\r\n\t\t\t\tsetRanks(ranksArray);\r\n\t\t\t\tsetRunes(runesArray);\r\n\t\t\t\tsetSpells(spellsArray);\r\n\t\t\t\tsetRoles(rolesArray);\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tconsole.error('Something went wrong');\r\n\t\t\t\tconsole.error(err);\r\n\t\t\t});\r\n\t}, []);\r\n\r\n\treturn (\r\n\t\t<ThemeProvider theme={theme}>\r\n\t\t\t<div className={`App ${styles.appContainer}`}>\r\n\t\t\t\t<CssBaseline />\r\n\t\t\t\t<Layout>\r\n\t\t\t\t\t<Router>\r\n\t\t\t\t\t\t<Switch>\r\n\t\t\t\t\t\t\t<Route exact path='/'>\r\n\t\t\t\t\t\t\t\t<Landing />\r\n\t\t\t\t\t\t\t</Route>\r\n\t\t\t\t\t\t\t<Route exact path='/build/create'>\r\n\t\t\t\t\t\t\t\t<CreateBuild />\r\n\t\t\t\t\t\t\t</Route>\r\n\t\t\t\t\t\t\t<Route exact path='/builds/champion/:championName'>\r\n\t\t\t\t\t\t\t\t<ChampionBuilds />\r\n\t\t\t\t\t\t\t</Route>\r\n\t\t\t\t\t\t\t<Route exact path='/build/:buildId'>\r\n\t\t\t\t\t\t\t\t<PlayerBuild />\r\n\t\t\t\t\t\t\t</Route>\r\n\t\t\t\t\t\t\t<Route exact path='/faq'>\r\n\t\t\t\t\t\t\t\t<FAQ />\r\n\t\t\t\t\t\t\t</Route>\r\n\r\n\t\t\t\t\t\t\t{/* 404 - Page not found */}\r\n\t\t\t\t\t\t\t<Route component={PageNotFound} />\r\n\t\t\t\t\t\t</Switch>\r\n\t\t\t\t\t</Router>\r\n\t\t\t\t</Layout>\r\n\t\t\t</div>\r\n\t\t</ThemeProvider>\r\n\t);\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: any) => {\r\n\treturn {\r\n\t\t// === SETTER Champions === //\r\n\t\tsetChampions: (champions: Array<ChampionInterface>) =>\r\n\t\t\tdispatch({ type: actionTypes.GAMEDATA_SET_CHAMPIONS, data: champions }),\r\n\t\tsetItems: (items: Array<ItemInterface>) =>\r\n\t\t\tdispatch({ type: actionTypes.GAMEDATA_SET_ITEMS, data: items }),\r\n\t\tsetRanks: (ranks: Array<RankInterface>) =>\r\n\t\t\tdispatch({ type: actionTypes.GAMEDATA_SET_RANKS, data: ranks }),\r\n\t\tsetRoles: (roles: Array<RoleInterface>) =>\r\n\t\t\tdispatch({ type: actionTypes.GAMEDATA_SET_ROLES, data: roles }),\r\n\t\tsetRunes: (runes: Array<RuneInterface>) =>\r\n\t\t\tdispatch({ type: actionTypes.GAMEDATA_SET_RUNES, data: runes }),\r\n\t\tsetSpells: (spells: Array<SpellInterface>) =>\r\n\t\t\tdispatch({ type: actionTypes.GAMEDATA_SET_SPELLS, data: spells }),\r\n\t};\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(App);\r\n","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Landing\\components\\FilterBy\\FilterBy.tsx",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Landing\\components\\Champions\\Champions.tsx",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\components\\Error\\404\\PageNotFound.tsx",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\components\\Header\\components\\AppBar.tsx",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\CreateBuild.tsx",["311","312","313","314"],"import React, { useState } from 'react';\nimport axios from 'axios';\nimport { Redirect } from 'react-router-dom';\n// @ts-ignore - No types for this module\nimport { Helmet } from 'react-helmet';\n\nimport { URL } from '../../../shared/constants/constants';\nimport { Error, Success } from '../../../shared/utils/messages';\nimport { VALIDATE } from '../../../shared/utils/validations';\n\n// Redux\nimport { connect, ConnectedProps } from 'react-redux';\nimport actionTypes from '../../../store/actions';\n\n// MaterialUI\nimport { makeStyles } from '@material-ui/core/styles';\nimport Box from '@material-ui/core/Box';\n// Components\nimport Stepper from './components/Stepper/Stepper';\nimport Snackbars from '../../../components/Snackbars/Snackbars';\nimport BackdropLoading from '../../../components/Loading/Backdrop';\nimport BuildInformation from './components/BuildInformation/BuildInformation';\nimport BuildSelection from './components/BuildSelection/BuildSelection';\nimport CreateBuildHeader from './components/CreateBuildHeader/CreateBuildHeader';\nimport PlayerInformation from './components/PlayerInformation/PlayerInformation';\n// CSS\nimport styles from './createbuild.module.css';\n// Types\nimport {\n\tRootState,\n\tsnackbarControlsInterface,\n\tItemInterface,\n} from '../../../shared/constants/interfaces';\n\nconst useStyles = makeStyles((theme) => ({\n\tformControl: {\n\t\tmargin: theme.spacing(1),\n\t\tminWidth: 120,\n\t},\n}));\n\nconst CreateBuild = (props: CreateBuildProps) => {\n\tconst classes = useStyles();\n\t// Build PROPS\n\tconst { completeBuild, refreshState } = props;\n\t// ReCaptcha PROPS\n\tconst { recaptcha } = props;\n\tconst { recaptchaRef, recaptchaToken } = recaptcha;\n\tconst { resetRecaptchToken } = props;\n\t// Snackbar Controls Props\n\tconst { setSnackbarControls } = props;\n\n\t// Stores build data from database after successful creation\n\tconst [savedBuild, setSavedBuild] = useState({\n\t\tid: '',\n\t});\n\tconst [activeStep, setActiveStep] = useState(0);\n\tconst [openBackdrop, setOpenBackdrop] = useState<boolean>(false);\n\tconst [hasSubmittedBuild, setHasSubmittedBuild] = useState(false);\n\n\tconst [openRecaptcha, setOpenRecaptcha] = useState(false);\n\n\tconst resetCaptcha = () => {\n\t\t// Object is possibly null so it needs to be validated\n\t\tif (recaptchaRef.current) {\n\t\t\trecaptchaRef.current.reset();\n\t\t\tresetRecaptchToken('');\n\t\t}\n\t};\n\n\tlet componentToDisplay;\n\tif (activeStep === 0) {\n\t\tcomponentToDisplay = <BuildInformation />;\n\t} else if (activeStep === 1) {\n\t\tcomponentToDisplay = <BuildSelection formControl={classes.formControl} />;\n\t} else if (activeStep === 2) {\n\t\tcomponentToDisplay = (\n\t\t\t<PlayerInformation formControl={classes.formControl} />\n\t\t);\n\t}\n\n\tconst submitBuild = async () => {\n\t\t// Validations\n\t\tconst HAS_ITEMS_SELECTED = VALIDATE.HAS_ITEMS_SELECTED(completeBuild);\n\t\tconst HAS_SIX_PRIMARY_ITEMS = VALIDATE.HAS_SIX_PRIMARY_ITEMS(completeBuild);\n\t\tconst HAS_USERNAME = VALIDATE.HAS_USERNAME(completeBuild);\n\t\tconst HAS_BUILD_TITLE = VALIDATE.HAS_BUILD_TITLE(completeBuild);\n\n\t\tif (\n\t\t\tHAS_BUILD_TITLE &&\n\t\t\tHAS_ITEMS_SELECTED &&\n\t\t\tHAS_SIX_PRIMARY_ITEMS &&\n\t\t\tHAS_USERNAME\n\t\t) {\n\t\t\tsetOpenRecaptcha(true);\n\n\t\t\tif (!recaptchaToken) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tsetOpenBackdrop(true);\n\t\t\tconst saveToDatabase = await axios\n\t\t\t\t.post(`${URL.SERVER}/api/build/save`, {\n\t\t\t\t\tbuild: {\n\t\t\t\t\t\t...completeBuild,\n\t\t\t\t\t\tdateSubmitted: new Date(),\n\t\t\t\t\t},\n\t\t\t\t\trecaptchaToken,\n\t\t\t\t})\n\t\t\t\t.then((res) => {\n\t\t\t\t\tsetSavedBuild(res.data);\n\t\t\t\t\tsetHasSubmittedBuild(true);\n\t\t\t\t\trefreshState();\n\t\t\t\t})\n\t\t\t\t.catch((err) => {\n\t\t\t\t\tif (\n\t\t\t\t\t\terr.response.status === 429 &&\n\t\t\t\t\t\terr.response.data ===\n\t\t\t\t\t\t\t\"You're creating too many builds. Please try again after 30 minutes.\"\n\t\t\t\t\t) {\n\t\t\t\t\t\tsetSnackbarControls({\n\t\t\t\t\t\t\tsnackbarControls: {\n\t\t\t\t\t\t\t\tmessage: err.response.data,\n\t\t\t\t\t\t\t\tshouldOpen: true,\n\t\t\t\t\t\t\t\tsnackbarType: 'error',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\tsetOpenBackdrop(false);\n\n\t\t\t\t\t\tsetSnackbarControls({\n\t\t\t\t\t\t\tsnackbarControls: {\n\t\t\t\t\t\t\t\tmessage: Error.BUILD_NOT_SAVED,\n\t\t\t\t\t\t\t\tshouldOpen: true,\n\t\t\t\t\t\t\t\tsnackbarType: 'error',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t} else {\n\t\t\tif (!HAS_BUILD_TITLE) {\n\t\t\t\tsetSnackbarControls({\n\t\t\t\t\tsnackbarControls: {\n\t\t\t\t\t\tmessage: Error.NO_BUILD_TITLE,\n\t\t\t\t\t\tshouldOpen: true,\n\t\t\t\t\t\tsnackbarType: 'error',\n\t\t\t\t\t},\n\t\t\t\t});\n\t\t\t} else if (!HAS_ITEMS_SELECTED) {\n\t\t\t\tsetSnackbarControls({\n\t\t\t\t\tsnackbarControls: {\n\t\t\t\t\t\tmessage: Error.NO_ITEMS_SELECTED,\n\t\t\t\t\t\tshouldOpen: true,\n\t\t\t\t\t\tsnackbarType: 'error',\n\t\t\t\t\t},\n\t\t\t\t});\n\t\t\t} else if (!HAS_SIX_PRIMARY_ITEMS) {\n\t\t\t\tsetSnackbarControls({\n\t\t\t\t\tsnackbarControls: {\n\t\t\t\t\t\tmessage: Error.DOES_NOT_HAVE_SIX_PRIMARY_ITEMS,\n\t\t\t\t\t\tshouldOpen: true,\n\t\t\t\t\t\tsnackbarType: 'error',\n\t\t\t\t\t},\n\t\t\t\t});\n\t\t\t} else if (!HAS_USERNAME) {\n\t\t\t\tsetSnackbarControls({\n\t\t\t\t\tsnackbarControls: {\n\t\t\t\t\t\tmessage: Error.NO_USERNAME,\n\t\t\t\t\t\tshouldOpen: true,\n\t\t\t\t\t\tsnackbarType: 'error',\n\t\t\t\t\t},\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tresetCaptcha();\n\n\t\t\treturn;\n\t\t}\n\t};\n\n\tif (hasSubmittedBuild) {\n\t\treturn <Redirect to={`/build/${savedBuild.id}`} />;\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<Helmet>\n\t\t\t\t<title>Create a build - Rift Builds</title>\n\t\t\t</Helmet>\n\t\t\t<Box>\n\t\t\t\t<BackdropLoading openBackdrop={openBackdrop} />\n\t\t\t\t<Snackbars />\n\t\t\t\t<CreateBuildHeader />\n\n\t\t\t\t<Stepper\n\t\t\t\t\tactiveStep={activeStep}\n\t\t\t\t\tcomponentToDisplay={componentToDisplay}\n\t\t\t\t\topenRecaptcha={openRecaptcha}\n\t\t\t\t\tresetCaptcha={resetCaptcha}\n\t\t\t\t\tsetActiveStep={setActiveStep}\n\t\t\t\t\tsubmitBuild={submitBuild}\n\t\t\t\t/>\n\t\t\t</Box>\n\t\t</>\n\t);\n};\n\nconst mapStateToProps = (state: RootState) => {\n\treturn {\n\t\tcompleteBuild: state.build,\n\t\trecaptcha: state.recaptcha,\n\t};\n};\n\nconst mapDispatchToProps = (dispatch: any) => {\n\treturn {\n\t\trefreshState: () => dispatch({ type: actionTypes.BUILD_REFRESH }),\n\t\tresetRecaptchToken: (token: string) =>\n\t\t\tdispatch({ type: actionTypes.RECAPTCHA_SET_TOKEN, data: token }),\n\t\tsetSnackbarControls: (newControls: snackbarControlsInterface) =>\n\t\t\tdispatch({\n\t\t\t\ttype: actionTypes.SNACKBAR_SET_CONTROLS,\n\t\t\t\tdata: newControls.snackbarControls,\n\t\t\t}),\n\t};\n};\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\n\ntype PropsFromRedux = ConnectedProps<typeof connector>;\n\ntype CreateBuildProps = PropsFromRedux;\n\nexport default connector(CreateBuild);\n","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\components\\Stepper\\Stepper.tsx",["315","316"],"import React, { useState, useEffect } from 'react';\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\n\n// MaterialUI\nimport Box from '@material-ui/core/Box';\n// Components\nimport ReCaptcha from '../ReCaptcha/ReCaptcha';\nimport StepperButtons from './components/StepperButtons';\n// Types\ntype StepperProps = {\n\tactiveStep: number;\n\tcomponentToDisplay: React.ReactNode;\n\topenRecaptcha: boolean;\n\tresetCaptcha: () => void;\n\tsetActiveStep: (step: any) => void;\n\tsubmitBuild: () => void;\n};\n// CSS\nconst useStyles = makeStyles((theme: Theme) =>\n\tcreateStyles({\n\t\troot: {\n\t\t\twidth: '100%',\n\t\t},\n\t})\n);\n\nfunction getSteps() {\n\treturn ['Build Information', 'Create Build', 'Player Information'];\n}\n\nconst HorizontalLabelPositionBelowStepper = (props: StepperProps) => {\n\tconst { activeStep, componentToDisplay, setActiveStep, submitBuild } = props;\n\tconst { openRecaptcha, resetCaptcha } = props;\n\tconst classes = useStyles();\n\n\t// ===== Stepper ===== //\n\tconst steps = getSteps();\n\n\tconst handleNext = () => {\n\t\tsetActiveStep((prevActiveStep: number) => prevActiveStep + 1);\n\t};\n\tconst handleBack = () => {\n\t\tsetActiveStep((prevActiveStep: number) => prevActiveStep - 1);\n\t};\n\n\treturn (\n\t\t<div className={classes.root}>\n\t\t\t{/* Build Components */}\n\t\t\t<Box style={{ padding: '10px 0' }}>{componentToDisplay}</Box>\n\n\t\t\t{/* ReCAPTCHA */}\n\t\t\t<Box display='flex' flexDirection='row-reverse'>\n\t\t\t\t{openRecaptcha && activeStep === steps.length - 1 ? (\n\t\t\t\t\t<ReCaptcha resetCaptcha={resetCaptcha} />\n\t\t\t\t) : null}\n\t\t\t</Box>\n\n\t\t\t{/* Buttons */}\n\t\t\t<Box display='flex' flexDirection='row-reverse'>\n\t\t\t\t<StepperButtons\n\t\t\t\t\tactiveStep={activeStep}\n\t\t\t\t\tsubmitBuild={submitBuild}\n\t\t\t\t\thandleNext={handleNext}\n\t\t\t\t\thandleBack={handleBack}\n\t\t\t\t\tsteps={steps}\n\t\t\t\t/>\n\t\t\t</Box>\n\t\t</div>\n\t);\n};\n\nexport default HorizontalLabelPositionBelowStepper;\n","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\components\\BuildInformation\\BuildInformation.tsx",["317"],"import React from 'react';\n\n// MaterialUI\nimport Grid from '@material-ui/core/Grid';\n// Components\nimport BuildRole from './components/BuildRole/BuildRole';\nimport BuildTitle from './components/BuildTitle';\n// CSS\nimport globalstyles from '../../createbuild.module.css';\nimport styles from './buildinformation.module.css';\n\nconst BuildInformation = () => {\n\treturn (\n\t\t<Grid container spacing={3} className={globalstyles.gridContainer}>\n\t\t\t<Grid item xs={12} sm={12}>\n\t\t\t\t<p className={globalstyles.buildStepHeader}>Tell us about your build</p>\n\t\t\t</Grid>\n\t\t\t<Grid item xs={12} sm={6}>\n\t\t\t\t<BuildTitle />\n\t\t\t</Grid>\n\t\t\t<Grid item xs={12} sm={6}>\n\t\t\t\t<BuildRole />\n\t\t\t</Grid>\n\t\t</Grid>\n\t);\n};\n\nexport default BuildInformation;\n","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\components\\BuildSelection\\BuildSelection.tsx",["318"],"import React from 'react';\n\n// MaterialUI\nimport Grid from '@material-ui/core/Grid';\n// Components\nimport ChampionSelect from './components/ChampionSelect/ChampionSelect';\nimport ItemsSelect from './components/ItemsSelect/ItemsSelect';\nimport RunesSelect from './components/RunesSelect/RunesSelect';\nimport SpellsSelect from './components/SpellsSelect/SpellsSelect';\n// CSS\nimport globalstyles from '../../createbuild.module.css';\nimport styles from './buildselection.module.css';\n// Types\ntype BuildSelectionProps = {\n\tformControl: string;\n};\n\nconst BuildSelection = (props: BuildSelectionProps) => {\n\tconst { formControl } = props;\n\n\treturn (\n\t\t<Grid container spacing={3} className={globalstyles.gridContainer}>\n\t\t\t<Grid item xs={12} sm={12}>\n\t\t\t\t<p className={globalstyles.buildStepHeader}>\n\t\t\t\t\tChoose your champion, items, runes, and spells\n\t\t\t\t</p>\n\t\t\t</Grid>\n\t\t\t<Grid item xs={12}>\n\t\t\t\t<ChampionSelect />\n\t\t\t</Grid>\n\t\t\t<Grid item xs={12}>\n\t\t\t\t<ItemsSelect formControl={formControl} />\n\t\t\t</Grid>\n\t\t\t<Grid item xs={12}>\n\t\t\t\t<RunesSelect formControl={formControl} />\n\t\t\t</Grid>\n\t\t\t<Grid item xs={12}>\n\t\t\t\t<SpellsSelect formControl={formControl} />\n\t\t\t</Grid>\n\t\t</Grid>\n\t);\n};\n\nexport default BuildSelection;\n","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\components\\PlayerInformation\\PlayerInformation.tsx",["319"],"import React from 'react';\n// @ts-ignore - No types for this module\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\n\n// Redux\nimport { connect, ConnectedProps } from 'react-redux';\nimport actionTypes from '../../../../../store/actions';\n\n// MaterialUI\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\n// Components\n// Types\nimport {\n\tRankInterface,\n\tRootState,\n} from '../../../../../shared/constants/interfaces';\n// CSS\nimport globalstyles from '../../createbuild.module.css';\nimport styles from './playerinformation.module.css';\n\nconst PlayerInformation = (props: PlayerInformationProps) => {\n\tconst { formControl } = props;\n\t// Game Data PROPS\n\tconst { ranks } = props;\n\t// Build PROPS\n\tconst { rankSelected, setRankSelected, username, setUsername } = props;\n\n\tconst maximumCharactersForUsername = 22;\n\n\t// =============== Username =============== //\n\tconst handleUsernameChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n\t\tconst { value } = e.target;\n\n\t\tsetUsername(value);\n\t};\n\n\t// =============== Rank =============== //\n\tconst handleRankSelectChange = (e: React.ChangeEvent<HTMLSelectElement>) => {\n\t\tconst getRank = ranks.find(\n\t\t\t(rank: RankInterface) => rank.id === e.target.value\n\t\t);\n\n\t\tif (!getRank) {\n\t\t\treturn;\n\t\t} else {\n\t\t\tsetRankSelected(getRank);\n\t\t}\n\t};\n\n\treturn (\n\t\t<Grid container spacing={3} style={{ color: '#EBEBEB' }}>\n\t\t\t<Grid item xs={12} sm={6}>\n\t\t\t\t<Box>\n\t\t\t\t\t<p className={globalstyles.inputLabel}>7. Username</p>\n\t\t\t\t\t<p className={globalstyles.inputDescription}>\n\t\t\t\t\t\tWhat is your in-game name (IGN)?\n\t\t\t\t\t</p>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\tvalue={username}\n\t\t\t\t\t\tplaceholder='Username'\n\t\t\t\t\t\tonChange={(e) => handleUsernameChange(e)}\n\t\t\t\t\t\tclassName={globalstyles.buildInput}\n\t\t\t\t\t\tmaxLength={maximumCharactersForUsername}\n\t\t\t\t\t/>\n\t\t\t\t\t<p\n\t\t\t\t\t\tclassName={globalstyles.inputDescription}\n\t\t\t\t\t\tstyle={{ fontStyle: 'italic' }}\n\t\t\t\t\t>\n\t\t\t\t\t\tPlease include your ID (i.e. ABC#DEFGH)\n\t\t\t\t\t</p>\n\t\t\t\t</Box>\n\t\t\t</Grid>\n\t\t\t<Grid item xs={12} sm={6}>\n\t\t\t\t<Box>\n\t\t\t\t\t<p className={globalstyles.inputLabel}>8. Rank</p>\n\t\t\t\t\t<p className={globalstyles.inputDescription}>\n\t\t\t\t\t\tWhat is your current rank?\n\t\t\t\t\t</p>\n\n\t\t\t\t\t<Box>\n\t\t\t\t\t\t<LazyLoadImage\n\t\t\t\t\t\t\tsrc={`/images/wildriftranks/${rankSelected.id}.png`}\n\t\t\t\t\t\t\tclassName={styles.rankImage}\n\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t<select\n\t\t\t\t\t\t\tvalue={rankSelected.id}\n\t\t\t\t\t\t\tonChange={handleRankSelectChange}\n\t\t\t\t\t\t\tclassName={globalstyles.buildSelectInput}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{ranks.map((rank: RankInterface, index) => {\n\t\t\t\t\t\t\t\tconst { id: rankId, rankName } = rank;\n\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<option\n\t\t\t\t\t\t\t\t\t\tkey={index}\n\t\t\t\t\t\t\t\t\t\tvalue={rankId}\n\t\t\t\t\t\t\t\t\t\tclassName={globalstyles.buildSelectOption}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t{rankName}\n\t\t\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t</select>\n\t\t\t\t\t</Box>\n\t\t\t\t</Box>\n\t\t\t</Grid>\n\t\t</Grid>\n\t);\n};\n\nconst mapStateToProps = (state: RootState) => {\n\treturn {\n\t\trankSelected: state.build.rank,\n\t\tranks: state.gameData.ranks,\n\t\tusername: state.build.username,\n\t};\n};\n\nconst mapDispatchToProps = (dispatch: any) => {\n\treturn {\n\t\tsetRankSelected: (newRank: RankInterface) =>\n\t\t\tdispatch({ type: actionTypes.BUILD_SET_RANKSELECTED, data: newRank }),\n\t\tsetUsername: (newUsername: string) =>\n\t\t\tdispatch({ type: actionTypes.BUILD_SET_USERNAME, data: newUsername }),\n\t};\n};\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\n\ntype PropsFromRedux = ConnectedProps<typeof connector>;\n\ntype PlayerInformationProps = PropsFromRedux & {\n\tformControl: string;\n};\n\nexport default connector(PlayerInformation);\n","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\components\\CreateBuildHeader\\CreateBuildHeader.tsx",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\components\\BuildSelection\\components\\ChampionSelect\\ChampionSelect.tsx",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\components\\BuildSelection\\components\\ItemsSelect\\ItemsSelect.tsx",["320","321","322","323","324"],"import React, { useState } from 'react';\n// @ts-ignore - No types for this module\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\n\n// Redux\nimport { connect, ConnectedProps } from 'react-redux';\nimport actionTypes from '../../../../../../../store/actions';\n\n// MaterialUI\nimport Box from '@material-ui/core/Box';\nimport Button from '@material-ui/core/Button';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport Grid from '@material-ui/core/Grid';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport NativeSelect from '@material-ui/core/NativeSelect';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\n// Components\nimport ItemsSelected from '../ItemsSelected/ItemsSelected';\n// CSS\nimport globalstyles from '../../../../createbuild.module.css';\nimport styles from './itemsselect.module.css';\n// Types\nimport {\n\tItemInterface,\n\tRootState,\n} from '../../../../../../../shared/constants/interfaces';\n\nconst ItemsSelect = (props: ItemsSelectProps) => {\n\tconst { formControl } = props;\n\t// Game Data PROPS\n\tconst { items } = props;\n\t// Build PROPS\n\tconst { itemsConfirmed, setItemsConfirmed } = props;\n\n\tconst [itemSelected, setItemSelected] = useState<ItemInterface>(\n\t\t// Defaults to Item: 'Abyssal Mask' which is the first option\n\t\t{\n\t\t\tid: 'a42bcabd-290c-47f2-ae68-258d412c6d8d',\n\t\t\titemName: 'Abyssal Mask',\n\t\t\turl:\n\t\t\t\t'https://lolwildriftbuild.com/wp-content/uploads/2020/10/abyssalmask_wild_rift.png',\n\t\t\tcategory: 'defense',\n\t\t\ttier: 'upgraded',\n\t\t\tstatistics: [\n\t\t\t\t'+300 Max Health',\n\t\t\t\t'+40 Magic Resistance',\n\t\t\t\t'+300 Max Mana',\n\t\t\t\t'+10 Ability Haste',\n\t\t\t],\n\t\t\tdescription: [\n\t\t\t\t'Eternity: Restore Mana equal to 15% of the damage taken from champions. Regen Health equal to 20% of Mana spent. Capped at 25 Health per cast.',\n\t\t\t\t'Abyssal: Nearby enemy champions take 15% bonus magic damage.',\n\t\t\t],\n\t\t\tprice: 2800,\n\t\t}\n\t);\n\tconst [itemType, setItemType] = useState('primary');\n\tconst [itemReason, setItemReason] = useState('');\n\n\tconst handleItemSelectChange = (e: React.ChangeEvent<HTMLSelectElement>) => {\n\t\tconst { value: itemId } = e.target;\n\n\t\tconst getItem = items.find((item: ItemInterface) => item.id === itemId);\n\n\t\tif (getItem) {\n\t\t\tsetItemSelected(getItem);\n\t\t}\n\t};\n\n\tconst handleItemTypeChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n\t\tsetItemType(e.target.value);\n\t};\n\n\tconst handleItemExplanationChange = (\n\t\te: React.ChangeEvent<HTMLTextAreaElement>\n\t) => {\n\t\tsetItemReason(e.target.value);\n\t};\n\n\tconst handleDeleteItemClick = (itemId: string) => {\n\t\tconst filteredItems = itemsConfirmed.filter(\n\t\t\t(item: ItemInterface) => item.id !== itemId\n\t\t);\n\n\t\tif (filteredItems) {\n\t\t\tsetItemsConfirmed(filteredItems);\n\t\t}\n\t};\n\n\tconst handleAddItemClick = () => {\n\t\t// Pushes item to itemsConfirmed Array\n\t\tsetItemsConfirmed([\n\t\t\t...itemsConfirmed,\n\t\t\t{ ...itemSelected, type: itemType, reason: itemReason },\n\t\t]);\n\t\tsetItemReason('');\n\t};\n\n\treturn (\n\t\t<Box>\n\t\t\t<p className={globalstyles.inputLabel}>4. Items</p>\n\t\t\t<p className={globalstyles.inputDescription}>\n\t\t\t\tSelect the items for your build\n\t\t\t</p>\n\n\t\t\t<Box>\n\t\t\t\t<Grid container spacing={3}>\n\t\t\t\t\t<Grid item xs={12} sm={6}>\n\t\t\t\t\t\t<Box>\n\t\t\t\t\t\t\t{/* ITEM IMAGE */}\n\t\t\t\t\t\t\t<LazyLoadImage\n\t\t\t\t\t\t\t\tsrc={`/images/wildriftitems/${itemSelected.id}.png`}\n\t\t\t\t\t\t\t\tclassName={styles.itemImage}\n\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t{/* <SELECT> */}\n\t\t\t\t\t\t\t<select\n\t\t\t\t\t\t\t\tonChange={handleItemSelectChange}\n\t\t\t\t\t\t\t\tclassName={globalstyles.buildSelectInput}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{items.map((item: ItemInterface, index: number) => {\n\t\t\t\t\t\t\t\t\tconst { id: itemId, itemName } = item;\n\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t<option\n\t\t\t\t\t\t\t\t\t\t\tkey={index}\n\t\t\t\t\t\t\t\t\t\t\tvalue={itemId}\n\t\t\t\t\t\t\t\t\t\t\tclassName={globalstyles.buildSelectOption}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t{itemName}\n\t\t\t\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t</select>\n\n\t\t\t\t\t\t\t{/* ITEM TYPE */}\n\t\t\t\t\t\t\t<Box>\n\t\t\t\t\t\t\t\t<RadioGroup\n\t\t\t\t\t\t\t\t\trow\n\t\t\t\t\t\t\t\t\tname='position'\n\t\t\t\t\t\t\t\t\tdefaultValue='primary'\n\t\t\t\t\t\t\t\t\tclassName={styles.radioGroup}\n\t\t\t\t\t\t\t\t\tonChange={handleItemTypeChange}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<FormControlLabel\n\t\t\t\t\t\t\t\t\t\tvalue='primary'\n\t\t\t\t\t\t\t\t\t\tcontrol={\n\t\t\t\t\t\t\t\t\t\t\t<Radio color='primary' className={styles.radioButton} />\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tlabel='Primary'\n\t\t\t\t\t\t\t\t\t\tlabelPlacement='end'\n\t\t\t\t\t\t\t\t\t\tclassName={styles.radioButtonContainer}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<FormControlLabel\n\t\t\t\t\t\t\t\t\t\tvalue='optional'\n\t\t\t\t\t\t\t\t\t\tcontrol={\n\t\t\t\t\t\t\t\t\t\t\t<Radio color='primary' className={styles.radioButton} />\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tlabel='Optional'\n\t\t\t\t\t\t\t\t\t\tlabelPlacement='end'\n\t\t\t\t\t\t\t\t\t\tclassName={styles.radioButtonContainer}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</RadioGroup>\n\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t</Box>\n\t\t\t\t\t</Grid>\n\n\t\t\t\t\t{/* Item Explanation */}\n\t\t\t\t\t<Grid item xs={12} sm={6}>\n\t\t\t\t\t\t<Box>\n\t\t\t\t\t\t\t<textarea\n\t\t\t\t\t\t\t\tid='itemReason'\n\t\t\t\t\t\t\t\tname='itemReason'\n\t\t\t\t\t\t\t\trows={5}\n\t\t\t\t\t\t\t\tvalue={itemReason}\n\t\t\t\t\t\t\t\tplaceholder='Explanation'\n\t\t\t\t\t\t\t\tclassName={styles.explanationTextArea}\n\t\t\t\t\t\t\t\tmaxLength={400}\n\t\t\t\t\t\t\t\tonChange={(e) => handleItemExplanationChange(e)}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<Box\n\t\t\t\t\t\t\t\tdisplay='flex'\n\t\t\t\t\t\t\t\tflexDirection='row-reverse'\n\t\t\t\t\t\t\t\tclassName={styles.addItemButtonContainer}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\tvariant='contained'\n\t\t\t\t\t\t\t\t\tstyle={{ backgroundColor: '#326cac' }}\n\t\t\t\t\t\t\t\t\tonClick={handleAddItemClick}\n\t\t\t\t\t\t\t\t\tclassName={styles.addItemButton}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tAdd Item\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t</Box>\n\t\t\t\t\t</Grid>\n\n\t\t\t\t\t{/* Items List */}\n\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t<ItemsSelected handleDeleteItemClick={handleDeleteItemClick} />\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\t\t\t</Box>\n\t\t</Box>\n\t);\n};\n\nconst mapStateToProps = (state: RootState) => {\n\treturn {\n\t\titemsConfirmed: state.build.itemsConfirmed,\n\t\titems: state.gameData.items,\n\t};\n};\n\nconst mapDispatchToProps = (dispatch: any) => {\n\treturn {\n\t\tsetItemsConfirmed: (items: Array<ItemInterface>) =>\n\t\t\tdispatch({ type: actionTypes.BUILD_SET_ITEMSCONFIRMED, data: items }),\n\t};\n};\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\n\ntype PropsFromRedux = ConnectedProps<typeof connector>;\n\ntype ItemsSelectProps = PropsFromRedux & {\n\tformControl: string;\n};\n\nexport default connector(ItemsSelect);\n","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\components\\BuildSelection\\components\\ItemsSelected\\ItemsSelected.tsx",["325","326","327"],"import React, { useState, useEffect } from 'react';\n// @ts-ignore - No types for this module\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\n\nimport { Error } from '../../../../../../../shared/utils/messages';\n\n// Redux\nimport { connect, ConnectedProps } from 'react-redux';\nimport actionTypes from '../../../../../../../store/actions';\n\n// MaterialUI\nimport { Theme, makeStyles } from '@material-ui/core/styles';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport Grow from '@material-ui/core/Grow';\nimport InfoIcon from '@material-ui/icons/Info';\nimport Tooltip from '@material-ui/core/Tooltip';\n// Components\nimport ItemPopover from '../../../../../../../components/Popover/ItemPopover';\n// Types\nimport {\n\tItemInterface,\n\tsnackbarControlsInterface,\n\tRootState,\n} from '../../../../../../../shared/constants/interfaces';\n// CSS\n\nimport styles from './itemsselected.module.css';\nconst useStylesBootstrap = makeStyles((theme: Theme) => ({\n\ttooltip: {\n\t\tletterSpacing: '0.3px',\n\t},\n}));\n\nconst ItemsSelected = (props: ItemsSelectedProps) => {\n\tconst { handleDeleteItemClick } = props;\n\t// Build PROPS\n\tconst { itemsConfirmed, setItemsConfirmed } = props;\n\t// Snackbar Control PROPS\n\tconst { setSnackbarControls } = props;\n\n\tconst classes = useStylesBootstrap();\n\n\t// Check for duplicate items selected\n\t// Check for primary items limit\n\tuseEffect(() => {\n\t\tconst primaryItems = itemsConfirmed.filter(\n\t\t\t(item) => item.type === 'primary'\n\t\t);\n\n\t\tvar itemArray = itemsConfirmed.map((item) => {\n\t\t\treturn item.id;\n\t\t});\n\t\tvar isDuplicate = itemArray.some((item, index) => {\n\t\t\treturn itemArray.indexOf(item) !== index;\n\t\t});\n\n\t\t// Remove duplicates from itemsConfirmed Array\n\t\tconst filteredItemsConfirmed = itemsConfirmed.filter(\n\t\t\t(item, index, arr) => arr.findIndex((t) => t.id === item.id) === index\n\t\t);\n\n\t\tif (isDuplicate) {\n\t\t\tsetItemsConfirmed(filteredItemsConfirmed);\n\n\t\t\tsetSnackbarControls({\n\t\t\t\tsnackbarControls: {\n\t\t\t\t\tmessage: Error.HAS_DUPLICATE_ITEMS,\n\t\t\t\t\tshouldOpen: true,\n\t\t\t\t\tsnackbarType: 'error',\n\t\t\t\t},\n\t\t\t});\n\t\t} else if (primaryItems.length > 6) {\n\t\t\tsetSnackbarControls({\n\t\t\t\tsnackbarControls: {\n\t\t\t\t\tmessage: Error.CAN_ONLY_HAVE_SIX_PRIMARY_ITEMS,\n\t\t\t\t\tshouldOpen: true,\n\t\t\t\t\tsnackbarType: 'error',\n\t\t\t\t},\n\t\t\t});\n\n\t\t\tconst itemsConfirmedCopy = [...itemsConfirmed];\n\n\t\t\titemsConfirmedCopy.pop();\n\n\t\t\tsetItemsConfirmed(itemsConfirmedCopy);\n\t\t}\n\t}, [itemsConfirmed]);\n\n\treturn (\n\t\t<Box>\n\t\t\t<Box className={styles.itemsSelectedContainer}>\n\t\t\t\t{itemsConfirmed.length !== 0 ? (\n\t\t\t\t\t<>\n\t\t\t\t\t\t{/* TYPE: MAIN */}\n\t\t\t\t\t\t<Box display='flex'>\n\t\t\t\t\t\t\t<Box flexGrow={1}>\n\t\t\t\t\t\t\t\t<p className={styles.itemsSelectedHeader}>Primary Items</p>\n\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t<Box>\n\t\t\t\t\t\t\t\t<Tooltip\n\t\t\t\t\t\t\t\t\ttitle='Click on an item to delete it from your list'\n\t\t\t\t\t\t\t\t\tplacement='top'\n\t\t\t\t\t\t\t\t\tclasses={classes}\n\t\t\t\t\t\t\t\t\tarrow\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<InfoIcon className={styles.infoIcon} />\n\t\t\t\t\t\t\t\t</Tooltip>\n\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t</Box>\n\n\t\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t\t{itemsConfirmed\n\t\t\t\t\t\t\t\t.filter((item: ItemInterface) => item.type !== 'optional')\n\t\t\t\t\t\t\t\t.map((currentItem, index) => {\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t<Grow\n\t\t\t\t\t\t\t\t\t\t\tkey={index}\n\t\t\t\t\t\t\t\t\t\t\tin={true}\n\t\t\t\t\t\t\t\t\t\t\tstyle={{ transformOrigin: '0 0 0' }}\n\t\t\t\t\t\t\t\t\t\t\t{...(true ? { timeout: 200 } : {})}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t<Box className={styles.itemContainer}>\n\t\t\t\t\t\t\t\t\t\t\t\t<Box className={styles.itemImageContainer}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<LazyLoadImage\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttitle={currentItem.itemName}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={styles.itemImage}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsrc={`/images/wildriftitems/${currentItem.id}.png`}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() =>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleDeleteItemClick(currentItem.id)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t\t\t\t</Grow>\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t</Grid>\n\n\t\t\t\t\t\t{/* TYPE: OPTIONAL */}\n\t\t\t\t\t\t<p className={styles.itemsSelectedHeader}>Optional Items</p>\n\t\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t\t{itemsConfirmed\n\t\t\t\t\t\t\t\t.filter((item: ItemInterface) => item.type !== 'primary')\n\t\t\t\t\t\t\t\t.map((currentItem: ItemInterface, index) => {\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t<Grow\n\t\t\t\t\t\t\t\t\t\t\tkey={index}\n\t\t\t\t\t\t\t\t\t\t\tin={true}\n\t\t\t\t\t\t\t\t\t\t\tstyle={{ transformOrigin: '0 0 0' }}\n\t\t\t\t\t\t\t\t\t\t\t{...(true ? { timeout: 200 } : {})}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t<Box className={styles.itemContainer}>\n\t\t\t\t\t\t\t\t\t\t\t\t<Box className={styles.itemImageContainer}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<LazyLoadImage\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttitle={currentItem.itemName}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={styles.itemImage}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsrc={`/images/wildriftitems/${currentItem.id}.png`}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() =>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleDeleteItemClick(currentItem.id)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t\t\t\t</Grow>\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</>\n\t\t\t\t) : (\n\t\t\t\t\t<p>You haven't added any items to your build yet.</p>\n\t\t\t\t)}\n\t\t\t</Box>\n\t\t</Box>\n\t);\n};\n\nconst mapStateToProps = (state: RootState) => {\n\treturn {\n\t\titemsConfirmed: state.build.itemsConfirmed,\n\t};\n};\n\nconst mapDispatchToProps = (dispatch: any) => {\n\treturn {\n\t\tsetItemsConfirmed: (newItemsConfirmed: Array<ItemInterface>) =>\n\t\t\tdispatch({\n\t\t\t\ttype: actionTypes.BUILD_SET_ITEMSCONFIRMED,\n\t\t\t\tdata: newItemsConfirmed,\n\t\t\t}),\n\t\tsetSnackbarControls: (newControls: snackbarControlsInterface) =>\n\t\t\tdispatch({\n\t\t\t\ttype: actionTypes.SNACKBAR_SET_CONTROLS,\n\t\t\t\tdata: newControls.snackbarControls,\n\t\t\t}),\n\t};\n};\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\n\ntype PropsFromRedux = ConnectedProps<typeof connector>;\n\ntype ItemsSelectedProps = PropsFromRedux & {\n\thandleDeleteItemClick: (itemId: string) => void;\n};\n\nexport default connector(ItemsSelected);\n","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\components\\BuildSelection\\components\\RunesSelect\\RunesSelect.tsx",["328"],"import React from 'react';\n\n// Redux\nimport { connect, ConnectedProps } from 'react-redux';\nimport actionTypes from '../../../../../../../store/actions';\n\n// MaterialUI\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\n// Components\nimport Domination from './components/Domination';\nimport Inspiration from './components/Inspiration';\nimport Keystone from './components/Keystone';\nimport Resolve from './components/Resolve';\n// CSS\nimport globalstyles from '../../../../createbuild.module.css';\nimport styles from './runesselect.module.css';\n// Types\nimport {\n\tRuneInterface,\n\tRootState,\n} from '../../../../../../../shared/constants/interfaces';\n\nconst RunesSelect = (props: RunesSelectProps) => {\n\t// Game Data PROPS\n\tconst { runes } = props;\n\t// Build PROPS\n\tconst { runesSelected, setRunesSelected } = props;\n\n\t// Everytime user changes a rune, this function gets executed\n\t// - sets new rune\n\t// - sets reason property\n\tconst handleRuneSelectChange = (\n\t\te: React.ChangeEvent<HTMLSelectElement>,\n\t\truneType: string,\n\t\trunePath?: string\n\t) => {\n\t\tconst getRune = runes.find(\n\t\t\t(rune: RuneInterface) => rune.id === e.target.value\n\t\t);\n\n\t\tif (getRune) {\n\t\t\t/*\n\n\t\t\t\t\t- \"{...getRune}\" spreads the previous state of the rune\n\t\t\t\t\t- \"reason: prevRunesSelected[runeName].reason\" gets the 'reason' property of the previous rune and sets it to the new rune\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\t...prev,\n\t\t\t\t\t\tkeystone: { ...getRune, reason: prevRunesSelected[runeName].reason || '' },\n\t\t\t\t\t};\n\n\t\t\t*/\n\n\t\t\tconst runesSelectStateHandler = (runeName: string) => {\n\t\t\t\tconst prevRunesSelected: { [key: string]: RuneInterface } = {\n\t\t\t\t\t...runesSelected,\n\t\t\t\t};\n\n\t\t\t\tconst modifiedRunesSelected = {\n\t\t\t\t\t...prevRunesSelected,\n\t\t\t\t\t[runeName]: {\n\t\t\t\t\t\t...getRune,\n\t\t\t\t\t\treason: prevRunesSelected[runeName].reason || '',\n\t\t\t\t\t},\n\t\t\t\t};\n\n\t\t\t\tsetRunesSelected(runeName, modifiedRunesSelected);\n\t\t\t};\n\n\t\t\tif (runeType === 'keystone') {\n\t\t\t\trunesSelectStateHandler('keystone');\n\t\t\t}\n\t\t\tif (runeType === 'secondary') {\n\t\t\t\tswitch (runePath) {\n\t\t\t\t\tcase 'domination':\n\t\t\t\t\t\trunesSelectStateHandler('domination');\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'resolve':\n\t\t\t\t\t\trunesSelectStateHandler('resolve');\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'inspiration':\n\t\t\t\t\t\trunesSelectStateHandler('inspiration');\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\tconst handleRuneExplanationChange = (\n\t\te: React.ChangeEvent<HTMLTextAreaElement>,\n\t\truneName: string\n\t) => {\n\t\tconst prevRunesSelected: { [key: string]: RuneInterface } = {\n\t\t\t...runesSelected,\n\t\t};\n\n\t\tlet getRune = prevRunesSelected[runeName];\n\n\t\tconst modifiedRunesSelected = {\n\t\t\t...prevRunesSelected,\n\t\t\t[runeName]: {\n\t\t\t\t...getRune,\n\t\t\t\treason: e.target.value,\n\t\t\t},\n\t\t};\n\n\t\tsetRunesSelected(runeName, modifiedRunesSelected);\n\t};\n\n\treturn (\n\t\t<Box>\n\t\t\t<p className={globalstyles.inputLabel}>5. Runes</p>\n\t\t\t<p className={globalstyles.inputDescription}>\n\t\t\t\tSelect the runes for your build\n\t\t\t</p>\n\n\t\t\t<Grid container item xs={12} spacing={1}>\n\t\t\t\t{/* KEYSTONE Rune */}\n\t\t\t\t<Keystone\n\t\t\t\t\thandleRuneSelectChange={handleRuneSelectChange}\n\t\t\t\t\thandleRuneExplanationChange={handleRuneExplanationChange}\n\t\t\t\t/>\n\n\t\t\t\t{/* Secondary: Domination */}\n\t\t\t\t<Domination\n\t\t\t\t\thandleRuneSelectChange={handleRuneSelectChange}\n\t\t\t\t\thandleRuneExplanationChange={handleRuneExplanationChange}\n\t\t\t\t/>\n\n\t\t\t\t{/* Secondary: Resolve */}\n\t\t\t\t<Resolve\n\t\t\t\t\thandleRuneSelectChange={handleRuneSelectChange}\n\t\t\t\t\thandleRuneExplanationChange={handleRuneExplanationChange}\n\t\t\t\t/>\n\n\t\t\t\t{/* Secondary: Inspiration */}\n\t\t\t\t<Inspiration\n\t\t\t\t\thandleRuneSelectChange={handleRuneSelectChange}\n\t\t\t\t\thandleRuneExplanationChange={handleRuneExplanationChange}\n\t\t\t\t/>\n\t\t\t</Grid>\n\t\t</Box>\n\t);\n};\n\nconst mapStateToProps = (state: RootState) => {\n\treturn {\n\t\trunesSelected: state.build.runes,\n\t\trunes: state.gameData.runes,\n\t};\n};\n\nconst mapDispatchToprops = (dispatch: any) => {\n\treturn {\n\t\tsetRunesSelected: (\n\t\t\truneName: string,\n\t\t\tdata: { [key: string]: RuneInterface }\n\t\t) =>\n\t\t\tdispatch({ type: actionTypes.BUILD_SET_RUNESSELECTED, runeName, data }),\n\t};\n};\n\nconst connector = connect(mapStateToProps, mapDispatchToprops);\n\ntype PropsFromRedux = ConnectedProps<typeof connector>;\n\ntype RunesSelectProps = PropsFromRedux & {\n\tformControl: string;\n};\n\nexport default connector(RunesSelect);\n","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\components\\BuildSelection\\components\\RunesSelect\\components\\Keystone.tsx",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\components\\BuildSelection\\components\\RunesSelect\\components\\Domination.tsx",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\components\\BuildSelection\\components\\RunesSelect\\components\\Resolve.tsx",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\components\\BuildSelection\\components\\RunesSelect\\components\\Inspiration.tsx",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\components\\BuildSelection\\components\\SpellsSelect\\SpellsSelect.tsx",["329"],"import React from 'react';\n\n// Redux\nimport { connect, ConnectedProps } from 'react-redux';\nimport actionTypes from '../../../../../../../store/actions';\n\n// MaterialUI\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\n// Components\nimport Spell from './components/Spell';\n// CSS\nimport globalstyles from '../../../../createbuild.module.css';\nimport styles from './spellsselect.module.css';\n// Types\nimport {\n\tSpellInterface,\n\tRootState,\n} from '../../../../../../../shared/constants/interfaces';\n\nconst SpellsSelect = (props: SpellsSelectProps) => {\n\tconst { formControl } = props;\n\t// Game Data PROPS\n\tconst { spells } = props;\n\t// Build PROPS\n\tconst { spellsSelected, setSpellsSelected } = props;\n\n\tconst handleSpellSelectChange = (\n\t\te: React.ChangeEvent<HTMLSelectElement>,\n\t\tspellNumber: number\n\t) => {\n\t\tconst { value: spellId } = e.target;\n\n\t\tconst getSpell = spells.find(\n\t\t\t(spell: SpellInterface) => spell.id === spellId\n\t\t);\n\n\t\tif (getSpell) {\n\t\t\tswitch (spellNumber) {\n\t\t\t\tcase 1:\n\t\t\t\t\tsetSpellsSelected('spellOne', getSpell);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 2:\n\t\t\t\t\tsetSpellsSelected('spellTwo', getSpell);\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t};\n\n\treturn (\n\t\t<Box>\n\t\t\t<p className={globalstyles.inputLabel}>6. Summoner Spells</p>\n\t\t\t<p className={globalstyles.inputDescription}>\n\t\t\t\tSelect the spells for your build\n\t\t\t</p>\n\n\t\t\t<Grid container item xs={12}>\n\t\t\t\t{/* Spell One */}\n\t\t\t\t<Spell\n\t\t\t\t\tformControl={formControl}\n\t\t\t\t\tspells={spells}\n\t\t\t\t\tspellNumber={1}\n\t\t\t\t\tspellsSelected={spellsSelected}\n\t\t\t\t\thandleSpellSelectChange={handleSpellSelectChange}\n\t\t\t\t/>\n\n\t\t\t\t{/* Spell Two */}\n\t\t\t\t<Spell\n\t\t\t\t\tformControl={formControl}\n\t\t\t\t\tspells={spells}\n\t\t\t\t\tspellNumber={2}\n\t\t\t\t\tspellsSelected={spellsSelected}\n\t\t\t\t\thandleSpellSelectChange={handleSpellSelectChange}\n\t\t\t\t/>\n\t\t\t</Grid>\n\t\t</Box>\n\t);\n};\n\nconst mapStateToProps = (state: RootState) => {\n\treturn {\n\t\tspellsSelected: state.build.spells,\n\t\tspells: state.gameData.spells,\n\t};\n};\n\nconst mapDispatchToprops = (dispatch: any) => {\n\treturn {\n\t\tsetSpellsSelected: (spellKey: string, data: SpellInterface) =>\n\t\t\tdispatch({ type: actionTypes.BUILD_SET_SPELLSSELECTED, spellKey, data }),\n\t};\n};\n\nconst connector = connect(mapStateToProps, mapDispatchToprops);\n\ntype PropsFromRedux = ConnectedProps<typeof connector>;\n\ntype SpellsSelectProps = PropsFromRedux & {\n\tformControl: string;\n};\n\nexport default connector(SpellsSelect);\n","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\components\\BuildSelection\\components\\SpellsSelect\\components\\Spell.tsx",["330","331","332","333","334"],"import React from 'react';\n// @ts-ignore - No types for this module\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\n\n// MaterialUI\nimport FormControl from '@material-ui/core/FormControl';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport Grid from '@material-ui/core/Grid';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport NativeSelect from '@material-ui/core/NativeSelect';\n// Components\n// CSS\nimport globalstyles from '../../../../../createbuild.module.css';\nimport styles from './spell.module.css';\n// Types\nimport { SpellInterface } from '../../../../../../../../shared/constants/interfaces';\ntype SpellProps = {\n\tformControl: string;\n\tspells: Array<SpellInterface>;\n\tspellNumber: number;\n\tspellsSelected: {\n\t\tspellOne: SpellInterface;\n\t\tspellTwo: SpellInterface;\n\t};\n\thandleSpellSelectChange(\n\t\te: React.ChangeEvent<HTMLSelectElement>,\n\t\tspellNumber: number\n\t): void;\n};\n\nconst Spell = (props: SpellProps) => {\n\tconst {\n\t\tformControl,\n\t\tspells,\n\t\tspellNumber,\n\t\tspellsSelected,\n\t\thandleSpellSelectChange,\n\t} = props;\n\tconst { spellOne, spellTwo } = spellsSelected;\n\n\treturn (\n\t\t<Grid item xs={12} sm={3} style={{ marginTop: '10px' }}>\n\t\t\t<LazyLoadImage\n\t\t\t\tsrc={`/images/wildriftspells/${\n\t\t\t\t\tspellNumber === 1 ? spellOne.id : spellTwo.id\n\t\t\t\t}.jpg`}\n\t\t\t\tstyle={{ width: '90px' }}\n\t\t\t\tclassName={styles.spellImage}\n\t\t\t/>\n\n\t\t\t<select\n\t\t\t\tvalue={`${spellNumber === 1 ? spellOne.id : spellTwo.id}`}\n\t\t\t\tonChange={(e) => handleSpellSelectChange(e, spellNumber)}\n\t\t\t\tclassName={globalstyles.buildSelectInput}\n\t\t\t>\n\t\t\t\t{spells.map((spell: SpellInterface, index) => {\n\t\t\t\t\tconst { id: spellId, spellName } = spell;\n\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<option\n\t\t\t\t\t\t\tkey={index}\n\t\t\t\t\t\t\tvalue={spellId}\n\t\t\t\t\t\t\tclassName={globalstyles.buildSelectOption}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{spellName}\n\t\t\t\t\t\t</option>\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t\t</select>\n\t\t</Grid>\n\t);\n};\n\nexport default Spell;\n","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\components\\Loading\\Backdrop.tsx",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\store\\actions.js",[],["335","336"],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\store\\reducers\\gameData.js",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\store\\reducers\\build.js",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Builds\\Champion\\ChampionBuilds.tsx",["337"],"import React, { useState, useEffect } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { RouteComponentProps } from 'react-router';\n// @ts-ignore - No types for this module\nimport { Helmet } from 'react-helmet';\nimport { URL } from '../../../shared/constants/constants';\nimport axios from 'axios';\n\n// MaterialUI\n// Components\nimport Box from '@material-ui/core/Box';\nimport BuildsList from './components/BuildsList/BuildsList';\nimport Button from '@material-ui/core/Button';\nimport ChampionData from './components/ChampionData/ChampionData';\n// CSS\nimport styles from './championbuilds.module.css';\n// Types\nimport {\n\tBuildInterface,\n\tChampionInterface,\n} from '../../../shared/constants/interfaces';\ntype PathParamsType = {\n\tchampionName: string;\n};\ntype ChampionBuildsType = {\n\tbuilds: Array<BuildInterface>;\n\tbuildsCount: number;\n};\ntype HeroBuildsProps = RouteComponentProps<PathParamsType> & {};\n\n// For pagination (used in POST requests)\nlet page = 5;\n\nconst HeroBuilds = (props: HeroBuildsProps) => {\n\tconst { match } = props;\n\tconst { championName } = match.params;\n\n\tconst [isLoading, setIsLoading] = useState(true);\n\tconst [isLoadingMoreBuilds, setIsLoadingMoreBuilds] = useState(false);\n\tconst [championBuilds, setChampionBuilds] = useState<ChampionBuildsType>({\n\t\tbuilds: [],\n\t\tbuildsCount: 0,\n\t});\n\tconst [championData, setChampionData] = useState<ChampionInterface>({\n\t\tid: '',\n\t\tchampionName: '',\n\t\tcounters: {\n\t\t\tweakAgainst: [],\n\t\t\tstrongAgainst: [],\n\t\t},\n\t\tlane: [],\n\t\ttier: {},\n\t\ttitle: '',\n\t\turl: '',\n\t});\n\n\tconst getBuildsForChampion = () => {\n\t\treturn axios.post(`${URL.SERVER}/api/build/all/${championName}`, { page });\n\t};\n\tconst getMoreBuilds = async () => {\n\t\tsetIsLoadingMoreBuilds(true);\n\n\t\tpage += 5;\n\n\t\tconst moreBuildsRequest = await getBuildsForChampion();\n\t\tconst { data } = moreBuildsRequest;\n\t\tconst { buildsCount: newBuildsCount, builds: newBuilds } = data;\n\n\t\tsetChampionBuilds((prev: ChampionBuildsType) => {\n\t\t\tconst { builds: previousBuilds } = prev;\n\t\t\treturn {\n\t\t\t\tbuilds: [...previousBuilds, ...newBuilds],\n\t\t\t\tbuildsCount: newBuildsCount,\n\t\t\t};\n\t\t});\n\t\tsetIsLoadingMoreBuilds(false);\n\t};\n\n\tuseEffect(() => {\n\t\tconst getOneChampion = axios.get(\n\t\t\t`${URL.SERVER}/api/champion/${championName}`\n\t\t);\n\n\t\tPromise.all([getBuildsForChampion(), getOneChampion]).then((values) => {\n\t\t\tconst [{ data: buildsForChampion }, { data: dataForChampion }] = values;\n\t\t\tconst { buildsCount, builds } = buildsForChampion;\n\n\t\t\tsetChampionBuilds({ builds, buildsCount });\n\t\t\tsetChampionData(dataForChampion[0]);\n\n\t\t\tsetIsLoading(!isLoading);\n\t\t});\n\t}, []);\n\n\treturn (\n\t\t<>\n\t\t\t{!isLoading ? (\n\t\t\t\t<>\n\t\t\t\t\t<Helmet>\n\t\t\t\t\t\t<title>\n\t\t\t\t\t\t\t{championData.championName} Builds and Guides - League of Legends:\n\t\t\t\t\t\t\tWild Rift | Rift Builds\n\t\t\t\t\t\t</title>\n\t\t\t\t\t</Helmet>\n\t\t\t\t\t{/* Champion Data */}\n\t\t\t\t\t<ChampionData\n\t\t\t\t\t\tchampionData={championData}\n\t\t\t\t\t\tbuildsCount={championBuilds.buildsCount}\n\t\t\t\t\t/>\n\t\t\t\t\t{/* Builds */}\n\t\t\t\t\t<BuildsList builds={championBuilds.builds} />\n\n\t\t\t\t\t{/* Load More Button */}\n\t\t\t\t\t{championBuilds.buildsCount !== 0 &&\n\t\t\t\t\tchampionBuilds.builds.length !== 0 ? (\n\t\t\t\t\t\t<Box\n\t\t\t\t\t\t\tdisplay='flex'\n\t\t\t\t\t\t\tjustifyContent='center'\n\t\t\t\t\t\t\tclassName={styles.loadMoreContainer}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\tonClick={getMoreBuilds}\n\t\t\t\t\t\t\t\tvariant='contained'\n\t\t\t\t\t\t\t\tclassName={styles.loadMoreButton}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{isLoadingMoreBuilds ? 'Loading...' : 'Load more builds'}\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</Box>\n\t\t\t\t\t) : null}\n\t\t\t\t</>\n\t\t\t) : (\n\t\t\t\t<p>Loading...</p>\n\t\t\t)}\n\t\t</>\n\t);\n};\n\nexport default withRouter(HeroBuilds);\n","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Builds\\Player\\PlayerBuild.tsx",["338","339"],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Builds\\Player\\components\\PlayerBuildHeader\\PlayerBuildHeader.tsx",["340","341","342"],"import React from 'react';\nimport moment from 'moment';\n// @ts-ignore - No types for this module\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\nimport { GamePatch } from '../../../../../shared/constants/constants';\n\n// MaterialUI\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\n// Components\nimport BuildChip from './components/BuildChip/BuildChip';\n// CSS\nimport styles from './playerbuildheader.module.css';\n// Types\nimport { BuildInterface } from '../../../../../shared/constants/interfaces';\ntype PlayerBuildHeaderProps = {\n\tbuild: BuildInterface;\n};\n\nconst PlayerBuildHeader = (props: PlayerBuildHeaderProps) => {\n\tconst { build } = props;\n\tconst {\n\t\tbuildTitle,\n\t\tbuildRole,\n\t\tchampion,\n\t\tdateSubmitted,\n\t\tpatchVersion,\n\t\trank,\n\t\tspells,\n\t\tusername,\n\t} = build;\n\tconst { id: roleId, roleName } = buildRole;\n\n\tlet roleToDisplay;\n\n\tswitch (roleName) {\n\t\tcase 'Jungle':\n\t\t\troleToDisplay = roleId;\n\t\t\tbreak;\n\t\tcase 'Support':\n\t\t\troleToDisplay = roleId;\n\t\t\tbreak;\n\t\tcase 'Top':\n\t\t\troleToDisplay = roleId;\n\t\t\tbreak;\n\t\tcase 'Middle':\n\t\t\troleToDisplay = roleId;\n\t\t\tbreak;\n\t\tcase 'Bottom':\n\t\t\troleToDisplay = roleId;\n\t\t\tbreak;\n\t}\n\n\treturn (\n\t\t<Grid\n\t\t\tcontainer\n\t\t\twrap='nowrap'\n\t\t\tspacing={2}\n\t\t\tclassName={styles.playerBuildHeaderContainer}\n\t\t>\n\t\t\t{/* Champion Image */}\n\t\t\t<Grid item>\n\t\t\t\t<Box className={styles.championImageContainer}>\n\t\t\t\t\t<LazyLoadImage\n\t\t\t\t\t\tsrc={`/images/wildriftchampions/${champion.id}.jpg`}\n\t\t\t\t\t\tclassName={styles.championImage}\n\t\t\t\t\t\ttitle={champion.championName}\n\t\t\t\t\t/>\n\t\t\t\t\t{/* <Box\n\t\t\t\t\t\tclassName={styles.buildChampionContainer}\n\t\t\t\t\t\tdisplay='flex'\n\t\t\t\t\t\tjustifyContent='center'\n\t\t\t\t\t>\n\t\t\t\t\t\t<LazyLoadImage\n\t\t\t\t\t\t\tsrc={`/images/wildriftroles/${roleToDisplay}.png`}\n\t\t\t\t\t\t\tclassName={styles.buildRoleImage}\n\t\t\t\t\t\t\ttitle={buildRole}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<span className={styles.buildChampionText}>\n\t\t\t\t\t\t\t{champion.championName}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</Box> */}\n\t\t\t\t</Box>\n\t\t\t</Grid>\n\n\t\t\t{/* Champion Name, Build Title, and Username */}\n\t\t\t<Grid item xs>\n\t\t\t\t<Box className={styles.buildInformationContainer}>\n\t\t\t\t\t<span className={styles.buildTitleText}>{buildTitle}&nbsp;</span>\n\t\t\t\t\t<Box>\n\t\t\t\t\t\t<Box>\n\t\t\t\t\t\t\t<span className={styles.usernameText}>Build by {username}</span>\n\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t<Box display='flex' className={styles.buildChipsContainer}>\n\t\t\t\t\t\t\t<BuildChip property='Lane' value={buildRole.roleName} />\n\t\t\t\t\t\t\t<BuildChip property='Rank' value={rank.rankName} />\n\t\t\t\t\t\t</Box>\n\t\t\t\t\t</Box>\n\t\t\t\t</Box>\n\t\t\t</Grid>\n\n\t\t\t<Box p={2} flexDirection='row-reverse'>\n\t\t\t\t<p className={styles.patchText}>Patch {GamePatch.VERSION}</p>\n\t\t\t\t<span className={styles.buildDateSubmitted}>\n\t\t\t\t\t{moment(dateSubmitted).format('MM/DD/YYYY')}\n\t\t\t\t</span>\n\t\t\t</Box>\n\t\t</Grid>\n\t);\n};\n\nexport default PlayerBuildHeader;\n","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Builds\\Player\\components\\SectionDivider\\SectionDivider.tsx",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Builds\\Player\\components\\RuneItem\\RuneItem.tsx",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Builds\\Player\\components\\Spellitem\\SpellItem.tsx",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Builds\\Player\\components\\PlayerBuildFooter\\PlayerBuildFooter.tsx",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\components\\Popover\\ItemPopover.tsx",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Builds\\Player\\components\\BuildItem\\BuildItem.tsx",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\components\\Popover\\RunePopover.tsx",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\components\\Popover\\SpellPopover.tsx",["343"],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Builds\\Champion\\components\\ChampionData\\ChampionData.tsx",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Builds\\Champion\\components\\BuildsList\\BuildsList.tsx",["344"],"import React from 'react';\nimport moment from 'moment';\n\n// MaterialUI\nimport Box from '@material-ui/core/Box';\n// Components\nimport BuildBox from './components/BuildBox/BuildBox';\nimport NoBuilds from './components/NoBuilds/NoBuilds';\n// CSS\nimport styles from './buildslist.module.css';\n// Types\nimport { BuildInterface } from '../../../../../shared/constants/interfaces';\ntype BuildsListProps = {\n\tbuilds: Array<BuildInterface>;\n};\n\nconst BuildsList = (props: BuildsListProps) => {\n\tconst { builds } = props;\n\n\treturn (\n\t\t<Box className={styles.buildsListContainer}>\n\t\t\t{builds.length !== 0 ? (\n\t\t\t\t<>\n\t\t\t\t\t{builds.map((build, index) => {\n\t\t\t\t\t\treturn <BuildBox key={index} build={build} />;\n\t\t\t\t\t})}\n\t\t\t\t</>\n\t\t\t) : (\n\t\t\t\t<NoBuilds />\n\t\t\t)}\n\t\t</Box>\n\t);\n};\n\nexport default BuildsList;\n","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Builds\\Champion\\components\\BuildsList\\components\\NoBuilds\\NoBuilds.tsx",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Builds\\Champion\\components\\BuildsList\\components\\BuildBox\\BuildBox.tsx",["345","346","347","348","349","350","351"],"import React from 'react';\n\n// MaterialUI\nimport Grid from '@material-ui/core/Grid';\n// Components\nimport BuildDate from './components/BuildDate/BuildDate';\nimport BuildItem from './components/BuildItem/BuildItem';\nimport BuildLearnMoreButton from './components/BuildLearnMoreButton/BuildLearnMoreButton';\nimport BuildRankUser from './components/BuildRankUser/BuildRankUser';\nimport BuildRune from './components/BuildRune/BuildRune';\nimport BuildSpell from './components/BuildSpell/BuildSpell';\nimport Divider from '@material-ui/core/Divider';\n// Types\nimport { BuildInterface } from '../../../../../../../shared/constants/interfaces';\n// CSS\nimport styles from './buildbox.module.css';\n\ntype BuildBoxProps = {\n\tbuild: BuildInterface;\n};\n\nconst BuildBox = (props: BuildBoxProps) => {\n\tconst { build } = props;\n\tconst { id: buildId, buildRole, buildTitle, dateSubmitted, username } = build; // Strings\n\tconst { champion, rank, runes, spells } = build; // Objects\n\tconst { id: championId, championName } = champion;\n\tconst { id: rankId, rankName } = rank;\n\tconst { domination, inspiration, keystone, resolve } = runes;\n\tconst { spellOne, spellTwo } = spells;\n\tconst { itemsConfirmed } = build; // Arrays\n\n\treturn (\n\t\t<>\n\t\t\t<Grid\n\t\t\t\tcontainer\n\t\t\t\tdirection='row'\n\t\t\t\tjustify='center'\n\t\t\t\talignItems='center'\n\t\t\t\tclassName={styles.buildBoxContainer}\n\t\t\t>\n\t\t\t\t{/* Date Submitted */}\n\t\t\t\t<Grid item xs={2} sm={2}>\n\t\t\t\t\t<BuildDate dateSubmitted={dateSubmitted} />\n\t\t\t\t</Grid>\n\n\t\t\t\t{/* Champion Icon */}\n\t\t\t\t<Grid\n\t\t\t\t\tcontainer\n\t\t\t\t\titem\n\t\t\t\t\tdirection='row'\n\t\t\t\t\tjustify='center'\n\t\t\t\t\talignItems='center'\n\t\t\t\t\txs={1}\n\t\t\t\t\tsm={1}\n\t\t\t\t>\n\t\t\t\t\t<img\n\t\t\t\t\t\talt={championName}\n\t\t\t\t\t\ttitle={championName}\n\t\t\t\t\t\tsrc={`/images/wildriftchampions/${championId}.jpg`}\n\t\t\t\t\t\tclassName={styles.championImage}\n\t\t\t\t\t/>\n\t\t\t\t</Grid>\n\n\t\t\t\t{/* Items */}\n\t\t\t\t<Grid\n\t\t\t\t\tcontainer\n\t\t\t\t\titem\n\t\t\t\t\tdirection='row'\n\t\t\t\t\tjustify='center'\n\t\t\t\t\talignItems='center'\n\t\t\t\t\txs={3}\n\t\t\t\t\tsm={3}\n\t\t\t\t>\n\t\t\t\t\t{itemsConfirmed\n\t\t\t\t\t\t.filter((item) => item.type === 'primary')\n\t\t\t\t\t\t.map((item, index) => {\n\t\t\t\t\t\t\treturn <BuildItem key={index} item={item} />;\n\t\t\t\t\t\t})}\n\t\t\t\t</Grid>\n\n\t\t\t\t{/* Spells */}\n\t\t\t\t<Grid\n\t\t\t\t\tcontainer\n\t\t\t\t\titem\n\t\t\t\t\tdirection='row'\n\t\t\t\t\tjustify='center'\n\t\t\t\t\talignItems='center'\n\t\t\t\t\txs={1}\n\t\t\t\t\tsm={1}\n\t\t\t\t>\n\t\t\t\t\t<BuildSpell spell={spellOne} />\n\t\t\t\t\t<BuildSpell spell={spellTwo} />\n\t\t\t\t</Grid>\n\n\t\t\t\t{/* Rune */}\n\t\t\t\t<Grid\n\t\t\t\t\tcontainer\n\t\t\t\t\titem\n\t\t\t\t\tdirection='row'\n\t\t\t\t\tjustify='center'\n\t\t\t\t\talignItems='center'\n\t\t\t\t\txs={1}\n\t\t\t\t\tsm={1}\n\t\t\t\t>\n\t\t\t\t\t<BuildRune rune={keystone} />\n\t\t\t\t</Grid>\n\n\t\t\t\t{/* Rank and Username */}\n\t\t\t\t<Grid item xs={2} sm={2}>\n\t\t\t\t\t<BuildRankUser username={username} rank={rank} />\n\t\t\t\t</Grid>\n\n\t\t\t\t{/* Learn more Button */}\n\t\t\t\t<Grid\n\t\t\t\t\tcontainer\n\t\t\t\t\titem\n\t\t\t\t\tdirection='row'\n\t\t\t\t\tjustify='flex-start'\n\t\t\t\t\talignItems='center'\n\t\t\t\t\txs={2}\n\t\t\t\t\tsm={2}\n\t\t\t\t>\n\t\t\t\t\t<BuildLearnMoreButton buildId={buildId} />\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t\t<Divider className={styles.divider} />\n\t\t</>\n\t);\n};\n\nexport default BuildBox;\n","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Builds\\Champion\\components\\BuildsList\\components\\BuildBox\\components\\BuildDate\\BuildDate.tsx",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Builds\\Champion\\components\\BuildsList\\components\\BuildBox\\components\\BuildSpell\\BuildSpell.tsx",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Builds\\Champion\\components\\BuildsList\\components\\BuildBox\\components\\BuildRune\\BuildRune.tsx",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Builds\\Champion\\components\\BuildsList\\components\\BuildBox\\components\\BuildRankUser\\BuildRankUser.tsx",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Builds\\Champion\\components\\BuildsList\\components\\BuildBox\\components\\BuildLearnMoreButton\\BuildLearnMoreButton.tsx",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Builds\\Champion\\components\\ChampionData\\components\\Lanes\\Lanes.tsx",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Builds\\Champion\\components\\ChampionData\\components\\Counters\\Counters.tsx",["352"],"import React from 'react';\n// @ts-ignore - No types for this module\nimport { Tab, Tabs, TabList, TabPanel } from 'react-tabs';\n\n// react-tabs\nimport 'react-tabs/style/react-tabs.css';\n// MaterialUI\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\nimport Avatar from '@material-ui/core/Avatar';\nimport Box from '@material-ui/core/Box';\n// Components\n// CSS\nimport styles from './counters.module.css';\n// Types\ntype ChampionCounterType = {\n\tid: string;\n\tchampionName: string;\n};\ntype CountersProps = {\n\tcounters: {\n\t\tstrongAgainst: Array<ChampionCounterType>;\n\t\tweakAgainst: Array<ChampionCounterType>;\n\t};\n\tchampionName: string;\n};\n\nconst Counters = (props: CountersProps) => {\n\tconst { counters, championName } = props;\n\tconst { strongAgainst, weakAgainst } = counters;\n\n\t// For path='/builds/champion/:championName'\n\tconst convertChampionNameToAlphabet = (champName: string) => {\n\t\treturn champName\n\t\t\t.toLocaleLowerCase()\n\t\t\t.split(' ')\n\t\t\t.filter((char) => char !== '.' && char !== \"'\")\n\t\t\t.join('')\n\t\t\t.replace('.', '')\n\t\t\t.replace(\"'\", '');\n\t};\n\n\treturn (\n\t\t<div\n\t\t\tstyle={{\n\t\t\t\tdisplay: 'flex',\n\t\t\t\tjustifyContent: 'flex-end',\n\t\t\t}}\n\t\t>\n\t\t\t<Tabs style={{ width: '24rem' }}>\n\t\t\t\t{/* Can't use external CSS on <TabList> and <Tab> because it doesn't overwrite even with !important */}\n\t\t\t\t<TabList\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\tbackgroundColor: '#121212',\n\t\t\t\t\t\tborder: 'none',\n\t\t\t\t\t\tdisplay: 'flex',\n\t\t\t\t\t\tjustifyContent: 'center',\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<Tab\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\tpadding: '5px 10px',\n\t\t\t\t\t\t\tborderRadius: 0,\n\t\t\t\t\t\t\twidth: '100%',\n\t\t\t\t\t\t\ttextAlign: 'center',\n\t\t\t\t\t\t\tcolor: 'rgb(255,255,255, 60%)',\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\tWeak against\n\t\t\t\t\t</Tab>\n\t\t\t\t\t<Tab\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\tpadding: '5px 10px',\n\t\t\t\t\t\t\tborderRadius: 0,\n\t\t\t\t\t\t\twidth: '100%',\n\t\t\t\t\t\t\ttextAlign: 'center',\n\t\t\t\t\t\t\tcolor: 'rgb(255,255,255, 60%)',\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\tStrong against\n\t\t\t\t\t</Tab>\n\t\t\t\t</TabList>\n\n\t\t\t\t{/* Weak against */}\n\t\t\t\t<TabPanel style={{ marginTop: '20px', padding: '0 15px' }}>\n\t\t\t\t\t{weakAgainst.map((champ, index) => {\n\t\t\t\t\t\tconst { id: championId, championName } = champ;\n\t\t\t\t\t\tconst allAlphabetChampionName = convertChampionNameToAlphabet(\n\t\t\t\t\t\t\tchampionName\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<CounterContent\n\t\t\t\t\t\t\t\tkey={index}\n\t\t\t\t\t\t\t\tchampionId={championId}\n\t\t\t\t\t\t\t\tallAlphabetChampionName={allAlphabetChampionName}\n\t\t\t\t\t\t\t\tchampionName={championName}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t);\n\t\t\t\t\t})}\n\t\t\t\t</TabPanel>\n\n\t\t\t\t{/* Strong against */}\n\t\t\t\t<TabPanel style={{ marginTop: '20px', padding: '0 15px' }}>\n\t\t\t\t\t{strongAgainst.map((champ, index) => {\n\t\t\t\t\t\tconst { id: championId, championName } = champ;\n\t\t\t\t\t\tconst allAlphabetChampionName = convertChampionNameToAlphabet(\n\t\t\t\t\t\t\tchampionName\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<CounterContent\n\t\t\t\t\t\t\t\tkey={index}\n\t\t\t\t\t\t\t\tchampionId={championId}\n\t\t\t\t\t\t\t\tallAlphabetChampionName={allAlphabetChampionName}\n\t\t\t\t\t\t\t\tchampionName={championName}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t);\n\t\t\t\t\t})}\n\t\t\t\t</TabPanel>\n\t\t\t</Tabs>\n\t\t</div>\n\t);\n};\n\nconst CounterContent = (props: {\n\tchampionId: string;\n\tallAlphabetChampionName: string;\n\tchampionName: string;\n}) => {\n\tconst { championId, allAlphabetChampionName, championName } = props;\n\n\treturn (\n\t\t<a\n\t\t\thref={`/builds/champion/${allAlphabetChampionName}`}\n\t\t\tclassName={styles.championCounterLink}\n\t\t\ttitle={championName}\n\t\t>\n\t\t\t<Box display='flex' className={styles.championCounterContainer}>\n\t\t\t\t<Box display='flex' flexGrow={1}>\n\t\t\t\t\t<Avatar\n\t\t\t\t\t\tvariant='square'\n\t\t\t\t\t\tsrc={`/images/wildriftchampions/${championId}.jpg`}\n\t\t\t\t\t\tclassName={styles.championCounterImage}\n\t\t\t\t\t/>\n\t\t\t\t\t<span className={styles.championCounterName}>{championName}</span>\n\t\t\t\t</Box>\n\t\t\t\t<span className={styles.goToBuildText}>\n\t\t\t\t\tBuilds\n\t\t\t\t\t<ArrowForwardIosIcon className={styles.goToBuildArrow} />\n\t\t\t\t</span>\n\t\t\t</Box>\n\t\t</a>\n\t);\n};\n\nexport default Counters;\n","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\FAQ\\FAQ.tsx",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\FAQ\\components\\AccordionFAQ.tsx",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Builds\\Champion\\components\\BuildsList\\components\\BuildBox\\components\\BuildItem\\BuildItem.tsx",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\components\\BuildInformation\\components\\BuildTitle.tsx",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\components\\BuildInformation\\components\\BuildRole\\BuildRole.tsx",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\components\\Stepper\\components\\StepperButtons.tsx",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\shared\\constants\\constants.js",["353"],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\components\\ReCaptcha\\ReCaptcha.tsx",["354","355"],"import React, { useState, useEffect, useRef, RefObject } from 'react';\nimport { ReCaptcha } from '../../../../../shared/constants/constants';\nimport ReCAPTCHA from 'react-google-recaptcha';\n\n// Redux\nimport { connect, ConnectedProps } from 'react-redux';\nimport actionTypes from '../../../../../store/actions';\n\nconst ReCaptchaComponent = (props: ReCaptchaComponentProps) => {\n\tconst { resetCaptcha } = props;\n\t// RECAPTCHA Props\n\tconst { setRecaptchRef, setRecaptchaToken } = props;\n\n\t// ===== ReCaptcha ===== //\n\tlet ref = useRef<ReCAPTCHA | null>(null);\n\n\tconst recaptchaHandleChange = (value: string | null) => {\n\t\tsetRecaptchaToken(value);\n\t};\n\n\tuseEffect(() => {\n\t\tsetRecaptchRef(ref);\n\t}, []);\n\n\treturn (\n\t\t<ReCAPTCHA\n\t\t\tref={(r) => (ref.current = r)}\n\t\t\tsitekey={ReCaptcha.PUBLIC_KEY!} // Always has a value hence !\n\t\t\tonChange={recaptchaHandleChange}\n\t\t\tonExpired={() => resetCaptcha()}\n\t\t/>\n\t);\n};\n\nconst mapDispatchToProps = (dispatch: any) => {\n\treturn {\n\t\tsetRecaptchRef: (recaptchaRef: RefObject<ReCAPTCHA | null>) =>\n\t\t\tdispatch({\n\t\t\t\ttype: actionTypes.RECAPTCHA_SET_REF,\n\t\t\t\tdata: recaptchaRef,\n\t\t\t}),\n\t\tsetRecaptchaToken: (recaptchaToken: string | null) =>\n\t\t\tdispatch({\n\t\t\t\ttype: actionTypes.RECAPTCHA_SET_TOKEN,\n\t\t\t\tdata: recaptchaToken,\n\t\t\t}),\n\t};\n};\n\nconst connector = connect(null, mapDispatchToProps);\n\ntype PropsFromRedux = ConnectedProps<typeof connector> & {\n\tresetCaptcha: () => void;\n};\n\ntype ReCaptchaComponentProps = PropsFromRedux;\n\nexport default connector(ReCaptchaComponent);\n","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\shared\\utils\\validations.ts",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\store\\reducers\\reCaptcha.js",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\components\\Snackbars\\Snackbars.tsx",["356"],"import React, { useEffect } from 'react';\n\n// Redux\nimport { connect, ConnectedProps } from 'react-redux';\nimport actionTypes from '../../store/actions';\n\n// MaterialUI\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert, { AlertProps } from '@material-ui/lab/Alert';\nimport { makeStyles, Theme } from '@material-ui/core/styles';\n// Types\nimport {\n\tsnackbarControlsInterface,\n\tRootState,\n} from '../../shared/constants/interfaces';\n\nfunction Alert(props: AlertProps) {\n\treturn <MuiAlert elevation={6} variant='filled' {...props} />;\n}\n\nconst useStyles = makeStyles((theme: Theme) => ({\n\troot: {\n\t\twidth: '100%',\n\t\t'& > * + *': {\n\t\t\tmarginTop: theme.spacing(2),\n\t\t},\n\t},\n}));\n\nconst Snackbars = (props: SnackbarsProps) => {\n\tconst classes = useStyles();\n\tconst { snackbarControls, setSnackbarControls } = props;\n\tconst { message, shouldOpen, snackbarType } = snackbarControls;\n\n\tconsole.log(snackbarControls);\n\n\tconst handleClose = (event?: React.SyntheticEvent, reason?: string) => {\n\t\tif (reason === 'clickaway') {\n\t\t\treturn;\n\t\t}\n\n\t\tsetSnackbarControls({\n\t\t\tsnackbarControls: {\n\t\t\t\tmessage: '',\n\t\t\t\tshouldOpen: false,\n\t\t\t\tsnackbarType: '',\n\t\t\t},\n\t\t});\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t{shouldOpen ? (\n\t\t\t\t<div className={classes.root}>\n\t\t\t\t\t<Snackbar\n\t\t\t\t\t\tanchorOrigin={{ vertical: 'bottom', horizontal: 'left' }}\n\t\t\t\t\t\topen={shouldOpen}\n\t\t\t\t\t\tautoHideDuration={3000}\n\t\t\t\t\t\tonClose={handleClose}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Alert\n\t\t\t\t\t\t\tonClose={handleClose}\n\t\t\t\t\t\t\tseverity={snackbarType === 'success' ? 'success' : 'error'}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{message}\n\t\t\t\t\t\t</Alert>\n\t\t\t\t\t</Snackbar>\n\t\t\t\t</div>\n\t\t\t) : null}\n\t\t</>\n\t);\n};\n\nconst mapStateToProps = (state: RootState) => {\n\treturn {\n\t\tsnackbarControls: state.snackbarControls,\n\t};\n};\n\nconst mapDispatchToProps = (dispatch: any) => {\n\treturn {\n\t\tsetSnackbarControls: (newControls: snackbarControlsInterface) =>\n\t\t\tdispatch({\n\t\t\t\ttype: actionTypes.SNACKBAR_SET_CONTROLS,\n\t\t\t\tdata: newControls.snackbarControls,\n\t\t\t}),\n\t};\n};\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\n\ntype PropsFromRedux = ConnectedProps<typeof connector>;\n\ntype SnackbarsProps = PropsFromRedux;\n\nexport default connector(Snackbars);\n","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\shared\\utils\\messages.js",["357"],"import Snackbars from '../../components/Snackbars/Snackbars';\n\nexport const Error = {\n\tBUILD_NOT_SAVED: 'Something went wrong. Failed to save build.',\n\tCAN_ONLY_HAVE_SIX_PRIMARY_ITEMS: 'A build can only have 6 primary items',\n\tDOES_NOT_HAVE_SIX_PRIMARY_ITEMS: 'A build must have 6 primary items',\n\tHAS_DUPLICATE_ITEMS: 'That item is already in your build!',\n\tNO_BUILD_TITLE: 'Please enter a title for your build',\n\tNO_USERNAME: 'Please enter your username',\n\tNO_ITEMS_SELECTED: 'Please add items to your build'\n\n}\n\nexport const Success = {\n\tBUILD_SAVED: 'Successfully saved your build!'\n}","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\store\\reducers\\snackbarControls.js",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Builds\\Player\\components\\PlayerBuildHeader\\components\\BuildChip\\BuildChip.tsx",["358"],"import React from 'react';\n\n// MaterialUI\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\n// CSS\nimport styles from './buildchip.module.css';\n// Types\ntype BuildChipProps = {\n\tproperty: string;\n\tvalue: string;\n};\n\nconst BuildChip = (props: BuildChipProps) => {\n\tconst { property, value } = props;\n\n\treturn (\n\t\t<Box className={styles.BuildChipContainer}>\n\t\t\t<span>\n\t\t\t\t{property} &nbsp;<span className={styles.chipValue}>{value}</span>\n\t\t\t</span>\n\t\t</Box>\n\t);\n};\n\nexport default BuildChip;\n","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Builds\\Player\\components\\PlayerBuildFooter\\components\\CopyBuildLink\\CopyBuildLink.tsx",["359"],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Builds\\Player\\components\\PlayerBuildFooter\\components\\ViewMoreBuilds\\ViewMoreBuilds.tsx",[],{"ruleId":"360","severity":1,"message":"361","line":8,"column":10,"nodeType":"362","messageId":"363","endLine":8,"endColumn":21},{"ruleId":"360","severity":1,"message":"364","line":31,"column":7,"nodeType":"362","messageId":"363","endLine":31,"endColumn":15},{"ruleId":"360","severity":1,"message":"365","line":35,"column":7,"nodeType":"362","messageId":"363","endLine":35,"endColumn":16},{"ruleId":"366","replacedBy":"367"},{"ruleId":"368","replacedBy":"369"},{"ruleId":"370","severity":1,"message":"371","line":43,"column":70,"nodeType":"372","messageId":"373","endLine":43,"endColumn":72},{"ruleId":"374","severity":1,"message":"375","line":61,"column":5,"nodeType":"376","endLine":61,"endColumn":17,"suggestions":"377"},{"ruleId":"374","severity":1,"message":"375","line":72,"column":5,"nodeType":"376","endLine":72,"endColumn":21,"suggestions":"378"},{"ruleId":"374","severity":1,"message":"379","line":164,"column":5,"nodeType":"376","endLine":164,"endColumn":7,"suggestions":"380"},{"ruleId":"360","severity":1,"message":"381","line":8,"column":17,"nodeType":"362","messageId":"363","endLine":8,"endColumn":24},{"ruleId":"360","severity":1,"message":"382","line":27,"column":8,"nodeType":"362","messageId":"363","endLine":27,"endColumn":14},{"ruleId":"360","severity":1,"message":"383","line":32,"column":2,"nodeType":"362","messageId":"363","endLine":32,"endColumn":15},{"ruleId":"360","severity":1,"message":"384","line":102,"column":10,"nodeType":"362","messageId":"363","endLine":102,"endColumn":24},{"ruleId":"360","severity":1,"message":"385","line":1,"column":17,"nodeType":"362","messageId":"363","endLine":1,"endColumn":25},{"ruleId":"360","severity":1,"message":"386","line":1,"column":27,"nodeType":"362","messageId":"363","endLine":1,"endColumn":36},{"ruleId":"360","severity":1,"message":"382","line":10,"column":8,"nodeType":"362","messageId":"363","endLine":10,"endColumn":14},{"ruleId":"360","severity":1,"message":"382","line":12,"column":8,"nodeType":"362","messageId":"363","endLine":12,"endColumn":14},{"ruleId":"360","severity":1,"message":"387","line":23,"column":10,"nodeType":"362","messageId":"363","endLine":23,"endColumn":21},{"ruleId":"360","severity":1,"message":"388","line":12,"column":8,"nodeType":"362","messageId":"363","endLine":12,"endColumn":19},{"ruleId":"360","severity":1,"message":"389","line":14,"column":8,"nodeType":"362","messageId":"363","endLine":14,"endColumn":22},{"ruleId":"360","severity":1,"message":"390","line":16,"column":8,"nodeType":"362","messageId":"363","endLine":16,"endColumn":18},{"ruleId":"360","severity":1,"message":"391","line":17,"column":8,"nodeType":"362","messageId":"363","endLine":17,"endColumn":20},{"ruleId":"360","severity":1,"message":"387","line":32,"column":10,"nodeType":"362","messageId":"363","endLine":32,"endColumn":21},{"ruleId":"360","severity":1,"message":"385","line":1,"column":17,"nodeType":"362","messageId":"363","endLine":1,"endColumn":25},{"ruleId":"360","severity":1,"message":"392","line":19,"column":8,"nodeType":"362","messageId":"363","endLine":19,"endColumn":19},{"ruleId":"374","severity":1,"message":"393","line":88,"column":5,"nodeType":"376","endLine":88,"endColumn":21,"suggestions":"394"},{"ruleId":"360","severity":1,"message":"382","line":17,"column":8,"nodeType":"362","messageId":"363","endLine":17,"endColumn":14},{"ruleId":"360","severity":1,"message":"382","line":14,"column":8,"nodeType":"362","messageId":"363","endLine":14,"endColumn":14},{"ruleId":"360","severity":1,"message":"388","line":6,"column":8,"nodeType":"362","messageId":"363","endLine":6,"endColumn":19},{"ruleId":"360","severity":1,"message":"389","line":7,"column":8,"nodeType":"362","messageId":"363","endLine":7,"endColumn":22},{"ruleId":"360","severity":1,"message":"390","line":9,"column":8,"nodeType":"362","messageId":"363","endLine":9,"endColumn":18},{"ruleId":"360","severity":1,"message":"391","line":10,"column":8,"nodeType":"362","messageId":"363","endLine":10,"endColumn":20},{"ruleId":"360","severity":1,"message":"387","line":33,"column":3,"nodeType":"362","messageId":"363","endLine":33,"endColumn":14},{"ruleId":"366","replacedBy":"367"},{"ruleId":"368","replacedBy":"369"},{"ruleId":"374","severity":1,"message":"395","line":93,"column":5,"nodeType":"376","endLine":93,"endColumn":7,"suggestions":"396"},{"ruleId":"360","severity":1,"message":"397","line":15,"column":8,"nodeType":"362","messageId":"363","endLine":15,"endColumn":16},{"ruleId":"374","severity":1,"message":"398","line":52,"column":5,"nodeType":"376","endLine":52,"endColumn":7,"suggestions":"399"},{"ruleId":"360","severity":1,"message":"400","line":27,"column":3,"nodeType":"362","messageId":"363","endLine":27,"endColumn":15},{"ruleId":"360","severity":1,"message":"401","line":29,"column":3,"nodeType":"362","messageId":"363","endLine":29,"endColumn":9},{"ruleId":"360","severity":1,"message":"402","line":50,"column":4,"nodeType":"362","messageId":"363","endLine":50,"endColumn":17},{"ruleId":"360","severity":1,"message":"403","line":37,"column":10,"nodeType":"362","messageId":"363","endLine":37,"endColumn":18},{"ruleId":"360","severity":1,"message":"404","line":2,"column":8,"nodeType":"362","messageId":"363","endLine":2,"endColumn":14},{"ruleId":"360","severity":1,"message":"405","line":24,"column":23,"nodeType":"362","messageId":"363","endLine":24,"endColumn":32},{"ruleId":"360","severity":1,"message":"406","line":24,"column":34,"nodeType":"362","messageId":"363","endLine":24,"endColumn":44},{"ruleId":"360","severity":1,"message":"407","line":27,"column":14,"nodeType":"362","messageId":"363","endLine":27,"endColumn":20},{"ruleId":"360","severity":1,"message":"408","line":27,"column":22,"nodeType":"362","messageId":"363","endLine":27,"endColumn":30},{"ruleId":"360","severity":1,"message":"409","line":28,"column":10,"nodeType":"362","messageId":"363","endLine":28,"endColumn":20},{"ruleId":"360","severity":1,"message":"410","line":28,"column":22,"nodeType":"362","messageId":"363","endLine":28,"endColumn":33},{"ruleId":"360","severity":1,"message":"411","line":28,"column":45,"nodeType":"362","messageId":"363","endLine":28,"endColumn":52},{"ruleId":"360","severity":1,"message":"412","line":28,"column":20,"nodeType":"362","messageId":"363","endLine":28,"endColumn":32},{"ruleId":"413","severity":1,"message":"414","line":1,"column":31,"nodeType":"362","messageId":"363","endLine":1,"endColumn":51},{"ruleId":"360","severity":1,"message":"385","line":1,"column":17,"nodeType":"362","messageId":"363","endLine":1,"endColumn":25},{"ruleId":"374","severity":1,"message":"415","line":23,"column":5,"nodeType":"376","endLine":23,"endColumn":7,"suggestions":"416"},{"ruleId":"360","severity":1,"message":"386","line":1,"column":17,"nodeType":"362","messageId":"363","endLine":1,"endColumn":26},{"ruleId":"413","severity":1,"message":"417","line":1,"column":8,"nodeType":"362","messageId":"363","endLine":1,"endColumn":17},{"ruleId":"360","severity":1,"message":"418","line":5,"column":8,"nodeType":"362","messageId":"363","endLine":5,"endColumn":12},{"ruleId":"360","severity":1,"message":"419","line":5,"column":8,"nodeType":"362","messageId":"363","endLine":5,"endColumn":11},"@typescript-eslint/no-unused-vars","'PersistGate' is defined but never used.","Identifier","unusedVar","'pReducer' is assigned a value but never used.","'persistor' is assigned a value but never used.","no-native-reassign",["420"],"no-negated-in-lhs",["421"],"array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'champions'. Either include it or remove the dependency array.","ArrayExpression",["422"],["423"],"React Hook useEffect has missing dependencies: 'setChampions', 'setItems', 'setRanks', 'setRoles', 'setRunes', and 'setSpells'. Either include them or remove the dependency array.",["424"],"'Success' is defined but never used.","'styles' is defined but never used.","'ItemInterface' is defined but never used.","'saveToDatabase' is assigned a value but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","'formControl' is assigned a value but never used.","'FormControl' is defined but never used.","'FormHelperText' is defined but never used.","'InputLabel' is defined but never used.","'NativeSelect' is defined but never used.","'ItemPopover' is defined but never used.","React Hook useEffect has missing dependencies: 'setItemsConfirmed' and 'setSnackbarControls'. Either include them or remove the dependency array.",["425"],"React Hook useEffect has missing dependencies: 'championName', 'getBuildsForChampion', and 'isLoading'. Either include them or remove the dependency array. You can also do a functional update 'setIsLoading(i => ...)' if you only need 'isLoading' in the 'setIsLoading' call.",["426"],"'CopyLink' is defined but never used.","React Hook useEffect has a missing dependency: 'match.params.buildId'. Either include it or remove the dependency array.",["427"],"'patchVersion' is assigned a value but never used.","'spells' is assigned a value but never used.","'roleToDisplay' is assigned a value but never used.","'cooldown' is assigned a value but never used.","'moment' is defined but never used.","'buildRole' is assigned a value but never used.","'buildTitle' is assigned a value but never used.","'rankId' is assigned a value but never used.","'rankName' is assigned a value but never used.","'domination' is assigned a value but never used.","'inspiration' is assigned a value but never used.","'resolve' is assigned a value but never used.","'championName' is assigned a value but never used.","no-unused-vars","'REACT_APP_SERVER_URL' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'setRecaptchRef'. Either include it or remove the dependency array.",["428"],"'Snackbars' is defined but never used.","'Grid' is defined but never used.","'Box' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"429","fix":"430"},{"desc":"431","fix":"432"},{"desc":"433","fix":"434"},{"desc":"435","fix":"436"},{"desc":"437","fix":"438"},{"desc":"439","fix":"440"},{"desc":"441","fix":"442"},"Update the dependencies array to be: [champions, roleFilter]",{"range":"443","text":"444"},"Update the dependencies array to be: [championSearch, champions]",{"range":"445","text":"446"},"Update the dependencies array to be: [setChampions, setItems, setRanks, setRoles, setRunes, setSpells]",{"range":"447","text":"448"},"Update the dependencies array to be: [itemsConfirmed, setItemsConfirmed, setSnackbarControls]",{"range":"449","text":"450"},"Update the dependencies array to be: [championName, getBuildsForChampion, isLoading]",{"range":"451","text":"452"},"Update the dependencies array to be: [match.params.buildId]",{"range":"453","text":"454"},"Update the dependencies array to be: [setRecaptchRef]",{"range":"455","text":"456"},[1590,1602],"[champions, roleFilter]",[1902,1918],"[championSearch, champions]",[4198,4200],"[setChampions, setItems, setRanks, setRoles, setRunes, setSpells]",[2429,2445],"[itemsConfirmed, setItemsConfirmed, setSnackbarControls]",[2595,2597],"[championName, getBuildsForChampion, isLoading]",[1658,1660],"[match.params.buildId]",[696,698],"[setRecaptchRef]"]