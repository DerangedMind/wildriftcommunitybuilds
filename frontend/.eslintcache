[{"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\index.tsx":"1","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\reportWebVitals.ts":"2","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\components\\Layout.tsx":"3","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\components\\Header\\Header.tsx":"4","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\components\\Footer\\Footer.tsx":"5","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Landing\\Landing.tsx":"6","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\App\\App.tsx":"7","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Landing\\components\\FilterBy\\FilterBy.tsx":"8","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Landing\\components\\Champions\\Champions.tsx":"9","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\components\\Error\\404\\PageNotFound.tsx":"10","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\components\\Header\\components\\AppBar.tsx":"11","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\CreateBuild.tsx":"12","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\components\\Stepper\\Stepper.tsx":"13","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\components\\BuildInformation\\BuildInformation.tsx":"14","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\components\\BuildSelection\\BuildSelection.tsx":"15","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\components\\PlayerInformation\\PlayerInformation.tsx":"16","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\components\\CreateBuildHeader\\CreateBuildHeader.tsx":"17","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\components\\BuildSelection\\components\\ChampionSelect\\ChampionSelect.tsx":"18","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\components\\BuildSelection\\components\\ItemsSelect\\ItemsSelect.tsx":"19","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\components\\BuildSelection\\components\\ItemsSelected\\ItemsSelected.tsx":"20","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\components\\BuildSelection\\components\\RunesSelect\\RunesSelect.tsx":"21","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\components\\BuildSelection\\components\\RunesSelect\\components\\Keystone.tsx":"22","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\components\\BuildSelection\\components\\RunesSelect\\components\\Domination.tsx":"23","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\components\\BuildSelection\\components\\RunesSelect\\components\\Resolve.tsx":"24","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\components\\BuildSelection\\components\\RunesSelect\\components\\Inspiration.tsx":"25","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\components\\BuildSelection\\components\\SpellsSelect\\SpellsSelect.tsx":"26","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\components\\BuildSelection\\components\\SpellsSelect\\components\\Spell.tsx":"27"},{"size":499,"mtime":1613515858400,"results":"28","hashOfConfig":"29"},{"size":425,"mtime":499162500000,"results":"30","hashOfConfig":"29"},{"size":643,"mtime":1613515741251,"results":"31","hashOfConfig":"29"},{"size":278,"mtime":1613392509686,"results":"32","hashOfConfig":"29"},{"size":1616,"mtime":1613521382916,"results":"33","hashOfConfig":"29"},{"size":2860,"mtime":1613475471509,"results":"34","hashOfConfig":"29"},{"size":4296,"mtime":1613565369711,"results":"35","hashOfConfig":"29"},{"size":1718,"mtime":1613388995743,"results":"36","hashOfConfig":"29"},{"size":1239,"mtime":1613390936658,"results":"37","hashOfConfig":"29"},{"size":121,"mtime":1613391402398,"results":"38","hashOfConfig":"29"},{"size":1863,"mtime":1613392497376,"results":"39","hashOfConfig":"29"},{"size":2247,"mtime":1613573168013,"results":"40","hashOfConfig":"29"},{"size":2030,"mtime":1613569945737,"results":"41","hashOfConfig":"29"},{"size":2378,"mtime":1613572961872,"results":"42","hashOfConfig":"29"},{"size":12106,"mtime":1613572979639,"results":"43","hashOfConfig":"29"},{"size":3073,"mtime":1613573194390,"results":"44","hashOfConfig":"29"},{"size":954,"mtime":1613396524964,"results":"45","hashOfConfig":"29"},{"size":2139,"mtime":1613478107221,"results":"46","hashOfConfig":"29"},{"size":4445,"mtime":1613526681233,"results":"47","hashOfConfig":"29"},{"size":2928,"mtime":1613518280172,"results":"48","hashOfConfig":"29"},{"size":2445,"mtime":1613560685908,"results":"49","hashOfConfig":"29"},{"size":2309,"mtime":1613565931635,"results":"50","hashOfConfig":"29"},{"size":2429,"mtime":1613566434371,"results":"51","hashOfConfig":"29"},{"size":2383,"mtime":1613565941417,"results":"52","hashOfConfig":"29"},{"size":2441,"mtime":1613565936057,"results":"53","hashOfConfig":"29"},{"size":1725,"mtime":1613564873606,"results":"54","hashOfConfig":"29"},{"size":2179,"mtime":1613564860853,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"q16prs",{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"58"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"58"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"58"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"58"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"58"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"90","messages":"91","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"92","messages":"93","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"94","messages":"95","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"58"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"58"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"58"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"58"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"58"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"58"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"58"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"58"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"58"},"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\index.tsx",[],["125","126"],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\reportWebVitals.ts",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\components\\Layout.tsx",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\components\\Header\\Header.tsx",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\components\\Footer\\Footer.tsx",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Landing\\Landing.tsx",["127","128","129","130"],"import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\n// MaterialUI\nimport Box from '@material-ui/core/Box';\n// Components\nimport FilterBy from './components/FilterBy/FilterBy';\nimport Champions from './components/Champions/Champions';\n// CSS\nimport styles from './landing.module.css';\n// Types\nimport { ChampionInterface } from '../../utils/interfaces';\ntype LandingProps = {\n\tchampions: Array<ChampionInterface>;\n\tsetChampions(champs: Array<ChampionInterface>): void;\n};\n\nconst Landing = (props: LandingProps) => {\n\tconst { champions, setChampions } = props;\n\tconst [championSearch, setChampionSearch] = useState('');\n\tconst [filteredChampions, setFilteredChampions] = useState<\n\t\tArray<ChampionInterface>\n\t>([]);\n\tconst [roleFilter, setRoleFilter] = useState('all');\n\n\t// Get all Champions\n\tuseEffect(() => {\n\t\taxios\n\t\t\t.get('/api/champion/all')\n\t\t\t.then((res) => {\n\t\t\t\tconst { data } = res;\n\n\t\t\t\t// Sort Alphabetically\n\t\t\t\tdata.sort(function (a: ChampionInterface, b: ChampionInterface) {\n\t\t\t\t\tif (a.championName < b.championName) {\n\t\t\t\t\t\treturn -1;\n\t\t\t\t\t}\n\t\t\t\t\tif (a.championName > b.championName) {\n\t\t\t\t\t\treturn 1;\n\t\t\t\t\t}\n\t\t\t\t\treturn 0;\n\t\t\t\t});\n\n\t\t\t\tsetChampions([...data]);\n\t\t\t\tsetFilteredChampions([...data]);\n\t\t\t})\n\t\t\t.catch((err) => {\n\t\t\t\tconsole.error('Something went wrong');\n\t\t\t\tconsole.error(err);\n\t\t\t});\n\t}, []);\n\n\t// Change state based on \"All, Top, Jungle, Middle, Bottom, Support\"\n\tuseEffect(() => {\n\t\tconst filterRoles = champions.filter((champion: ChampionInterface) => {\n\t\t\tconst { lane } = champion;\n\n\t\t\t// Check if champion has \"lane\" property\n\t\t\tif (lane) {\n\t\t\t\tif (roleFilter === 'all') {\n\t\t\t\t\treturn champion;\n\t\t\t\t} else {\n\t\t\t\t\tfor (let i = 0; i < lane.length; i++) {\n\t\t\t\t\t\tif (lane[i].toLocaleLowerCase() === roleFilter) {\n\t\t\t\t\t\t\treturn champion;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tsetFilteredChampions(filterRoles);\n\t}, [roleFilter]);\n\n\t// Change state based on \"Search for a champion\"\n\tuseEffect(() => {\n\t\tconst filterChampions = champions.filter((champion: ChampionInterface) =>\n\t\t\tchampion.championName.toLocaleLowerCase().includes(championSearch)\n\t\t);\n\n\t\tsetFilteredChampions(filterChampions);\n\t}, [championSearch]);\n\n\t// HANDLER for \"Search for a champion\" input\n\tconst handleChampionSearchChange = (\n\t\te: React.ChangeEvent<HTMLInputElement> // ChangeEvent more suitable for typing form events.\n\t) => {\n\t\tconst { value } = e.target;\n\t\tsetChampionSearch(value);\n\t};\n\n\tconsole.log(champions.length);\n\n\treturn (\n\t\t<>\n\t\t\t<Box className={styles.landingContainer}>\n\t\t\t\t<FilterBy\n\t\t\t\t\tchampionSearch={championSearch}\n\t\t\t\t\thandleChampionSearchChange={handleChampionSearchChange}\n\t\t\t\t\tsetRoleFilter={setRoleFilter}\n\t\t\t\t/>\n\n\t\t\t\t{champions.length !== 0 ? (\n\t\t\t\t\t<Champions filteredChampions={filteredChampions} />\n\t\t\t\t) : (\n\t\t\t\t\t<p>Loading champions...</p>\n\t\t\t\t)}\n\t\t\t</Box>\n\t\t</>\n\t);\n};\n\nexport default Landing;\n","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\App\\App.tsx",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Landing\\components\\FilterBy\\FilterBy.tsx",["131"],"import React from 'react';\n\n// MaterialUI\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\n// Components\n// CSS\nimport styles from './filterby.module.css';\n// Types\ntype FilterByProps = {\n\tchampionSearch: string;\n\thandleChampionSearchChange(e: React.ChangeEvent<HTMLInputElement>): void;\n\tsetRoleFilter(role: string): void;\n};\n\nconst FilterBy = (props: FilterByProps) => {\n\tconst { championSearch, handleChampionSearchChange, setRoleFilter } = props;\n\n\treturn (\n\t\t<Box className={styles.filterContainer}>\n\t\t\t<Grid container>\n\t\t\t\t<Grid item xs={12} sm={10}>\n\t\t\t\t\t<Box className={styles.rolesListContainer}>\n\t\t\t\t\t\t<ul className={styles.rolesList}>\n\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t<span onClick={() => setRoleFilter('all')}>All</span>\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t<span onClick={() => setRoleFilter('top')}>Top</span>\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t<span onClick={() => setRoleFilter('jungle')}>Jungle</span>\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t<span onClick={() => setRoleFilter('middle')}>Middle</span>\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t<span onClick={() => setRoleFilter('bottom')}>Bottom</span>\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t<span onClick={() => setRoleFilter('support')}>Support</span>\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t</Box>\n\t\t\t\t</Grid>\n\t\t\t\t<Grid item xs={12} sm={2}>\n\t\t\t\t\t<Box className={styles.searchForChampionContainer}>\n\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\tvalue={championSearch}\n\t\t\t\t\t\t\tonChange={handleChampionSearchChange}\n\t\t\t\t\t\t\tlabel='Search a Champion'\n\t\t\t\t\t\t\tvariant='outlined'\n\t\t\t\t\t\t\tsize='small'\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Box>\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t</Box>\n\t);\n};\n\nexport default FilterBy;\n","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Landing\\components\\Champions\\Champions.tsx",["132"],"import React, { FunctionComponent } from 'react';\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\n\n// MaterialUI\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\n// Components\n// Types\nimport { ChampionInterface } from '../../../../utils/interfaces';\n// CSS\nimport styles from './champions.module.css';\n\ntype ChampionsProps = {\n\tfilteredChampions: Array<ChampionInterface>;\n};\n\nconst Champions: FunctionComponent<ChampionsProps> = (props) => {\n\tconst { filteredChampions } = props;\n\n\treturn (\n\t\t<Box display='flex' flexWrap='wrap' className={styles.championsContainer}>\n\t\t\t{filteredChampions.map((champion: ChampionInterface, index) => {\n\t\t\t\tconst { id: championId, championName } = champion;\n\n\t\t\t\treturn (\n\t\t\t\t\t<Box key={index} className={styles.championImageContainer}>\n\t\t\t\t\t\t<a href={`/builds/${championId}`} className={styles.championLink}>\n\t\t\t\t\t\t\t<LazyLoadImage\n\t\t\t\t\t\t\t\tsrc={`/images/wildriftchampions/${championId}.png`}\n\t\t\t\t\t\t\t\tclassName={styles.championImage}\n\t\t\t\t\t\t\t\ttitle={championName}\n\t\t\t\t\t\t\t\talt={championName}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<p className={styles.championName}>{championName}</p>\n\t\t\t\t\t\t</a>\n\t\t\t\t\t</Box>\n\t\t\t\t);\n\t\t\t})}\n\t\t</Box>\n\t);\n};\n\nexport default Champions;\n","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\components\\Error\\404\\PageNotFound.tsx",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\components\\Header\\components\\AppBar.tsx",["133"],"import React from 'react';\n\n// MaterialUI\nimport { makeStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport useScrollTrigger from '@material-ui/core/useScrollTrigger';\nimport Slide from '@material-ui/core/Slide';\n// Components\n// CSS\nimport styles from './appbar.module.css';\nconst useStyles = makeStyles((theme) => ({\n\troot: {\n\t\tflexGrow: 1,\n\t},\n\tmenuLinks: {\n\t\tmarginRight: theme.spacing(2),\n\t},\n\ttitle: {\n\t\tflexGrow: 1,\n\t},\n}));\n//Types\n\nfunction HideOnScroll(props: any) {\n\tconst { children, window } = props;\n\t// Note that you normally won't need to set the window ref as useScrollTrigger\n\t// will default to window.\n\t// This is only being set here because the demo is in an iframe.\n\tconst trigger = useScrollTrigger({ target: window ? window() : undefined });\n\n\treturn (\n\t\t<Slide appear={false} direction='down' in={!trigger}>\n\t\t\t{children}\n\t\t</Slide>\n\t);\n}\n\nHideOnScroll.propTypes = {\n\tchildren: PropTypes.element.isRequired,\n\t/**\n\t * Injected by the documentation to work in an iframe.\n\t * You won't need it on your project.\n\t */\n\twindow: PropTypes.func,\n};\n\nconst AppBarComponent = (props: any) => {\n\tconst classes = useStyles();\n\n\treturn (\n\t\t<div className={classes.root}>\n\t\t\t<HideOnScroll {...props}>\n\t\t\t\t<AppBar className={styles.header}>\n\t\t\t\t\t<Toolbar>\n\t\t\t\t\t\t<a href='/' className={classes.title}>\n\t\t\t\t\t\t\t<img src='/images/riftbuilds.png' className={styles.headerLogo} />\n\t\t\t\t\t\t</a>\n\t\t\t\t\t\t<a href='/' className={styles.headerLink}>\n\t\t\t\t\t\t\t<p className={classes.menuLinks}>Home</p>\n\t\t\t\t\t\t</a>\n\t\t\t\t\t\t<a href='/create' className={styles.headerLink}>\n\t\t\t\t\t\t\t<p className={classes.menuLinks}>Create</p>\n\t\t\t\t\t\t</a>\n\t\t\t\t\t</Toolbar>\n\t\t\t\t</AppBar>\n\t\t\t</HideOnScroll>\n\t\t\t<Toolbar />\n\t\t</div>\n\t);\n};\n\nexport default AppBarComponent;\n","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\CreateBuild.tsx",["134","135","136"],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\components\\Stepper\\Stepper.tsx",["137"],"import React, { useState } from 'react';\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\n\n// MaterialUI\nimport Box from '@material-ui/core/Box';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\n// Types\ntype StepperProps = {\n\tactiveStep: number;\n\tsetActiveStep(step: any): void;\n\tcomponentToDisplay: React.ReactNode;\n};\n// CSS\nconst useStyles = makeStyles((theme: Theme) =>\n\tcreateStyles({\n\t\troot: {\n\t\t\twidth: '100%',\n\t\t},\n\t\tbackButton: {\n\t\t\tmarginRight: theme.spacing(1),\n\t\t},\n\t\tinstructions: {\n\t\t\tmarginTop: theme.spacing(1),\n\t\t\tmarginBottom: theme.spacing(1),\n\t\t},\n\t})\n);\n\nfunction getSteps() {\n\treturn ['Build Information', 'Create Build', 'Player Information'];\n}\n\nconst HorizontalLabelPositionBelowStepper = (props: StepperProps) => {\n\tconst { activeStep, setActiveStep, componentToDisplay } = props;\n\n\tconst classes = useStyles();\n\tconst steps = getSteps();\n\n\tconst handleNext = () => {\n\t\tsetActiveStep((prevActiveStep: number) => prevActiveStep + 1);\n\t};\n\n\tconst handleBack = () => {\n\t\tsetActiveStep((prevActiveStep: number) => prevActiveStep - 1);\n\t};\n\n\tconst handleReset = () => {\n\t\tsetActiveStep(0);\n\t};\n\n\treturn (\n\t\t<div className={classes.root}>\n\t\t\t<div>\n\t\t\t\t{activeStep === steps.length ? (\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<Typography className={classes.instructions}>\n\t\t\t\t\t\t\tAll steps completed\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t<Button onClick={handleReset}>Reset</Button>\n\t\t\t\t\t</div>\n\t\t\t\t) : (\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<Box style={{ padding: '10px 0' }}>{componentToDisplay}</Box>\n\t\t\t\t\t\t<Box display='flex' flexDirection='row-reverse'>\n\t\t\t\t\t\t\t<Button variant='contained' color='primary' onClick={handleNext}>\n\t\t\t\t\t\t\t\t{activeStep === steps.length - 1 ? 'Create Build' : 'Next'}\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\tdisabled={activeStep === 0}\n\t\t\t\t\t\t\t\tonClick={handleBack}\n\t\t\t\t\t\t\t\tclassName={classes.backButton}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tBack\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</Box>\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default HorizontalLabelPositionBelowStepper;\n","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\components\\BuildInformation\\BuildInformation.tsx",["138","139","140","141","142","143","144","145","146","147","148","149","150","151","152","153"],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\components\\BuildSelection\\BuildSelection.tsx",["154","155","156","157","158","159","160","161"],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\components\\PlayerInformation\\PlayerInformation.tsx",["162","163"],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\components\\CreateBuildHeader\\CreateBuildHeader.tsx",["164","165","166","167","168","169","170"],"import React from 'react';\n\n// MaterialUI\nimport Box from '@material-ui/core/Box';\nimport Typography from '@material-ui/core/Typography';\n// Components\n// Types\nimport {\n\tBuildInterface,\n\tCountersInterface,\n\tChampionInterface,\n\tItemInterface,\n\tRankInterface,\n\tRuneInterface,\n\tSpellInterface,\n} from '../../../../../utils/interfaces';\n// CSS\n\nconst CreateBuildHeader = () => {\n\treturn (\n\t\t<Box>\n\t\t\t<Box style={{ padding: '20px 0', marginTop: '20px' }}>\n\t\t\t\t<Typography variant='h6' style={{ fontWeight: 'bold' }} gutterBottom>\n\t\t\t\t\tCreate your build\n\t\t\t\t</Typography>\n\t\t\t\t<Typography variant='body2' style={{ color: '#666666' }} gutterBottom>\n\t\t\t\t\tPlease note that you can only create up to 5 builds every 30 minutes.\n\t\t\t\t</Typography>\n\t\t\t</Box>\n\t\t\t<Box\n\t\t\t\tstyle={{\n\t\t\t\t\twidth: '150px',\n\t\t\t\t\theight: '1px',\n\t\t\t\t\tmargin: '10px 0 20px 0',\n\t\t\t\t\tbackgroundColor: '#000000',\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t&nbsp;\n\t\t\t</Box>\n\t\t</Box>\n\t);\n};\n\nexport default CreateBuildHeader;\n","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\components\\BuildSelection\\components\\ChampionSelect\\ChampionSelect.tsx",["171"],"import React, { useState } from 'react';\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\n\n// MaterialUI\n\nimport Box from '@material-ui/core/Box';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport NativeSelect from '@material-ui/core/NativeSelect';\n// Components\n// CSS\nimport styles from './championselect.module.css';\n// Types\nimport { ChampionInterface } from '../../../../../../../utils/interfaces';\ntype ChampionSelectProps = {\n\tchampions: Array<ChampionInterface>;\n\tchampionSelected: ChampionInterface;\n\thandleChampSelectChange(e: React.ChangeEvent<HTMLSelectElement>): void;\n\tformControl: string;\n};\n\nconst ChampionSelect = (props: ChampionSelectProps) => {\n\tconst {\n\t\tchampions,\n\t\tchampionSelected,\n\t\thandleChampSelectChange,\n\t\tformControl,\n\t} = props;\n\n\treturn (\n\t\t<Box>\n\t\t\t<p>3. Champion</p>\n\n\t\t\t<Box className={styles.championSelectContainer}>\n\t\t\t\t{/* Display Champion Image */}\n\t\t\t\t{championSelected ? (\n\t\t\t\t\t<LazyLoadImage\n\t\t\t\t\t\tsrc={`/images/wildriftchampions/${championSelected.id}.png`}\n\t\t\t\t\t\tclassName={styles.championImage}\n\t\t\t\t\t/>\n\t\t\t\t) : (\n\t\t\t\t\t// Defaults to \"Ahri\"'s image if no champion selected\n\t\t\t\t\t<LazyLoadImage\n\t\t\t\t\t\tsrc={`/images/wildriftchampions/48ca031a-d92e-44e6-b7b6-f3eb1dbe644c.png`}\n\t\t\t\t\t\tclassName={styles.championImage}\n\t\t\t\t\t/>\n\t\t\t\t)}\n\n\t\t\t\t{\n\t\t\t\t\t<FormControl className={formControl}>\n\t\t\t\t\t\t<InputLabel shrink htmlFor='champion-select'>\n\t\t\t\t\t\t\tChampion\n\t\t\t\t\t\t</InputLabel>\n\t\t\t\t\t\t<NativeSelect\n\t\t\t\t\t\t\tvalue={championSelected.id}\n\t\t\t\t\t\t\tonChange={handleChampSelectChange}\n\t\t\t\t\t\t\tinputProps={{\n\t\t\t\t\t\t\t\tname: 'champion',\n\t\t\t\t\t\t\t\tid: 'champion-select',\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{champions.map(\n\t\t\t\t\t\t\t\t({ id, championName }: ChampionInterface, index) => {\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t<option key={index} value={id}>\n\t\t\t\t\t\t\t\t\t\t\t{championName}\n\t\t\t\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</NativeSelect>\n\t\t\t\t\t\t<FormHelperText>Select a champion</FormHelperText>\n\t\t\t\t\t</FormControl>\n\t\t\t\t}\n\t\t\t</Box>\n\t\t</Box>\n\t);\n};\n\nexport default ChampionSelect;\n","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\components\\BuildSelection\\components\\ItemsSelect\\ItemsSelect.tsx",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\components\\BuildSelection\\components\\ItemsSelected\\ItemsSelected.tsx",[],"C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\components\\BuildSelection\\components\\RunesSelect\\RunesSelect.tsx",["172","173","174","175","176","177"],"import React from 'react';\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\n\n// MaterialUI\nimport Box from '@material-ui/core/Box';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport Grid from '@material-ui/core/Grid';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport NativeSelect from '@material-ui/core/NativeSelect';\n// Components\nimport Domination from './components/Domination';\nimport Inspiration from './components/Inspiration';\nimport Keystone from './components/Keystone';\nimport Resolve from './components/Resolve';\n// CSS\nimport styles from './runesselect.module.css';\n// Types\nimport {\n\tRuneInterface,\n\tRunesSelectedType,\n} from '../../../../../../../utils/interfaces';\ntype RunesSelectProps = {\n\tformControl: string;\n\trunes: Array<RuneInterface>;\n\trunesSelected: RunesSelectedType;\n\thandleRuneSelectChange(\n\t\te: React.ChangeEvent<HTMLSelectElement>,\n\t\truneType: string,\n\t\trunePath?: string\n\t): void;\n\thandleRuneExplanationChange(\n\t\te: React.ChangeEvent<HTMLTextAreaElement>,\n\t\truneType: string\n\t): void;\n};\n\nconst RunesSelect = (props: RunesSelectProps) => {\n\tconst {\n\t\tformControl,\n\t\trunes,\n\t\trunesSelected,\n\t\thandleRuneSelectChange,\n\t\thandleRuneExplanationChange,\n\t} = props;\n\n\treturn (\n\t\t<Box>\n\t\t\t<p>5. Runes</p>\n\n\t\t\t<Grid container item xs={12}>\n\t\t\t\t{/* KEYSTONE Rune */}\n\t\t\t\t<Keystone\n\t\t\t\t\tformControl={formControl}\n\t\t\t\t\trunes={runes}\n\t\t\t\t\trunesSelected={runesSelected}\n\t\t\t\t\thandleRuneSelectChange={handleRuneSelectChange}\n\t\t\t\t\thandleRuneExplanationChange={handleRuneExplanationChange}\n\t\t\t\t/>\n\n\t\t\t\t{/* Secondary: Domination */}\n\t\t\t\t<Domination\n\t\t\t\t\tformControl={formControl}\n\t\t\t\t\trunes={runes}\n\t\t\t\t\trunesSelected={runesSelected}\n\t\t\t\t\thandleRuneSelectChange={handleRuneSelectChange}\n\t\t\t\t\thandleRuneExplanationChange={handleRuneExplanationChange}\n\t\t\t\t/>\n\n\t\t\t\t{/* Secondary: Resolve */}\n\t\t\t\t<Resolve\n\t\t\t\t\tformControl={formControl}\n\t\t\t\t\trunes={runes}\n\t\t\t\t\trunesSelected={runesSelected}\n\t\t\t\t\thandleRuneSelectChange={handleRuneSelectChange}\n\t\t\t\t\thandleRuneExplanationChange={handleRuneExplanationChange}\n\t\t\t\t/>\n\n\t\t\t\t{/* Secondary: Inspiration */}\n\t\t\t\t<Inspiration\n\t\t\t\t\tformControl={formControl}\n\t\t\t\t\trunes={runes}\n\t\t\t\t\trunesSelected={runesSelected}\n\t\t\t\t\thandleRuneSelectChange={handleRuneSelectChange}\n\t\t\t\t\thandleRuneExplanationChange={handleRuneExplanationChange}\n\t\t\t\t/>\n\t\t\t</Grid>\n\t\t</Box>\n\t);\n};\n\nexport default RunesSelect;\n","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\components\\BuildSelection\\components\\RunesSelect\\components\\Keystone.tsx",["178"],"import React from 'react';\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\n\n// MaterialUI\nimport Box from '@material-ui/core/Box';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport Grid from '@material-ui/core/Grid';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport NativeSelect from '@material-ui/core/NativeSelect';\n// Components\n// CSS\nimport styles from './rune.module.css';\n// Types\nimport {\n\tRuneInterface,\n\tRunesSelectedType,\n} from '../../../../../../../../utils/interfaces';\ntype KeystoneProps = {\n\tformControl: string;\n\trunes: Array<RuneInterface>;\n\trunesSelected: RunesSelectedType;\n\thandleRuneSelectChange(\n\t\te: React.ChangeEvent<HTMLSelectElement>,\n\t\truneType: string,\n\t\trunePath?: string\n\t): void;\n\thandleRuneExplanationChange(\n\t\te: React.ChangeEvent<HTMLTextAreaElement>,\n\t\truneType: string\n\t): void;\n};\n\nconst Keystone = (props: KeystoneProps) => {\n\tconst {\n\t\tformControl,\n\t\trunes,\n\t\trunesSelected,\n\t\thandleRuneSelectChange,\n\t\thandleRuneExplanationChange,\n\t} = props;\n\n\treturn (\n\t\t<>\n\t\t\t<Grid item xs={12} sm={6}>\n\t\t\t\t<LazyLoadImage\n\t\t\t\t\tsrc={`/images/wildriftrunes/${runesSelected.keystone.id}.png`}\n\t\t\t\t\tclassName={styles.runeImage}\n\t\t\t\t/>\n\n\t\t\t\t{\n\t\t\t\t\t<FormControl className={formControl}>\n\t\t\t\t\t\t<InputLabel shrink htmlFor='rune-select'>\n\t\t\t\t\t\t\tKeystone\n\t\t\t\t\t\t</InputLabel>\n\t\t\t\t\t\t<NativeSelect\n\t\t\t\t\t\t\tonChange={(e) => handleRuneSelectChange(e, 'keystone')}\n\t\t\t\t\t\t\tinputProps={{\n\t\t\t\t\t\t\t\tname: 'rune',\n\t\t\t\t\t\t\t\tid: 'rune-select',\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{runes\n\t\t\t\t\t\t\t\t.filter((rune) => rune.type === 'keystone')\n\t\t\t\t\t\t\t\t.map(({ id, runeName, url }: RuneInterface, index) => {\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t<option key={index} value={id}>\n\t\t\t\t\t\t\t\t\t\t\t{runeName}\n\t\t\t\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t</NativeSelect>\n\t\t\t\t\t\t<FormHelperText>Select a Keystone Rune</FormHelperText>\n\t\t\t\t\t</FormControl>\n\t\t\t\t}\n\t\t\t</Grid>\n\t\t\t<Grid item xs={12} sm={6}>\n\t\t\t\t<textarea\n\t\t\t\t\tid='runeKeystone'\n\t\t\t\t\tname='runeKeystone'\n\t\t\t\t\trows={6}\n\t\t\t\t\tplaceholder='Add an explanation for this rune'\n\t\t\t\t\tclassName={styles.explanationTextArea}\n\t\t\t\t\t// value={itemReason}\n\t\t\t\t\tonChange={(e) => handleRuneExplanationChange(e, 'keystone')}\n\t\t\t\t></textarea>\n\t\t\t</Grid>\n\t\t</>\n\t);\n};\n\nexport default Keystone;\n","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\components\\BuildSelection\\components\\RunesSelect\\components\\Domination.tsx",["179"],"import React from 'react';\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\n\n// MaterialUI\nimport Box from '@material-ui/core/Box';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport Grid from '@material-ui/core/Grid';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport NativeSelect from '@material-ui/core/NativeSelect';\n// Components\n// CSS\nimport styles from './rune.module.css';\n// Types\nimport {\n\tRuneInterface,\n\tRunesSelectedType,\n} from '../../../../../../../../utils/interfaces';\ntype DominationProps = {\n\tformControl: string;\n\trunes: Array<RuneInterface>;\n\trunesSelected: RunesSelectedType;\n\thandleRuneSelectChange(\n\t\te: React.ChangeEvent<HTMLSelectElement>,\n\t\truneType: string,\n\t\trunePath?: string\n\t): void;\n\thandleRuneExplanationChange(\n\t\te: React.ChangeEvent<HTMLTextAreaElement>,\n\t\truneType: string\n\t): void;\n};\n\nconst Domination = (props: DominationProps) => {\n\tconst {\n\t\tformControl,\n\t\trunes,\n\t\trunesSelected,\n\t\thandleRuneSelectChange,\n\t\thandleRuneExplanationChange,\n\t} = props;\n\n\treturn (\n\t\t<>\n\t\t\t<Grid item xs={12} sm={6}>\n\t\t\t\t<LazyLoadImage\n\t\t\t\t\tsrc={`/images/wildriftrunes/${runesSelected.domination.id}.png`}\n\t\t\t\t\tclassName={styles.runeImage}\n\t\t\t\t/>\n\n\t\t\t\t{\n\t\t\t\t\t<FormControl className={formControl}>\n\t\t\t\t\t\t<InputLabel shrink htmlFor='rune-select'>\n\t\t\t\t\t\t\tDomination (Slot 1)\n\t\t\t\t\t\t</InputLabel>\n\t\t\t\t\t\t<NativeSelect\n\t\t\t\t\t\t\tonChange={(e) =>\n\t\t\t\t\t\t\t\thandleRuneSelectChange(e, 'secondary', 'domination')\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tinputProps={{\n\t\t\t\t\t\t\t\tname: 'rune',\n\t\t\t\t\t\t\t\tid: 'rune-select',\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{runes\n\t\t\t\t\t\t\t\t.filter(\n\t\t\t\t\t\t\t\t\t(rune) =>\n\t\t\t\t\t\t\t\t\t\trune.type === 'secondary' && rune.path === 'domination'\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t.map(({ id, runeName, url }: RuneInterface, index) => {\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t<option key={index} value={id}>\n\t\t\t\t\t\t\t\t\t\t\t{runeName}\n\t\t\t\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t</NativeSelect>\n\t\t\t\t\t\t<FormHelperText>Select a Domination Rune</FormHelperText>\n\t\t\t\t\t</FormControl>\n\t\t\t\t}\n\t\t\t</Grid>\n\t\t\t<Grid item xs={12} sm={6}>\n\t\t\t\t<textarea\n\t\t\t\t\tid='runeDomination'\n\t\t\t\t\tname='runeDomination'\n\t\t\t\t\trows={6}\n\t\t\t\t\tplaceholder='Add an explanation for this rune'\n\t\t\t\t\tclassName={styles.explanationTextArea}\n\t\t\t\t\t// value={itemReason}\n\t\t\t\t\tonChange={(e) => handleRuneExplanationChange(e, 'domination')}\n\t\t\t\t></textarea>\n\t\t\t</Grid>\n\t\t</>\n\t);\n};\n\nexport default Domination;\n","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\components\\BuildSelection\\components\\RunesSelect\\components\\Resolve.tsx",["180"],"import React from 'react';\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\n\n// MaterialUI\nimport Box from '@material-ui/core/Box';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport Grid from '@material-ui/core/Grid';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport NativeSelect from '@material-ui/core/NativeSelect';\n// Components\n// CSS\nimport styles from './rune.module.css';\n// Types\nimport {\n\tRuneInterface,\n\tRunesSelectedType,\n} from '../../../../../../../../utils/interfaces';\ntype ResolveProps = {\n\tformControl: string;\n\trunes: Array<RuneInterface>;\n\trunesSelected: RunesSelectedType;\n\thandleRuneSelectChange(\n\t\te: React.ChangeEvent<HTMLSelectElement>,\n\t\truneType: string,\n\t\trunePath?: string\n\t): void;\n\thandleRuneExplanationChange(\n\t\te: React.ChangeEvent<HTMLTextAreaElement>,\n\t\truneType: string\n\t): void;\n};\n\nconst Resolve = (props: ResolveProps) => {\n\tconst {\n\t\tformControl,\n\t\trunes,\n\t\trunesSelected,\n\t\thandleRuneSelectChange,\n\t\thandleRuneExplanationChange,\n\t} = props;\n\n\treturn (\n\t\t<>\n\t\t\t<Grid item xs={12} sm={6}>\n\t\t\t\t<LazyLoadImage\n\t\t\t\t\tsrc={`/images/wildriftrunes/${runesSelected.resolve.id}.png`}\n\t\t\t\t\tclassName={styles.runeImage}\n\t\t\t\t/>\n\n\t\t\t\t{\n\t\t\t\t\t<FormControl className={formControl}>\n\t\t\t\t\t\t<InputLabel shrink htmlFor='rune-select'>\n\t\t\t\t\t\t\tResolve (Slot 2)\n\t\t\t\t\t\t</InputLabel>\n\t\t\t\t\t\t<NativeSelect\n\t\t\t\t\t\t\tonChange={(e) =>\n\t\t\t\t\t\t\t\thandleRuneSelectChange(e, 'secondary', 'resolve')\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tinputProps={{\n\t\t\t\t\t\t\t\tname: 'rune',\n\t\t\t\t\t\t\t\tid: 'rune-select',\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{runes\n\t\t\t\t\t\t\t\t.filter(\n\t\t\t\t\t\t\t\t\t(rune) => rune.type === 'secondary' && rune.path === 'resolve'\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t.map(({ id, runeName, url }: RuneInterface, index) => {\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t<option key={index} value={id}>\n\t\t\t\t\t\t\t\t\t\t\t{runeName}\n\t\t\t\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t</NativeSelect>\n\t\t\t\t\t\t<FormHelperText>Select a Resolve Rune</FormHelperText>\n\t\t\t\t\t</FormControl>\n\t\t\t\t}\n\t\t\t</Grid>\n\t\t\t<Grid item xs={12} sm={6}>\n\t\t\t\t<textarea\n\t\t\t\t\tid='runeResolve'\n\t\t\t\t\tname='runeResolve'\n\t\t\t\t\trows={6}\n\t\t\t\t\tplaceholder='Add an explanation for this rune'\n\t\t\t\t\tclassName={styles.explanationTextArea}\n\t\t\t\t\t// value={itemReason}\n\t\t\t\t\tonChange={(e) => handleRuneExplanationChange(e, 'resolve')}\n\t\t\t\t></textarea>\n\t\t\t</Grid>\n\t\t</>\n\t);\n};\n\nexport default Resolve;\n","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\components\\BuildSelection\\components\\RunesSelect\\components\\Inspiration.tsx",["181"],"import React from 'react';\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\n\n// MaterialUI\nimport Box from '@material-ui/core/Box';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport Grid from '@material-ui/core/Grid';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport NativeSelect from '@material-ui/core/NativeSelect';\n// Components\n// CSS\nimport styles from './rune.module.css';\n// Types\nimport {\n\tRuneInterface,\n\tRunesSelectedType,\n} from '../../../../../../../../utils/interfaces';\ntype InspirationProps = {\n\tformControl: string;\n\trunes: Array<RuneInterface>;\n\trunesSelected: RunesSelectedType;\n\thandleRuneSelectChange(\n\t\te: React.ChangeEvent<HTMLSelectElement>,\n\t\truneType: string,\n\t\trunePath?: string\n\t): void;\n\thandleRuneExplanationChange(\n\t\te: React.ChangeEvent<HTMLTextAreaElement>,\n\t\truneType: string\n\t): void;\n};\n\nconst Inspiration = (props: InspirationProps) => {\n\tconst {\n\t\tformControl,\n\t\trunes,\n\t\trunesSelected,\n\t\thandleRuneSelectChange,\n\t\thandleRuneExplanationChange,\n\t} = props;\n\n\treturn (\n\t\t<>\n\t\t\t<Grid item xs={12} sm={6}>\n\t\t\t\t<LazyLoadImage\n\t\t\t\t\tsrc={`/images/wildriftrunes/${runesSelected.inspiration.id}.png`}\n\t\t\t\t\tclassName={styles.runeImage}\n\t\t\t\t/>\n\n\t\t\t\t{\n\t\t\t\t\t<FormControl className={formControl}>\n\t\t\t\t\t\t<InputLabel shrink htmlFor='rune-select'>\n\t\t\t\t\t\t\tInspiration (Slot 3)\n\t\t\t\t\t\t</InputLabel>\n\t\t\t\t\t\t<NativeSelect\n\t\t\t\t\t\t\tonChange={(e) =>\n\t\t\t\t\t\t\t\thandleRuneSelectChange(e, 'secondary', 'inspiration')\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tinputProps={{\n\t\t\t\t\t\t\t\tname: 'rune',\n\t\t\t\t\t\t\t\tid: 'rune-select',\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{runes\n\t\t\t\t\t\t\t\t.filter(\n\t\t\t\t\t\t\t\t\t(rune) =>\n\t\t\t\t\t\t\t\t\t\trune.type === 'secondary' && rune.path === 'inspiration'\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t.map(({ id, runeName, url }: RuneInterface, index) => {\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t<option key={index} value={id}>\n\t\t\t\t\t\t\t\t\t\t\t{runeName}\n\t\t\t\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t</NativeSelect>\n\t\t\t\t\t\t<FormHelperText>Select a Inspiration Rune</FormHelperText>\n\t\t\t\t\t</FormControl>\n\t\t\t\t}\n\t\t\t</Grid>\n\t\t\t<Grid item xs={12} sm={6}>\n\t\t\t\t<textarea\n\t\t\t\t\tid='runeInspiration'\n\t\t\t\t\tname='runeInspiration'\n\t\t\t\t\trows={6}\n\t\t\t\t\tplaceholder='Add an explanation for this rune'\n\t\t\t\t\tclassName={styles.explanationTextArea}\n\t\t\t\t\t// value={itemReason}\n\t\t\t\t\tonChange={(e) => handleRuneExplanationChange(e, 'inspiration')}\n\t\t\t\t></textarea>\n\t\t\t</Grid>\n\t\t</>\n\t);\n};\n\nexport default Inspiration;\n","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\components\\BuildSelection\\components\\SpellsSelect\\SpellsSelect.tsx",["182","183","184","185","186","187","188","189","190","191"],"import React from 'react';\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\n\n// MaterialUI\nimport Box from '@material-ui/core/Box';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport Grid from '@material-ui/core/Grid';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport NativeSelect from '@material-ui/core/NativeSelect';\nimport Typography from '@material-ui/core/Typography';\n// Components\nimport Spell from './components/Spell';\n// CSS\nimport styles from './spellsselect.module.css';\n// Types\nimport {\n\tSpellInterface,\n\tSpellsSelectedType,\n} from '../../../../../../../utils/interfaces';\ntype SpellsSelectProps = {\n\tformControl: string;\n\tspells: Array<SpellInterface>;\n\tspellsSelected: SpellsSelectedType;\n\thandleSpellSelectChange(\n\t\te: React.ChangeEvent<HTMLSelectElement>,\n\t\tspellNumber: string\n\t): void;\n};\n\nconst SpellsSelect = (props: SpellsSelectProps) => {\n\tconst {\n\t\tformControl,\n\t\tspells,\n\t\tspellsSelected,\n\t\thandleSpellSelectChange,\n\t} = props;\n\tconst { spellOne, spellTwo } = spellsSelected;\n\n\treturn (\n\t\t<Box>\n\t\t\t<p>6. Summoner Spells</p>\n\n\t\t\t<Grid container item xs={12}>\n\t\t\t\t{/* Spell One */}\n\t\t\t\t<Spell\n\t\t\t\t\tformControl={formControl}\n\t\t\t\t\tspells={spells}\n\t\t\t\t\tspellNumber={1}\n\t\t\t\t\tspellsSelected={spellsSelected}\n\t\t\t\t\thandleSpellSelectChange={handleSpellSelectChange}\n\t\t\t\t/>\n\n\t\t\t\t{/* Spell Two */}\n\t\t\t\t<Spell\n\t\t\t\t\tformControl={formControl}\n\t\t\t\t\tspells={spells}\n\t\t\t\t\tspellNumber={2}\n\t\t\t\t\tspellsSelected={spellsSelected}\n\t\t\t\t\thandleSpellSelectChange={handleSpellSelectChange}\n\t\t\t\t/>\n\t\t\t</Grid>\n\t\t</Box>\n\t);\n};\n\nexport default SpellsSelect;\n","C:\\Users\\Workstation\\Desktop\\Programming\\wildriftbuildsdatabase\\frontend\\src\\pages\\Create\\Build\\components\\BuildSelection\\components\\SpellsSelect\\components\\Spell.tsx",["192","193","194","195"],"import React from 'react';\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\n\n// MaterialUI\nimport Box from '@material-ui/core/Box';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport Grid from '@material-ui/core/Grid';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport NativeSelect from '@material-ui/core/NativeSelect';\nimport Typography from '@material-ui/core/Typography';\n// Components\n// CSS\nimport styles from './spell.module.css';\n// Types\nimport {\n\tSpellInterface,\n\tSpellsSelectedType,\n} from '../../../../../../../../utils/interfaces';\ntype SpellProps = {\n\tformControl: string;\n\tspells: Array<SpellInterface>;\n\tspellNumber: number;\n\tspellsSelected: SpellsSelectedType;\n\thandleSpellSelectChange(\n\t\te: React.ChangeEvent<HTMLSelectElement>,\n\t\tspellNumber: string\n\t): void;\n};\n\nconst Spell = (props: SpellProps) => {\n\tconst {\n\t\tformControl,\n\t\tspells,\n\t\tspellNumber,\n\t\tspellsSelected,\n\t\thandleSpellSelectChange,\n\t} = props;\n\tconst { spellOne, spellTwo } = spellsSelected;\n\n\treturn (\n\t\t<Grid item xs={12} sm={3} style={{ marginTop: '10px' }}>\n\t\t\t<LazyLoadImage\n\t\t\t\tsrc={`/images/wildriftspells/${\n\t\t\t\t\tspellNumber === 1 ? spellOne.id : spellTwo.id\n\t\t\t\t}.jpg`}\n\t\t\t\tstyle={{ width: '90px' }}\n\t\t\t/>\n\n\t\t\t{\n\t\t\t\t<FormControl className={formControl}>\n\t\t\t\t\t<InputLabel shrink htmlFor='spell-select'>\n\t\t\t\t\t\t{spellNumber === 1 ? 'Spell One' : 'Spell Two'}\n\t\t\t\t\t</InputLabel>\n\t\t\t\t\t<NativeSelect\n\t\t\t\t\t\tdefaultValue={`${spellNumber === 1 ? spellOne.id : spellTwo.id}`}\n\t\t\t\t\t\tonChange={(e) =>\n\t\t\t\t\t\t\thandleSpellSelectChange(\n\t\t\t\t\t\t\t\te,\n\t\t\t\t\t\t\t\t`${spellNumber === 1 ? 'spellOne' : 'spellTwo'}`\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t}\n\t\t\t\t\t\tinputProps={{\n\t\t\t\t\t\t\tname: 'spell',\n\t\t\t\t\t\t\tid: 'spell-select',\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t{spells.map(({ id, spellName, url }: SpellInterface, index) => {\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<option key={index} value={id}>\n\t\t\t\t\t\t\t\t\t{spellName}\n\t\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t})}\n\t\t\t\t\t</NativeSelect>\n\t\t\t\t\t<FormHelperText>Select a Spell</FormHelperText>\n\t\t\t\t</FormControl>\n\t\t\t}\n\t\t</Grid>\n\t);\n};\n\nexport default Spell;\n",{"ruleId":"196","replacedBy":"197"},{"ruleId":"198","replacedBy":"199"},{"ruleId":"200","severity":1,"message":"201","line":51,"column":5,"nodeType":"202","endLine":51,"endColumn":7,"suggestions":"203"},{"ruleId":"204","severity":1,"message":"205","line":55,"column":70,"nodeType":"206","messageId":"207","endLine":55,"endColumn":72},{"ruleId":"200","severity":1,"message":"208","line":73,"column":5,"nodeType":"202","endLine":73,"endColumn":17,"suggestions":"209"},{"ruleId":"200","severity":1,"message":"208","line":82,"column":5,"nodeType":"202","endLine":82,"endColumn":21,"suggestions":"210"},{"ruleId":"211","severity":1,"message":"212","line":4,"column":8,"nodeType":"213","messageId":"214","endLine":4,"endColumn":18},{"ruleId":"211","severity":1,"message":"212","line":5,"column":8,"nodeType":"213","messageId":"214","endLine":5,"endColumn":18},{"ruleId":"215","severity":1,"message":"216","line":58,"column":8,"nodeType":"217","endLine":58,"endColumn":74},{"ruleId":"211","severity":1,"message":"218","line":13,"column":8,"nodeType":"213","messageId":"214","endLine":13,"endColumn":14},{"ruleId":"211","severity":1,"message":"219","line":16,"column":2,"nodeType":"213","messageId":"214","endLine":16,"endColumn":16},{"ruleId":"211","severity":1,"message":"220","line":17,"column":2,"nodeType":"213","messageId":"214","endLine":17,"endColumn":19},{"ruleId":"211","severity":1,"message":"221","line":1,"column":17,"nodeType":"213","messageId":"214","endLine":1,"endColumn":25},{"ruleId":"211","severity":1,"message":"222","line":5,"column":8,"nodeType":"213","messageId":"214","endLine":5,"endColumn":19},{"ruleId":"211","severity":1,"message":"223","line":6,"column":8,"nodeType":"213","messageId":"214","endLine":6,"endColumn":24},{"ruleId":"211","severity":1,"message":"224","line":7,"column":8,"nodeType":"213","messageId":"214","endLine":7,"endColumn":22},{"ruleId":"211","severity":1,"message":"225","line":9,"column":8,"nodeType":"213","messageId":"214","endLine":9,"endColumn":18},{"ruleId":"211","severity":1,"message":"226","line":10,"column":8,"nodeType":"213","messageId":"214","endLine":10,"endColumn":20},{"ruleId":"211","severity":1,"message":"227","line":11,"column":8,"nodeType":"213","messageId":"214","endLine":11,"endColumn":14},{"ruleId":"211","severity":1,"message":"218","line":14,"column":8,"nodeType":"213","messageId":"214","endLine":14,"endColumn":14},{"ruleId":"211","severity":1,"message":"219","line":17,"column":2,"nodeType":"213","messageId":"214","endLine":17,"endColumn":16},{"ruleId":"211","severity":1,"message":"220","line":18,"column":2,"nodeType":"213","messageId":"214","endLine":18,"endColumn":19},{"ruleId":"211","severity":1,"message":"228","line":19,"column":2,"nodeType":"213","messageId":"214","endLine":19,"endColumn":19},{"ruleId":"211","severity":1,"message":"229","line":20,"column":2,"nodeType":"213","messageId":"214","endLine":20,"endColumn":15},{"ruleId":"211","severity":1,"message":"230","line":21,"column":2,"nodeType":"213","messageId":"214","endLine":21,"endColumn":15},{"ruleId":"211","severity":1,"message":"231","line":22,"column":2,"nodeType":"213","messageId":"214","endLine":22,"endColumn":15},{"ruleId":"211","severity":1,"message":"232","line":23,"column":2,"nodeType":"213","messageId":"214","endLine":23,"endColumn":16},{"ruleId":"211","severity":1,"message":"233","line":31,"column":10,"nodeType":"213","messageId":"214","endLine":31,"endColumn":21},{"ruleId":"200","severity":1,"message":"234","line":56,"column":5,"nodeType":"202","endLine":56,"endColumn":28,"suggestions":"235"},{"ruleId":"211","severity":1,"message":"236","line":1,"column":38,"nodeType":"213","messageId":"214","endLine":1,"endColumn":52},{"ruleId":"211","severity":1,"message":"237","line":4,"column":8,"nodeType":"213","messageId":"214","endLine":4,"endColumn":11},{"ruleId":"211","severity":1,"message":"218","line":12,"column":8,"nodeType":"213","messageId":"214","endLine":12,"endColumn":14},{"ruleId":"211","severity":1,"message":"219","line":15,"column":2,"nodeType":"213","messageId":"214","endLine":15,"endColumn":16},{"ruleId":"211","severity":1,"message":"220","line":16,"column":2,"nodeType":"213","messageId":"214","endLine":16,"endColumn":19},{"ruleId":"211","severity":1,"message":"230","line":19,"column":2,"nodeType":"213","messageId":"214","endLine":19,"endColumn":15},{"ruleId":"238","severity":1,"message":"239","line":334,"column":35,"nodeType":"240","messageId":"241","endLine":334,"endColumn":37},{"ruleId":"200","severity":1,"message":"234","line":370,"column":5,"nodeType":"202","endLine":370,"endColumn":70,"suggestions":"242"},{"ruleId":"211","severity":1,"message":"218","line":15,"column":8,"nodeType":"213","messageId":"214","endLine":15,"endColumn":14},{"ruleId":"200","severity":1,"message":"234","line":60,"column":5,"nodeType":"202","endLine":60,"endColumn":29,"suggestions":"243"},{"ruleId":"211","severity":1,"message":"219","line":9,"column":2,"nodeType":"213","messageId":"214","endLine":9,"endColumn":16},{"ruleId":"211","severity":1,"message":"220","line":10,"column":2,"nodeType":"213","messageId":"214","endLine":10,"endColumn":19},{"ruleId":"211","severity":1,"message":"228","line":11,"column":2,"nodeType":"213","messageId":"214","endLine":11,"endColumn":19},{"ruleId":"211","severity":1,"message":"229","line":12,"column":2,"nodeType":"213","messageId":"214","endLine":12,"endColumn":15},{"ruleId":"211","severity":1,"message":"230","line":13,"column":2,"nodeType":"213","messageId":"214","endLine":13,"endColumn":15},{"ruleId":"211","severity":1,"message":"231","line":14,"column":2,"nodeType":"213","messageId":"214","endLine":14,"endColumn":15},{"ruleId":"211","severity":1,"message":"232","line":15,"column":2,"nodeType":"213","messageId":"214","endLine":15,"endColumn":16},{"ruleId":"211","severity":1,"message":"221","line":1,"column":17,"nodeType":"213","messageId":"214","endLine":1,"endColumn":25},{"ruleId":"211","severity":1,"message":"244","line":2,"column":10,"nodeType":"213","messageId":"214","endLine":2,"endColumn":23},{"ruleId":"211","severity":1,"message":"222","line":6,"column":8,"nodeType":"213","messageId":"214","endLine":6,"endColumn":19},{"ruleId":"211","severity":1,"message":"224","line":7,"column":8,"nodeType":"213","messageId":"214","endLine":7,"endColumn":22},{"ruleId":"211","severity":1,"message":"225","line":9,"column":8,"nodeType":"213","messageId":"214","endLine":9,"endColumn":18},{"ruleId":"211","severity":1,"message":"226","line":10,"column":8,"nodeType":"213","messageId":"214","endLine":10,"endColumn":20},{"ruleId":"211","severity":1,"message":"218","line":17,"column":8,"nodeType":"213","messageId":"214","endLine":17,"endColumn":14},{"ruleId":"211","severity":1,"message":"237","line":5,"column":8,"nodeType":"213","messageId":"214","endLine":5,"endColumn":11},{"ruleId":"211","severity":1,"message":"237","line":5,"column":8,"nodeType":"213","messageId":"214","endLine":5,"endColumn":11},{"ruleId":"211","severity":1,"message":"237","line":5,"column":8,"nodeType":"213","messageId":"214","endLine":5,"endColumn":11},{"ruleId":"211","severity":1,"message":"237","line":5,"column":8,"nodeType":"213","messageId":"214","endLine":5,"endColumn":11},{"ruleId":"211","severity":1,"message":"244","line":2,"column":10,"nodeType":"213","messageId":"214","endLine":2,"endColumn":23},{"ruleId":"211","severity":1,"message":"222","line":6,"column":8,"nodeType":"213","messageId":"214","endLine":6,"endColumn":19},{"ruleId":"211","severity":1,"message":"223","line":7,"column":8,"nodeType":"213","messageId":"214","endLine":7,"endColumn":24},{"ruleId":"211","severity":1,"message":"224","line":8,"column":8,"nodeType":"213","messageId":"214","endLine":8,"endColumn":22},{"ruleId":"211","severity":1,"message":"225","line":10,"column":8,"nodeType":"213","messageId":"214","endLine":10,"endColumn":18},{"ruleId":"211","severity":1,"message":"226","line":11,"column":8,"nodeType":"213","messageId":"214","endLine":11,"endColumn":20},{"ruleId":"211","severity":1,"message":"212","line":12,"column":8,"nodeType":"213","messageId":"214","endLine":12,"endColumn":18},{"ruleId":"211","severity":1,"message":"218","line":16,"column":8,"nodeType":"213","messageId":"214","endLine":16,"endColumn":14},{"ruleId":"211","severity":1,"message":"245","line":39,"column":10,"nodeType":"213","messageId":"214","endLine":39,"endColumn":18},{"ruleId":"211","severity":1,"message":"246","line":39,"column":20,"nodeType":"213","messageId":"214","endLine":39,"endColumn":28},{"ruleId":"211","severity":1,"message":"237","line":5,"column":8,"nodeType":"213","messageId":"214","endLine":5,"endColumn":11},{"ruleId":"211","severity":1,"message":"223","line":7,"column":8,"nodeType":"213","messageId":"214","endLine":7,"endColumn":24},{"ruleId":"211","severity":1,"message":"212","line":12,"column":8,"nodeType":"213","messageId":"214","endLine":12,"endColumn":18},{"ruleId":"211","severity":1,"message":"218","line":15,"column":8,"nodeType":"213","messageId":"214","endLine":15,"endColumn":14},"no-native-reassign",["247"],"no-negated-in-lhs",["248"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setChampions'. Either include it or remove the dependency array.","ArrayExpression",["249"],"array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","React Hook useEffect has a missing dependency: 'champions'. Either include it or remove the dependency array.",["250"],["251"],"@typescript-eslint/no-unused-vars","'Typography' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'styles' is defined but never used.","'BuildInterface' is defined but never used.","'CountersInterface' is defined but never used.","'useState' is defined but never used.","'FormControl' is defined but never used.","'FormControlLabel' is defined but never used.","'FormHelperText' is defined but never used.","'InputLabel' is defined but never used.","'NativeSelect' is defined but never used.","'Select' is defined but never used.","'ChampionInterface' is defined but never used.","'ItemInterface' is defined but never used.","'RankInterface' is defined but never used.","'RuneInterface' is defined but never used.","'SpellInterface' is defined but never used.","'formControl' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'setBuild'. Either include it or remove the dependency array.",["252"],"'SetStateAction' is defined but never used.","'Box' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected",["253"],["254"],"'LazyLoadImage' is defined but never used.","'spellOne' is assigned a value but never used.","'spellTwo' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"255","fix":"256"},{"desc":"257","fix":"258"},{"desc":"259","fix":"260"},{"desc":"261","fix":"262"},{"desc":"263","fix":"264"},{"desc":"265","fix":"266"},"Update the dependencies array to be: [setChampions]",{"range":"267","text":"268"},"Update the dependencies array to be: [champions, roleFilter]",{"range":"269","text":"270"},"Update the dependencies array to be: [championSearch, champions]",{"range":"271","text":"272"},"Update the dependencies array to be: [buildTitle, buildRole, setBuild]",{"range":"273","text":"274"},"Update the dependencies array to be: [championSelected, itemsConfirmed, runesSelected, setBuild, spellsSelected]",{"range":"275","text":"276"},"Update the dependencies array to be: [username, rankSelected, setBuild]",{"range":"277","text":"278"},[1349,1351],"[setChampions]",[1874,1886],"[champions, roleFilter]",[2156,2172],"[championSearch, champions]",[1638,1661],"[buildTitle, buildRole, setBuild]",[10800,10865],"[championSelected, itemsConfirmed, runesSelected, setBuild, spellsSelected]",[1871,1895],"[username, rankSelected, setBuild]"]